# Name of your application. Used to uniquely configure containers.
service: rubyvideo

# Name of the container image.
image: adrienpoly/rubyvideo

# Deploy to these servers.
servers:
  web:
    - 91.107.208.207

  job:
    hosts:
      - 91.107.208.207
    cmd: bin/jobs

# Enable SSL auto certification via Let's Encrypt (and allow for multiple apps on one server).
# If using something like Cloudflare, it is recommended to set encryption mode
# in Cloudflare's SSL/TLS setting to "Full" to enable end-to-end encryption.
proxy:
  ssl: true
  hosts:
    - rubyvideo.dev
    - www.rubyvideo.dev
  # kamal-proxy connects to your container over port 80, use `app_port` to specify a different port.
  app_port: 80

# Credentials for your image host.
registry:
  username: adrienpoly
  password:
    - KAMAL_REGISTRY_PASSWORD

# Configure builder setup.
builder:
  arch:
    - arm64
  cache:
    type: gha
    options: mode=max
    image: rubyvideo-build-cache
  secrets:
    - RAILS_MASTER_KEY

env:
  clear:
    WEB_CONCURRENCY: 2
    RAILS_MAX_THREADS: 3
    RAILS_ENV: production
  secret:
    - RAILS_MASTER_KEY
    - MEILI_MASTER_KEY

# Aliases are triggered with "bin/kamal <alias>". You can overwrite arguments on invocation:
# "bin/kamal logs -r job" will tail logs from the first server in the job section.
#
aliases:
  shell: app exec --interactive --reuse "bash"
  console: app exec --reuse -i "bin/rails console"

# Use a persistent storage volume.
#
volumes:
  - "storage:/rails/storage"

accessories:
  search:
    image: getmeili/meilisearch:v1.10
    host: 91.107.208.207
    port: 7700
    env:
      clear:
        MEILI_HTTP_ADDR: rubyvideo-search:7700
        MEILI_ENV: production
        MEILI_DB_PATH: /rails/storage/meilisearch
        MEILI_NO_ANALYTICS: true
        MEILI_DUMP_DIR: /rails/storage/meilisearch/dumps
        MEILI_MAX_INDEXING_MEMORY: 2Gb
        MEILI_SNAPSHOT_DIR: /rails/storage/meilisearch/snapshots
      secret:
        - MEILI_MASTER_KEY
    volumes:
      - "storage:/rails/storage"
