# Name of your application. Used to uniquely configure containers.
service: rubyvideo

# Name of the container image.
image: adrienpoly/rubyvideo

# Deploy to these servers.
servers:
  web:
    - 91.107.208.207
  job:
    hosts:
      - 91.107.208.207
    cmd: bin/jobs

# Enable SSL auto certification via Let's Encrypt (and allow for multiple apps on one server).
# If using something like Cloudflare, it is recommended to set encryption mode
# in Cloudflare's SSL/TLS setting to "Full" to enable end-to-end encryption.
proxy:
  ssl: true # TODO: enable SSL
  hosts:
    - rubyvideo.dev
    - www.rubyvideo.dev
  # kamal-proxy connects to your container over port 80, use `app_port` to specify a different port.
  app_port: 80

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  # server: registry.digitalocean.com / ghcr.io / ...
  username: adrienpoly

  # Always use an access token rather than real password (pulled from .kamal/secrets).
  password:
    - KAMAL_REGISTRY_PASSWORD

# Configure builder setup.
builder:
  arch:
    - arm64
  cache:
    type: registry
    image: adrienpoly/rubyvideo-build-cache
    options: mode=max
#
env:
  clear:
    RUBY_YJIT_ENABLE: 1
    RAILS_SERVE_STATIC_FILES: true
    WEB_CONCURRENCY: 2
    RAILS_MAX_THREADS: 3
    RAILS_ENV: production
  secret:
    - RAILS_MASTER_KEY
    - APPSIGNAL_PUSH_API_KEY
    - MEILI_MASTER_KEY
    - RUBYVIDEO_GITHUB_TOKEN
    - OPENAI_ORGANIZATION_ID
    - OPENAI_ACCESS_TOKEN
# Aliases are triggered with "bin/kamal <alias>". You can overwrite arguments on invocation:
# "bin/kamal logs -r job" will tail logs from the first server in the job section.
#
# aliases:
#   shell: app exec --interactive --reuse "bash"

# Use a different ssh user than root
#
# ssh:
#   user: app

# Use a persistent storage volume.
#
volumes:
  - "storage:/rails/storage"
# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests. Combines all files from new and old
# version inside the asset_path.
#
# asset_path: /app/public/assets

# Configure rolling deploys by setting a wait time between batches of restarts.
#
# boot:
#   limit: 10 # Can also specify as a percentage of total hosts, such as "25%"
#   wait: 2

# Use accessory services (secrets come from .kamal/secrets).
#
# accessories:
#   db:
#     image: mysql:8.0
#     host: 192.168.0.2
#     port: 3306
#     env:
#       clear:
#         MYSQL_ROOT_HOST: '%'
#       secret:
#         - MYSQL_ROOT_PASSWORD
#     files:
#       - config/mysql/production.cnf:/etc/mysql/my.cnf
#       - db/production.sql:/docker-entrypoint-initdb.d/setup.sql
#     directories:
#       - data:/var/lib/mysql
#   redis:
#     image: redis:7.0
#     host: 192.168.0.2
#     port: 6379
#     directories:
#       - data:/data

accessories:
  search:
    image: getmeili/meilisearch:v1.10
    host: 91.107.208.207
    port: 7700
    env:
      clear:
        MEILI_HTTP_ADDR: rubyvideo-search:7700
        MEILI_ENV: production
        MEILI_DB_PATH: /rails/storage/meilisearch
        MEILI_NO_ANALYTICS: true
        MEILI_DUMP_DIR: /rails/storage/meilisearch/dumps
        MEILI_MAX_INDEXING_MEMORY: 2Gb
        MEILI_SNAPSHOT_DIR: /rails/storage/meilisearch/snapshots
      secret:
        - MEILI_MASTER_KEY
    volumes:
      - "storage:/rails/storage"
