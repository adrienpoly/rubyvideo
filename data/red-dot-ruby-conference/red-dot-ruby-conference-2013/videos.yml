---
# Website: https://web.archive.org/web/20161015140654/https://rdrc2013.herokuapp.com/
# Schedule: https://web.archive.org/web/20161015140654/https://rdrc2013.herokuapp.com/
# Slides: https://web.archive.org/web/20161011211754/http://winstonyw.com/2013/06/12/reddotrubyconf_2013_-_thank_you/

## Day 1 - 7 June, Friday

- title: "Refactoring Rails"
  raw_title: "Refactoring Rails by Aaron Patterson"
  speakers:
    - Aaron Patterson
  event_name: Red Dot Ruby Conference 2013
  published_at: "2013-06-07"
  slides_url: https://speakerdeck.com/tenderlove/reddotrubyconf
  description: |-
    In this presentation we will look at some refactoring techniques used to transform difficult code in to something maintainable. Along the way we will learn about some internals of Rails, including design concepts and potential speed improvements. We'll learn about Rails internals and refactoring techniques, and how we can apply lessons learned to our own applications.
  video_provider: not_recorded
  video_id: aaron-patterson-refactoring-rails-red-dot-ruby-conf-2013

- title: "JRuby For The Win"
  raw_title: "JRuby For The Win by Ola Bini"
  speakers:
    - Ola Bini
  event_name: Red Dot Ruby Conference 2013
  published_at: "2013-06-07"
  slides_url: http://winstonyw.com/assets/downloads/JRubyForTheWin.pdf
  description: |-
    JRuby is an implementation of Ruby for the JVM. It gives you unprecedented integration with the Java ecosystem while still having access to great Ruby libraries such as Rails, RSpec and many more.

    JRuby has gone from being an alternative implementation of Ruby, to a battle hardened tool that many enterprises are using in production. The update in the community means that most gems now are released with outstanding JRuby compatibility, and JRuby can still be counted as the fastest implementation of Ruby.

    In this presentation we will take a look at the reasons for using JRuby, how to get started and what things you can do with JRuby that no other platform gives you.

  video_provider: not_recorded
  video_id: ola-bini-jruby-for-the-win-red-dot-ruby-conf-2013

# Break

- title: "50 Shades Of MVC"
  raw_title: "50 Shades Of MVC by Pablo Astigarraga"
  speakers:
    - Pablo Astigarraga
  event_name: Red Dot Ruby Conference 2013
  published_at: "2013-06-07"
  slides_url: https://speakerdeck.com/pote/50-shades-of-mvc
  description: |-
    We at the Rails world are very proud of embracing the Model-View-Controller design pattern, it is integral to the way we build web applications and there is a general consensus that all of us generally know what we are talking about in regards to it, hell , most of our code files are under a model, controller or views directories! We've got to know what we are doing, right?

    Much like Object Orientation the Model-View-Controller pattern is one of the most popular-yet-heavily-altered concepts in modern computer science, what were the original propositions of the pattern? How was it applied back in the 70's, when it was proposed as a part of Smalltalk? How much have we changed it to adapt it to the web application scene? How can we apply this to our day to day work in 2013? is altering the original pattern necessarily a bad thing?

    On this talk I present different aspects of the MVC pattern and its changes from its inception to modern day use, what to keep in mind about the pattern as opposed to a single framework's implementation of it and how knowing this should make us all around better programmers.
  video_provider: not_recorded
  video_id: pablo-astigarraga-50-shades-of-mvc-red-dot-ruby-conf-2013

- title: "Rails And Javascript: Brothers In Arms Using Gon"
  raw_title: "Rails And Javascript: Brothers In Arms Using Gon by Alexey Gaziev"
  speakers:
    - Alexey Gaziev
  event_name: Red Dot Ruby Conference 2013
  published_at: "2013-06-07"
  slides_url: https://www.slideshare.net/slideshow/gon-rdrc/22611974
  description: |-
    Did you ever want to integrate your Ruby code in controllers and JavaScript code in the frontend? Gon is here to help with seamless serialization, DRY code and live reloading. Organize your frontend the way it deserves!

    This talk will describe several strategies of transporting data between backend and frontend with the gon gem. It covers:
    - simple variable transfer
    - complex serialization with Rabl and JBuilder templates
    - transparent synchronization of JavaScript variables with their server-side counterparts
    - easy way to set initial or global data for whole application
    - real-life examples
    - nice mood with a set of nifty pics
    - and a bit of spice: Gon internals!
  video_provider: not_recorded
  video_id: alexey-gaziev-rails-and-javascript-using-gon-red-dot-ruby-conf-2013

# Lunch

- title: "Keep Your ActiveRecord Models Manageable The Rails Way"
  raw_title: "Keep Your ActiveRecord Models Manageable The Rails Way by Luismi Cavallé"
  speakers:
    - Luismi Cavallé
  event_name: Red Dot Ruby Conference 2013
  published_at: "2013-06-07"
  slides_url: https://speakerdeck.com/cavalle/keep-your-activerecord-models-manageable-the-rails-way
  description: |-
    Rails is awesome! It makes it very easy and enjoyable to start a new project. However, as your application grows, you will eventually have to come off the Rails or your codebase will become completely unmanageable. Everyone knows that.

    You'll need presenters and a service layer, including role and use-case objects. DCI will be great too or, alternatively, you can go Hexagonal. After all, the web is just a delivery mechanism, the database is a mere persistence strategy and, of course, Rails is a detail.

    But… Wait a minute! Is that really true? Does the _Rails way_ no longer work when your application becomes large? How is it, then, that Rails claims to be “optimised for sustainable productivity”?

    In this talk, we'll revisit the patterns and conventions that Rails encourages. We'll push them to the limit and see how the maintainers of large Rails applications keep their models manageable without needing to derail. We'll also discuss the trade-offs of being on and off the Rails. And, maybe, you'll finally learn how to stop worrying and love the Rails way!

  video_provider: not_recorded
  video_id: luismi-cavalle-keep-activerecord-models-manageable-red-dot-ruby-conf-2013

- title: "Building Asynchronous APIs"
  raw_title: "Building Asynchronous APIs by Richard Huang"
  speakers:
    - Richard Huang
  event_name: Red Dot Ruby Conference 2013
  published_at: "2013-06-07"
  slides_url: https://speakerdeck.com/flyerhzm/building-asynchronous-apis
  description: |-
    I have built API services on high-traffic platforms using different techniques - multi-processors, multi-threads and evented servers. In this talk, I will share the pros and cons of each technique, and introduce why async non-blocking API service is important for high-traffic websites. I will also show how to easily migrate a Rails synchronous API service to an asynchronous API service.
  video_provider: not_recorded
  video_id: richard-huang-building-asynchronous-apis-red-dot-ruby-conf-2013

- title: "Ruby - The Hard Bits"
  raw_title: "Ruby - The Hard Bits by Paul Gallagher"
  speakers:
    - Paul Gallagher
  event_name: Red Dot Ruby Conference 2013
  published_at: "2013-06-07"
  slides_url: https://www.slideshare.net/slideshow/ruby-the-hard-bits/22683215
  description: ""
  video_provider: not_recorded
  video_id: paul-gallagher-ruby-the-hard-bits-red-dot-ruby-conf-2013

# Break

- title: "A Better UJS For Rails"
  raw_title: "A Better UJS For Rails by Sakchai Siripanyawuth"
  speakers:
    - Sakchai Siripanyawuth
  event_name: Red Dot Ruby Conference 2013
  published_at: "2013-06-07"
  slides_url: https://www.slideshare.net/slideshow/better-ujsforrails/22536945
  description: |-
    Javascript and FrontEnd programming is an integral part of developing a rails application, DHH has blessed us with Turbolinks, however turbolinks doesn't give us fine grained control over our page.

    I will be talking about some of the techniques that we've developed at Artellectual to better manage javascript in a Rails application. We will also be releasing a gem that help people get started with the techniques I will be talking about.
  video_provider: not_recorded
  video_id: sakchai-siripanyawuth-better-ujs-for-rails-red-dot-ruby-conf-2013

- title: "Lightning Talk: Client-Server GUI Web Components With Ext JS And Rails"
  raw_title: "Client-Server GUI Web Components With Ext JS And Rails by Max Gorin"
  speakers:
    - Max Gorin
  event_name: Red Dot Ruby Conference 2013
  published_at: "2013-06-07"
  slides_url: https://speakerdeck.com/nomadcoder/client-server-gui-web-components-with-ext-js-and-rails
  description: |-
    Modular approach to complex RIA (rich internet applications) gives considerable advantages over the commonly used MVC: structuring code into well defined components provides for high scalability, reusability and testability of the code. Besides, with components being a Ruby class, developers have full access to such OOP techniques as inheritance and mixins.

    The Netzke open source framework takes all the hard work of enabling these techniques to create web components using Ruby for the server-side, and Sencha Ext JS for the client-side code. This talk will give you an introduction to rationale behind Netzke, as well as show you some very cool code, which will make you want to give it a try in your next project.
  video_provider: not_recorded
  video_id: max-gorin-ext-js-and-rails-red-dot-ruby-conf-2013

- title: "Lightning Talk: Meet Angular.js And Fall In Love"
  raw_title: "Meet AngularJs And Fall In Love by Bartosz Knapik"
  speakers:
    - Bartosz Knapik
  event_name: Red Dot Ruby Conference 2013
  published_at: "2013-06-07"
  slides_url: https://speakerdeck.com/bartes/meet-angularjs-and-fall-in-love
  description: |-
    Have you ever wondered about a javascript framework for your ruby webapp which is easy to extend, easy to test, with auto UI-data binding and separated MVC layers

    I have a proposal for you - angular.js. In this talk I will show what angular.js is and how it is structured. Then I will explain how to build mvc components and test them. Additionally I will provide recipes and guidelines from my 3 years of experience using it.
  video_provider: not_recorded
  video_id: bartosz-knapik-meet-angularjs-red-dot-ruby-conf-2013

- title: "Lightning Talk: Make Me A Better Rubyist!"
  raw_title: "Make Me A Better Rubyist! by Matthew Rudy Jacobs"
  speakers:
    - Matthew Rudy Jacobs
  event_name: Red Dot Ruby Conference 2013
  published_at: "2013-06-07"
  slides_url: https://speakerdeck.com/matthewrudy/make-me-a-better-rubyist
  description: |-
    If only there were a magic wand we could wave, and we would suddenly become wise, efficient, and passionate. In reality it takes years of hard work to build the skills and experience necessary. In this talk I'll speak about ways to improve learning, both as an individual, and as a community.
  video_provider: not_recorded
  video_id: matthew-rudy-jacobs-make-me-a-better-rubyist-red-dot-ruby-conf-2013

- title: "Lightning Talk: Glint - Fires Arbitrary TCP Server Processes For Tests"
  raw_title: "Glint: Fires Arbitrary TCP Server Processes For Tests by Kentaro Kuribayashi"
  speakers:
    - Kentaro Kuribayashi
  event_name: Red Dot Ruby Conference 2013
  published_at: "2013-06-07"
  slides_url: https://speakerdeck.com/kentaro/glint
  description: |-
    We use many middlewares like memcached, redis, and some other TCP servers. When we test our app, stubbing out connections to such servers can be useful. However, we can't confirm if our code works actually fine in real situation.

    Glint is a library which allows users to fire up arbitrary TCP servers and test against those real servers without stubbing. While it's a very tiny tool, it can be used in various way combined with many servers. I'll provide a way to solve the problem described above using Glint and show you some examples how to use it.
  video_provider: not_recorded
  video_id: kentaro-kuribayashi-glint-tcp-server-tests-red-dot-ruby-conf-2013

- title: "Lightning Talk: EmberJS"
  raw_title: "EmberJS by Robert Roach"
  speakers:
    - Robert Roach
  event_name: Red Dot Ruby Conference 2013
  published_at: "2013-06-07"
  slides_url: https://rjayroach.wordpress.com/wp-content/uploads/2013/06/ember_reddot_ruby_conf.pdf
  description: |-
    Introduction to using EmberJS in Rails projects
  video_provider: not_recorded
  video_id: robert-roach-emberjs-red-dot-ruby-conf-2013

- title: "Code Kata And Analysis"
  raw_title: "Code Kata And Analysis by Jim Weirich"
  speakers:
    - Jim Weirich
  event_name: Red Dot Ruby Conference 2013
  published_at: "2013-06-07"
  slides_url: https://github.com/jimweirich/presentation_kata_and_analysis/blob/master/pdf/KataAndAnalysis.key.pdf
  description: |-
    A Code Kata is a simple programming exercise, practiced repeatably by a developer. Much like a musician practices scales and finger exercises to develop his musical skills, a developer will practice code katas to develop his programming skills.

    This talk will be a live performance of a simple TDD-based code Kata, followed by an analysis of the forces and choices involved in the feedback loop between the code and the tests encountered during the kata. By examining this interaction of tests and code, we come to a better understanding of how to use tests to actively affect the direction of our design. By reflecting on the process, we understand how to pick 'what to test next'.

    This talk is targeted for developers who have started using Test Driven Design (TDD) and feel that they don't quite 'get it' yet, and are looking for guidance in the technique.
  video_provider: not_recorded
  video_id: jim-weirich-code-kata-analysis-red-dot-ruby-conf-2013

## Day 2 - 8 June, Saturday

- title: "Concurrency In Ruby: Tools Of The Trade"
  raw_title: "Concurrency In Ruby: Tools Of The Trade by José Valim"
  speakers:
    - José Valim
  published_at: "2013-06-08"
  slides_url: https://speakerdeck.com/plataformatec/concurrency-in-ruby-tools-of-the-trade
  description: |-
    Concurrency has been a popular topic in the programming community in the latest decade and has received special attention in the Ruby community in the latest years. In this talk, José Valim will showcase the tools we have available in Ruby and in the community today, focusing on common pitfalls. This is a great opportunity to discuss why concurrency matters and how we could move forward.
  video_provider: not_recorded
  video_id: jose-valim-concurrency-in-ruby-red-dot-ruby-conf-2013

- title: "Ruby 2.0 On Rails In Production"
  raw_title: "Ruby 2.0 On Rails In Production by Akira Matsuda"
  speakers:
    - Akira Matsuda
  published_at: "2013-06-08"
  slides_url: https://speakerdeck.com/a_matsuda/ruby-2-dot-0-on-rails-in-production
  description: ""
  video_provider: not_recorded
  video_id: akira-matsuda-ruby-2-0-on-rails-red-dot-ruby-conf-2013

- title: "Optimising Self"
  raw_title: "Optimising Self by Simon Robson"
  speakers:
    - Simon Robson
  published_at: "2013-06-08"
  slides_url: https://speakerdeck.com/shr/optimising-self-at-reddotrubyconf-2013
  description: |-
    If you were building a system that was going to be in production for 10 or 20 years, you'd be pretty serious about your development processes. As a programmer, you will likely be in production *yourself* for considerably longer than that. So how is your self-development process looking? Are you optimising yourself for current performance and long-term viability?

    In this talk we'll consider some aspects - both mental and physical - you may want to be thinking about to make sure personal and professional growth continues smoothly. And also ask if these ideas could be more prominent in how we teach and mentor other programmers.
  video_provider: not_recorded
  video_id: simon-robson-optimising-self-red-dot-ruby-conf-2013

- title: "From 'Legacy' To 'Edge': Continuous Upgrades For Rails Apps"
  raw_title: "From 'Legacy' To 'Edge': Continuous Upgrades For Rails Apps by Hiroshi Shibata"
  speakers:
    - Hiroshi Shibata
  published_at: "2013-06-08"
  slides_url: https://speakerdeck.com/hsbt/from-legacy-to-edge
  description: |-
    We have a lot of Rails 2.x applications with Ruby 1.8 in production, and engineers feel incredible pain because they can't use a lot of gems and Ruby 1.9 features.

    In this talk, I'll share my thoughts on the following:
    - Why do we need to upgrade Ruby and Rails?
    - What are the strategies available to upgrade Ruby and Rails?
    - How do we reduce technical debt?
    - How do we upgrade Rails while adding new features?
    - How do we do continuous delivery while simuluteously migrating the database?

    I'll also talk about how web companies in Japan work. If you are interested in continuous maintenance and continuous delivery, this is a talk for you.
  video_provider: not_recorded
  video_id: hiroshi-shibata-continuous-upgrades-red-dot-ruby-conf-2013

# Lunch Break

- title: "Ruby Playing"
  raw_title: "Ruby Playing by Chang Sau Sheong"
  speakers:
    - Chang Sau Sheong
  published_at: "2013-06-08"
  slides_url: https://speakerdeck.com/sausheong/playing-with-ruby
  description: |-
    Ruby is a versatile and powerful programming language and platform, something all participants of this conference would already know. However today Ruby is still mostly used together with Ruby on Rails as the platform for developing web applications.

    In this talk I would like to show how easily Ruby can be used in another way -- to develop a real-time, online and multi-player game. This 2D game will be written with Ruby only -- from the client, to the server to the management console will be entirely in Ruby.
  video_provider: not_recorded
  video_id: chang-sau-sheong-ruby-playing-red-dot-ruby-conf-2013

- title: "Secure Your Rails Application: The Basics"
  raw_title: "Secure Your Rails Application: The Basics by Yi-Ting Cheng"
  speakers:
    - Yi-Ting Cheng
  published_at: "2013-06-08"
  slides_url: https://xdite.github.io/security-basic
  description: |-
    Security is hard. Everyone wants their sites to be hacker-free. But the truth is: If your sites were hacked, the causes are often because you forgot the basics.

    In this talk I will show you:
    - Common application design mistakes people make and are not aware of.
    - The most vulnerable controller actions that hackers seek.
    - The default security mechanism of Rails for these issues and reasons why you should not bypass them.
    - And how to write secure codes by default.

  video_provider: not_recorded
  video_id: yi-ting-cheng-secure-your-rails-application-red-dot-ruby-conf-2013

- title: "Identical Production, Staging And Development Environments Using Chef, AWS And Vagrant"
  raw_title: "Identical Production, Staging And Development Environments Using Chef, AWS And Vagrant by Christopher Rigor"
  speakers:
    - Christopher Rigor
  published_at: "2013-06-08"
  description: |-
    Learn how Engine Yard uses Amazon Web Services and Chef to bring up any number of servers ranging from a solo instance to a cluster of instances with multiple app instances, database instances and utility instances for memcached, resque, sphinx, and everything your app needs.

    Snapshots are used to create a clone of your production environment where you can test all the changes before making them in production.

    Vagrant and VirtualBox are used to provide a development environment with the same OS you use in production. Chef is used to install the same packages. In fact you use the same chef recipes everywhere.
  video_provider: not_recorded
  video_id: christopher-rigor-identical-environments-red-dot-ruby-conf-2013

# Break

- title: "Dependencies Testing With Appraisal And Bundler"
  raw_title: "Dependencies Testing With Appraisal And Bundler by Prem Sichanugrist"
  speakers:
    - Prem Sichanugrist
  published_at: "2013-06-08"
  slides_url: https://speakerdeck.com/sikachu/dependencies-testing-with-appraisal-and-bundler
  description: ""
  video_provider: not_recorded
  video_id: prem-sichanugrist-dependencies-testing-red-dot-ruby-conf-2013

- title: "Fast & Effective View Testing"
  raw_title: "Fast & Effective View Testing by Nigel Rausch"
  speakers:
    - Nigel Rausch
  published_at: "2013-06-08"
  description: |-
    Too many people use integration tests to check if an element is displayed or not, this is slow and cumbersome. Another solution is to use rspec view specs which end up creating a lot of duplicated code and scenarios.

    In this presentation I will show you a fast and consistent way of testing multiple elements are (or are not) displayed based on a context.
  video_provider: not_recorded
  video_id: nigel-rausch-view-testing-red-dot-ruby-conf-2013

- title: "Functional Reactive Programming in Ruby"
  raw_title: "Functional Reactive Programming in Ruby by Steve Klabnik"
  speakers:
    - Steve Klabnik
  published_at: "2013-06-08"
  description: |-
    Ruby's strengths lie in its ability to blend styles. We all know about OOP and Ruby, but it often leans functional, as well. There's a style of writing programs called 'Functional Reactive Programming' that is extremely useful in the Haskell world, but isn't really used in Ruby at all.

    In this talk, Steve will show you FRP, an implementation of it in Ruby, and how to write programs in this style.
  video_provider: not_recorded
  video_id: steve-klabnik-functional-reactive-programming-red-dot-ruby-conf-2013
# After Party
