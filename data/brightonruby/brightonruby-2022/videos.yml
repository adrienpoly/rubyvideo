---
# Website: https://brightonruby.com/2022/
# Website: https://web.archive.org/web/20220701042721/https://brightonruby.com/
# Schedule: https://web.archive.org/web/20220701042721/https://brightonruby.com/

- title: "Breaking Up With The Bundle"
  raw_title: "Breaking Up With The Bundle"
  speakers:
    - Joel Hawksley
  event_name: Brighton Ruby 2022
  published_at: "2022-06-30"
  video_provider: mp4
  external_player: true
  external_player_url: https://brightonruby.com/2022/breaking-up-with-the-bundle-joel-hawksley/
  video_id: https://videos.brightonruby.com/videos/2022/joel-hawksley-breaking-up-with-the-bundle.mp4
  description: |-
    Over the course of 14 years, the GitHub.com CSS bundle grew to over 40,000 lines of custom CSS. It became almost impossible to refactor. Visual regressions were common. In this talk, we’ll share an honest picture of our successes and failures as we’ve worked to break up with our CSS bundle by moving towards a component-driven UI architecture.

    Joel’s a staff software engineer at GitHub, working on user interface architecture and strategy. He leads development of the ViewComponent framework.

- title: "You had me at LPUSH, a Sidekiq Love Story"
  raw_title: "You had me at LPUSH, a Sidekiq love story"
  speakers:
    - Kelly Sutton
  event_name: Brighton Ruby 2022
  published_at: "2022-06-30"
  video_provider: mp4
  external_player: true
  external_player_url: https://brightonruby.com/2022/a-sidekiq-love-story-kelly-sutton/
  video_id: https://videos.brightonruby.com/videos/2022/kelly-sutton-you-had-me-at-lpush.mp4
  description: |-
    Sidekiq, the popular Ruby job framework, moves billions of USD per year on behalf of 200,000 small businesses at Gusto, an American FinTech company. But every relationship is not without its trials. How did this library go from down on its luck to “bae” within one company?

    In this talk, learn how to level-up your own usage of Sidekiq, avoid some of its pitfalls, set your databases on fire, teach your teammates Sidekiq’s best practices, and how to scale Sidekiq, whether you’re moving a few bucks or a few billion.

    Kelly Sutton is a software engineer based in Seattle, WA, and works for Gusto.

- title: "Stop Ignoring Pattern Matching! It’s Really Good!"
  raw_title: "Stop ignoring pattern matching! It’s really good!"
  speakers:
    - Tom Stuart
  event_name: Brighton Ruby 2022
  published_at: "2022-06-30"
  video_provider: mp4
  external_player: true
  external_player_url: https://brightonruby.com/2022/stop-ignoring-pattern-matching-tom-stuart/
  video_id: https://videos.brightonruby.com/videos/2022/tom-stuart-stop-ignoring-pattern-matching.mp4
  description: |-
    Pattern matching was introduced as a major language feature in Ruby 2.7 and has been improved in subsequent releases, but not many people are using it yet.

    It’s really helpful and can make your programs clearer, simpler, safer, or all three. So why aren’t you using it? You should totally use it! I’ll show you how.

    Tom is a computer scientist, longtime Rubyist and Senior Staff Engineer at Shopify. He has taught optimising compilers at the University of Cambridge and written about technology for the Guardian. His book about computation theory in Ruby, “Understanding Computation”, is published by O’Reilly.

- title: "Cache me if you can: How instance variables work in CRuby"
  raw_title: "Cache me if you can: How instance variables work in CRuby"
  speakers:
    - Jemma Issroff
  event_name: Brighton Ruby 2022
  published_at: "2022-06-30"
  video_provider: mp4
  external_player: true
  external_player_url: https://brightonruby.com/2022/how-instance-variables-work-in-cruby-jemma-issroff/
  video_id: https://videos.brightonruby.com/videos/2022/jemma-issroff-setting-and-getting-instance-variables.mp4
  description: |-
    We all use instance variables practically every time we write Ruby code. Most of us do this without a second thought for how performant instance variables accesses are or what Ruby is doing behind the scenes.

    In this talk, we’ll learn what actually happens each time we access an instance variable. We’ll start with the most naive possible implementation of instance variables, iterate on it until we learn what CRuby is doing today, including how instance variable caching works, and ultimately discuss a new idea for instance variable caching that CRuby could adopt: object shapes.

    Jemma Issroff works on Shopify’s Ruby Infrastructure team. She is also a co-founder of WNB.rb, a women / non-binary Ruby community, a co-host on The Ruby on Rails Podcast, the author of both Ruby Weekly’s Tip of the Week, and an ebook about Ruby garbage collection.

# Lunch

- title: "A Framework For More Productive Debugging"
  raw_title: "A framework for more productive debugging"
  speakers:
    - Roberta Mataityte
  event_name: Brighton Ruby 2022
  published_at: "2022-06-30"
  video_provider: mp4
  external_player: true
  external_player_url: https://brightonruby.com/2022/more-productive-debugging-roberta-mataityte/
  video_id: https://videos.brightonruby.com/videos/2022/roberta-mataityte-a-framework-for-more-productive-debugging.mp4
  description: |-
    You can either try to guess your way out of a bug and potentially end up spending a large amount of time getting carried away and going off in unproductive directions.

    Or you can make use of the 9 golden rules of debugging to track down pesky bugs systematically, in no time at all.

    This is a talk inspired by a book by David J. Agans book, a forgotten classic, “Debugging: the 9 indispensable rules for finding even the most elusive software and hardware problems”.

    Roberta is a Software Engineer at FutureLearn, a leading online education platform. Prior to working in technology she worked for the arts and film sector and has a keen interest in the cross section of art, culture and technology. These days when not learning, coding or debugging, she is probably trying to grow the perfect balcony tomatoes.

- title: "@consonance.dig(:past, :history) => An Archaeological Excavation of a ten-year-old Rails Monolith"
  raw_title: "@consonance.dig(:past, :history) => An archaeological excavation of a ten-year-old Rails monolith"
  speakers:
    - Emma Barnes
  event_name: Brighton Ruby 2022
  published_at: "2022-06-30"
  video_provider: mp4
  external_player: true
  external_player_url: https://brightonruby.com/2022/an-archaeological-excavation-ten-year-old-rails-monolith-emma-barnes/
  video_id: https://brightonruby.com/2022/an-archaeological-excavation-ten-year-old-rails-monolith-emma-barnes/
  description: |-
    You really had to be there. We didn’t record this, because it had “not for the Internet” stuff in it.

    Consonance is a 10+ year old Rails monolith. Its CEO, Emma Barnes, finally gets some use out of her archaeology degree and digs into the code to see what artefacts lie within, and what we can learn from them.

    Book publisher turned programmer. She runs generalproducts.co, makers of Consonance, as well as indie publisher Snowbooks, and she maintains schools publishing app Make Our Book on Side Project Fridays. She works in a first floor office in a market town in the Oxfordshire countryside, which attracts a local cat that visits through the window.

- title: "Maybe You Aren’t My Type?"
  raw_title: "Maybe You Aren’t My Type?"
  speakers:
    - John Cinnamond
  event_name: Brighton Ruby 2022
  published_at: "2022-06-30"
  video_provider: mp4
  external_player: true
  external_player_url: https://brightonruby.com/2022/maybe-you-arent-my-type-john-cinnamond/
  video_id: https://videos.brightonruby.com/videos/2022/john-cinnamond-maybe-youre-not-my-type.mp4
  description: |-
    `nil`

    Well that’s awkward. What do we do now? We can’t just carry on and pretend we have a value – that never ends well. Do we swap it out for a default value? Do we write a special program just for handling nil? Do we crash? Or do we rewrite everything from scratch in Haskell?

    What can we learn about Ruby by thinking about a world where nil can never exist? And what can we learn about Haskell by thinking about a world where it can? And what can we learn about ourselves by recognising that both of these worlds are the world we live in.

    John is a Lead Engineer at Form3, a payment technology company. When not coding in Go for a living John can probably be found learning Haskell, reading about mathematics, or having a nice sit down and thinking about what kind of thing programming is.

- title: "Resilience"
  raw_title: "Resilience"
  speakers:
    - Naomi Freeman
  event_name: Brighton Ruby 2022
  published_at: "2022-06-30"
  video_provider: mp4
  external_player: true
  external_player_url: https://brightonruby.com/2022/resilience-naomi-freeman/
  video_id: https://videos.brightonruby.com/videos/2022/naomi-freeman-resilience.mp4
  description: |-
    Once upon a time there was a pandemic, and Zoom parties and COVID leave. Now your team has been told to come back to work - as if these past two years were not work. How can we build resilience in our teams to help them through this transition?

    Previously: Ruby dev (payments and infra). Women Who Code Data Science & Blockchain Fellow. CTO. Founder. etc. Currently: bridging business and tech as a Subject Matter Expert: Technical Management at Noroff University - Accelerate (Norway). Canadian living in Norway. I like cats.
