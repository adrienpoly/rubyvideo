---
# TODO: talks running order
# TODO: talk dates
# TODO: conference website
# TODO: schedule website

- title: Future-proofing Your 3rd Party Services
  raw_title: Rocky Mountain Ruby 2014 - Future-proofing Your 3rd Party Services by Jeffery Matthias
  speakers:
    - Jeffery Matthias
  event_name: Rocky Mountain Ruby 2014
  published_at: "2014-10-20"
  description: |-
    It's 2015... your stakeholders have decided that PayPal is out and Stripe is in. Fortunately, you're a planner. You have all of your PayPal interactions isolated in an adapter gem and your interface is clearly defined, easy to re-implement and enforce. Rewriting your adapter isn't small, but it is surmountable and can be estimated accurately so it won't lead to surprises. You win.

    Larger Rails apps are moving towards Service Oriented Architecture with adapters (typically custom gems) abstracting 3rd party services. This talk will cover defining, enforcing and test-driving the interface for your 3rd party service to provide easier flexibility in the future.

  video_provider: youtube
  video_id: CXdULnPpMsc

- title: Machine Learning for Fun and Profit
  raw_title: Rocky Mountain Ruby 2014 - Machine Learning for Fun and Profit by John Paul Ashenfelter
  speakers:
    - John Paul Ashenfelter
  event_name: Rocky Mountain Ruby 2014
  published_at: "2014-10-20"
  description: |-
    Your Rails app is full of data that can (and should!) be turned into useful information with some simple machine learning techniques. We'll look at basic techniques that are both immediately applicable and the foundation for more advanced analysis -- starting with your Users table.

    We will cover the basics of assigning users to categories, segmenting users by behavior, and simple recommendation algorithms. Come as a Rails dev, leave a data scientist.

  video_provider: youtube
  video_id: KC5MtKHm1O4

- title: "80,00 Plaintext Passwords"
  raw_title: Rocky Mountain Ruby 2014 - 80,00 Plaintext Passwords
  speakers:
    - T.J. Schuck
  event_name: Rocky Mountain Ruby 2014
  published_at: "2014-10-20"
  description: |-
    fluffmuffin, peppercorn, gilligan — those are just a few of our users' plaintext passwords.

    I have 80,000 more, and it only took me 87 seconds to gather them from our customer database in a white-hat attack.

    In Act I, we'll cover the history of secure password storage, examine the hack, and mitigate the threat. Act II will address the difficulties of working on libraries with complicated external dependencies (like bcrypt-ruby, of which I'm now a maintainer). In Act III, we'll celebrate the power of global collaboration via OSS.

    [Scene.]

  video_provider: youtube
  video_id: 9u54O6vARK8

- title: Unpacking Technical Decisions
  raw_title: Rocky Mountain Ruby 2014 - Unpacking Technical Decisions by Sarah Mei
  speakers:
    - Sarah Mei
  event_name: Rocky Mountain Ruby 2014
  published_at: "2014-10-20"
  description: |-
    As engineers working on a team, we all make technical decisions. What’s the best way to implement this? Where should this function live? Is this library worth using? Some decisions, though, are larger, riskier and more important than that. But generally, they’re also far less frequent.

    Right now, your team might be struggling to organize the client-side parts of your application. Ember? Angular? Backbone? Flip a coin? Uh…which one has the most…retweets? These choices don’t need to be arbitrary or based on vague personal preference. Come learn a more useful and realistic approach that makes large-scale technical decisions less risky.

  video_provider: youtube
  video_id: F7D5ZGlioj4

- title: "What it Means to Have Good Test Covearage..."
  raw_title: Rocky Mountain Ruby 2014 - What it Means to Have Good Test Covearage...
  speakers:
    - Arjun Sharma
  event_name: Rocky Mountain Ruby 2014
  published_at: "2014-10-20"
  description: |-
    What it Means to Have Good Test Covearage, and why it Matters by Arjun Sharma

    One of the greatest themes the Ruby community has embraced is testing. Countless words have been written, and tools coded, to make it as easy and painless as possible to write almost any kind of test imaginable. And yet despite all of the time we spend writing tests, we still end up with bugs in production, and we still curse our test suites for being too large, too slow, or too complicated.

    In this talk I will not provide you with a single source of truth about how to test your application. What I will provide is a better understanding of how to get the most mileage out of your test suite. Using examples from my own experience of testing Rails, plain old Ruby, JavaScript, and even Objective-C and Java, we will explore the pros and cons of unit testing versus integrated or system testing, what makes a test valuable, and what it means to really have good test coverage.

  video_provider: youtube
  video_id: rbWUxRNawIw

- title: "Lightning Talks (Day 1)"
  raw_title: Rocky Mountain Ruby 2014 - Lightning Talks (Day 1)
  event_name: Rocky Mountain Ruby 2014
  published_at: "2014-10-21"
  description: ""
  video_provider: youtube
  video_id: iYvm_5z0mZQ
  talks:
    - title: "Lightning Talk: Teen Hackathons"
      start_cue: "00:00"
      end_cue: "04:06"
      video_id: anna-fowles-winkler-lighting-talk-rocky-mountain-ruby-2014
      video_provider: parent
      speakers:
        - Anna Fowles-Winkler

    - title: "Lightning Talk: Speed Up Your Database"
      start_cue: "04:06"
      end_cue: "08:11"
      video_id: starr-horne-lighting-talk-rocky-mountain-ruby-2014
      video_provider: parent
      speakers:
        - Starr Horne

    - title: "Lightning Talk: Go Code Colorado"
      start_cue: "08:11"
      end_cue: "10:38"
      video_id: jessica-goulding-lighting-talk-rocky-mountain-ruby-2014
      video_provider: parent
      speakers:
        - Jessica Goulding

    - title: "Lightning Talk: Documenting and Exploring your APIs"
      start_cue: "10:38"
      end_cue: "17:07"
      video_id: tim-schmelmer-lighting-talk-rocky-mountain-ruby-2014
      video_provider: parent
      speakers:
        - Tim Schmelmer

    - title: "Lightning Talk: Dashboard Dashing"
      start_cue: "17:07"
      end_cue: "21:44"
      video_id: jon-mccartie-lighting-talk-rocky-mountain-ruby-2014
      video_provider: parent
      speakers:
        - Jon McCartie

- title: Micro Testing Pains
  raw_title: Rocky Mountain Ruby 2014 - Micro Testing Pains by Marcos Castilho
  speakers:
    - Marcos Castilho
  event_name: Rocky Mountain Ruby 2014
  published_at: "2014-10-21"
  description: |-
    Micro services are a wonderful thing! Until you try to test them in integration. Do you write a stub for each service? Point them to a test environment? Raise local instances for every dependency? I've tried all these approaches and they are all painful. Can't we can do better?

    Yes we can! On this talk we will discuss Consumer Driven Contracts, a better way to deal with integration tests in a micro services environment.

  video_provider: youtube
  video_id: L22NNcfrbYI

- title: "Feats of Daring with the Ruby Standard Library"
  raw_title: Rocky Mountain Ruby 2014 - Feats of Daring with the Ruby Standard Library
  speakers:
    - Jen Diamond
    - Stephanie Betancourt
    - Omowale Oniyide
    - Josh Loper
  event_name: Rocky Mountain Ruby 2014
  published_at: "2014-10-21"
  description: |-
    Feats of Daring with the Ruby Standard Libaray by Jen Diamond, Stephanie Betancourt, Omowale Oniyide and Josh Loper

    The Standard Librarians are working to make the Ruby Standard Library more accessible to it's users, beginner through advanced. The basis for it is existing ruby-docs. The Stand Librarians have taken it further with explanations that are easier to parse, libraries grouped into categories, examples to try, links aggregated for further study and similar gems listed. This talk will demonstrate the new site, how it was made it and how RGSoC helped make that happen. Ruby's Standard Libraries have a lot of tricks up it's sleeves. Want to see some?

  video_provider: youtube
  video_id: yc0hjFgSQN0

- title: Let's Pretend
  raw_title: Rocky Mountain Ruby 2014 - Let's Pretend by Sarah Allen
  speakers:
    - Sarah Allen
  event_name: Rocky Mountain Ruby 2014
  published_at: "2014-10-22"
  description: |-
    Playing is simple, even a child can do it, but designing something simple is hard. How can we combine prototyping with production software to get our ideas in front of real people? How can we evolve our software over time? How do we measure if something is fun?

    I will talk about how Ruby’s flexibility and a strong testing ethos can bring some sanity to this uncertain world. And when I say testing, I’m not just talking about RSpec, Cucumber or Capybara, I’ll share stories from Mightyverse about how we test whether our software actually “works” for the people who use it — sharing failures, I mean, learning, as well as success.

  video_provider: youtube
  video_id: EZO0Udty9bY

- title: The Technical Debt Trap
  raw_title: Rocky Mountain Ruby 2014 - The Technical Debt Trap by Doc Norton
  speakers:
    - Doc Norton
  event_name: Rocky Mountain Ruby 2014
  published_at: "2014-10-22"
  description: |-
    Technical Debt has become a catch-all phrase for any code that needs to be re-worked. Much like Refactoring has become a catch-all phrase for any activity that involves changing code. These fundamental misunderstandings and comfortable yet mis-applied metaphors have resulted in a plethora of poor decisions. What is technical debt? What is not technical debt? Why should we care? What is the cost of misunderstanding? What do we do about it? Doc discusses the origins of the metaphor, what it means today, and how we properly identify and manage technical debt.

  video_provider: youtube
  video_id: S2pS9hN2Fws

- title: Under the Hood of Ruby's Generational Garbage Collector
  raw_title:
    Rocky Mountain Ruby 2014 - Under the Hood of Ruby's Generational Garbage
    Collector by Hemant Kumar
  speakers:
    - Hemant Kumar
  event_name: Rocky Mountain Ruby 2014
  published_at: "2014-10-22"
  description: |-
    Ruby - 2.1 brought generational GC to Ruby and instrumentation support. In this talk, I am going explain:

    How it works? How it affects users and C extension authors? Visualize object allocation/deallocation in realtime, demonstrate how different GC tuning options affect your app.

  video_provider: youtube
  video_id: hcaYjiAIres

- title: "Lightning Talks (Day 2)"
  raw_title: Rocky Mountain Ruby 2014 - Lightning Talks (Day 2)
  event_name: Rocky Mountain Ruby 2014
  published_at: "2014-10-22"
  description: ""
  video_provider: youtube
  video_id: DqoKIKWf2HM
  talks:
    - title: "Lightning Talk: Asset Pipeline Tips and Tricks"
      start_cue: "00:00"
      end_cue: "05:08"
      video_id: risa-batta-lighting-talk-rocky-mountain-ruby-2014
      video_provider: parent
      speakers:
        - Risa Batta

    - title: "Lightning Talk: Alfred is Awesome"
      start_cue: "05:08"
      end_cue: "08:08"
      video_id: cory-leistikow-lighting-talk-rocky-mountain-ruby-2014
      video_provider: parent
      speakers:
        - Cory Leistikow

    - title: "Lightning Talk: The Human Connection"
      start_cue: "08:08"
      end_cue: "12:20"
      video_id: george-apitz-lighting-talk-rocky-mountain-ruby-2014
      video_provider: parent
      speakers:
        - George Apitz

    - title: "Lightning Talk: Methan Hydrate"
      start_cue: "12:20"
      end_cue: "15:50"
      video_id: joe-lighting-talk-rocky-mountain-ruby-2014
      video_provider: parent
      speakers:
        - Joe

    - title: "Lightning Talk: State Machines"
      start_cue: "15:50"
      end_cue: "18:58"
      video_id: marcus-morrison-lighting-talk-rocky-mountain-ruby-2014
      video_provider: parent
      speakers:
        - Marcus Morrison

    - title: "Lightning Talk: Rails as Static Content Compile"
      start_cue: "18:58"
      end_cue: "23:16"
      video_id: ara-t-howard-lighting-talk-rocky-mountain-ruby-2014
      video_provider: parent
      speakers:
        - Ara T. Howard

    - title: "Lightning Talk: Teams Decision Making Tools"
      start_cue: "23:16"
      end_cue: "30:15"
      video_id: doc-norton-lighting-talk-rocky-mountain-ruby-2014
      video_provider: parent
      speakers:
        - Doc Norton

    - title: "Lightning Talk: Qtbindings - GUIs in Ruby"
      start_cue: "30:15"
      end_cue: "31:00"
      video_id: ryan-melton-lighting-talk-rocky-mountain-ruby-2014
      video_provider: parent
      speakers:
        - Ryan Melton

    - title: "Lightning Talk: Rocky Mountain Ruby Rap"
      start_cue: "31:00"
      end_cue: "35:11"
      video_id: shelby-kelly-lighting-talk-rocky-mountain-ruby-2014
      video_provider: parent
      speakers:
        - Shelby Kelly

- title: 'Your Company is "Awesome" (But is "Company Culture" a lie?)'
  raw_title:
    Rocky Mountain Ruby 2014 - Your Company is "Awesome" (But is "Company
    Culture" a lie?)
  speakers:
    - Pamela Vickers
  event_name: Rocky Mountain Ruby 2014
  published_at: "2014-10-27"
  description: |-
    Your Company is "Awesome" (But is "Company Culture" a lie?) by Pamela Vickers

    We all want to work for a company that cares about and promotes a balanced, fun, and, in a word, "awesome" culture, but unless you have safeguards in place against bad clients, bad projects, and bad apples, your company culture only exists on paper.

    What can we do as developers, team leaders, and mentors to protect ourselves and others from cultural failure? What are successful companies doing to maintain their workers' happiness? Is it ever okay to "fire" a bad client? What separates healthy internal pride and corporate propaganda?

    This talk attempts to define the amorphous term while exploring the difficult task of owning your company culture and protecting it when things go wrong.

  video_provider: youtube
  video_id: h1UayuSXBcg

- title: "Native iOS Development with RubyMotion and  UnderOS"
  raw_title:
    Rocky Mountain Ruby 2014 - Native iOS Development with RubyMotion and
    UnderOS
  speakers:
    - Nikolay Nemshilov
  event_name: Rocky Mountain Ruby 2014
  published_at: "2014-10-27"
  description: |-
    Native iOS Development with RubyMotion and UnderOS by Nikolay Nemshilov

    RubyMotion is a project that allows you to create native iOS apps in ruby. It is basically a compiler of Ruby into Objective-C which gives you access to all the iOS system environment.

    UnderOS is a new exciting project on top of RubyMotion that creates a new, ruby and web developers friendly environment around the native iOS framework. It converts all the native mobile development concepts into web-development concepts and allows you to create native iOS applications with HTML, CSS and Ruby (instead of JavaScript).

    This talk will give you a basic overview of RubyMotion/UnderOS concepts and I'm also going to livehack an application on stage to give you a sense of how it looks and feels like.

  video_provider: youtube
  video_id: 6UTcz-_WvXk

- title: Dancing with Robots
  raw_title: Rocky Mountain Ruby 2014 - Dancing with Robots by Julian Cheal
  speakers:
    - Julian Cheal
  event_name: Rocky Mountain Ruby 2014
  published_at: "2014-10-28"
  description: |-
    Web apps are great and everything, but imagine using Ruby to fly drones and make them dance to the sounds of dubstep! Or to control disco lights and other robots! Sounds fun, right? In this talk, we will not only explore how we can write code to make this possible, but it will also be full of exciting, interactive (and possibly dangerous ;) ) demos!

  video_provider: youtube
  video_id: 7I0jumEv_ns

- title: Build Complex Domains in Rails
  raw_title: Rocky Mountain Ruby 2014 - Build Complex Domains in Rails by Mike AbiEzzi
  speakers:
    - Mike AbiEzzi
  event_name: Rocky Mountain Ruby 2014
  published_at: "2014-10-28"
  description: |-
    Rails models are simple, but your domain’s models might not be as simple as Rails would like them to be.

    Modeling large, complex domains "the Rails way” can cause some serious pain. Ruby and Rails are supposed to make developers happy. Let's not allow “the Rails way” and complex domains to take the “happy” out of ruby development.

    Join me as I’ll walk through a set of easy to implement Domain Driven Design (DDD) pointers. The goal is to make sure your model’s business logic stay under control no matter how complex your domain is or gets. Your application will be able to sustain steady growth and dramatically reduce business rule related defects, all the while, staying easy to grok.

    I'll walk you through:

    How communicating the domain properly will make an imprint on your codebase and product. How creating boundaries around clusters of models will make your code easier to understand, manage, and interact with. How immutable objects eliminate unnecessary complexities. How data store access expresses the domain's intentions. How to represent natural business transactions between models.

  video_provider: youtube
  video_id: B7pXxMJAze0
