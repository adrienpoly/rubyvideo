---
#
# Website: https://rubyconf.org.au/2016
# Schedule: https://rubyconf.org.au/2016#schedule
# TODO: talks running order
# TODO: talks date
#
- title: Security is hard, but we can't go shopping
  raw_title: "RubyConf AU 2016: Security is hard, but we can't go shopping by Andre Arko"
  speakers:
    - André Arko
  event_name: RubyConf AU 2016
  date: "2016-02-10"
  published_at: "TODO"
  description: "RubyConf AU 2016: Security is really important, and a lot of rubyists are unfamiliar with how it works, why it's important, how to explain it to bosses and managers, and most importantly, how to handle security vulnerabilities in code they use (or code they wrote). This talk is about why security is important, even though Matz is nice. It's also about what to do when vulnerabilities show up, since they always will."
  video_provider: youtube
  video_id: w_Lwd3sGSbc
- title: Build and maintain large Ruby applications
  raw_title: "RubyConf AU 2016: Build and maintain large Ruby applications by Enrico Teotti"
  speakers:
    - Enrico Teotti
  event_name: RubyConf AU 2016
  date: "2016-02-10"
  published_at: "TODO"
  description: |-
    RubyConf AU 2016: This presentation will be about the challenges of building large Ruby web applications and how to maintain existing ones.

    I will use examples adapted from real applications that I worked on during my 10 years of experience with Ruby outlining: technical limitations of the language, how to use a modular dependency structure to enforce boundaries in complex domains.
  video_provider: youtube
  video_id: b1glMxMPscA
- title: One Undo
  raw_title: "RubyConf AU 2016: One Undo by Katrina Owen"
  speakers:
    - Katrina Owen
  event_name: RubyConf AU 2016
  date: "2016-02-10"
  published_at: "TODO"
  description: |-
    RubyConf AU 2016: Refactoring sometimes devolves into an appalling mess. You're chasing a broken test suite, and every change just makes it worse. An even more insidious antipattern is the slow, perfectly controlled process culminating in dreadful design.

    This talk presents an end-to-end refactoring that demonstrates simple strategies to avoid such misadventures.
  video_provider: youtube
  video_id: Uk-DMWVR1zc
- title: "Pursuing the Strong, Not So Silent Type: A Haskell Story"
  raw_title: "RubyConf AU 2016: Pursuing the Strong, Not So Silent Type: A Haskell Story by Katie Miller"
  speakers:
    - Katie Miller
  event_name: RubyConf AU 2016
  date: "2016-02-10"
  published_at: "TODO"
  description: "RubyConf AU 2016: In recent months Katie's Facebook team has completely replaced an in-house interpreted language, moving to a strong and statically typed Haskell DSL called Haxl. Dozens of Facebook developers have become functional programmers, using the open-source Haxl framework to battle spam at scale. This talk will explain how Haskell shines in this context, bust a few myths about the language, and highlight lessons Rubyists and Haskellers could learn from each other."
  video_provider: youtube
  video_id: mLlVsX3p-oc
- title: "Ruby off the Rails: How the government broke the internet"
  raw_title: "RubyConf AU 2016: Ruby off the Rails: How the government broke the internet by Senator Scott Ludlam"
  speakers:
    - Senator Scott Ludlam
  event_name: RubyConf AU 2016
  date: "2016-02-10"
  published_at: "TODO"
  description: "RubyConf AU 2016:"
  video_provider: youtube
  video_id: XwQyQTT_i0Q
- title: Burn Your Idiomatic Ruby
  raw_title: "RubyConf AU 2016: Burn Your Idiomatic Ruby by Arne Brasseur"
  speakers:
    - Arne Brasseur
  event_name: RubyConf AU 2016
  date: "2016-02-10"
  published_at: "TODO"
  description: |-
    RubyConf AU 2016: Ruby makes programmers happy because of its elegant style and readable code. Rubyists like code that looks "right". Clever hacks and obscure use of syntax are frowned upon, and code linters and metrics are used to enforce a clean and idiomatic style.

    But there's a danger in this attitude. Innovations may look foreign at first, and by discarding them offhand we may be throwing the baby out with the bathwater. On the flip side, libraries providing good looking interfaces may be smuggling complexity into your project that is hidden underneath the surface.
  video_provider: youtube
  video_id: 7gcbaNlqdLE
- title: "Code Review: Pitfalls and Good Practices"
  raw_title: "RubyConf AU 2016: Code Review: Pitfalls and Good Practices by Thong Kuah"
  speakers:
    - Thong Kuah
  event_name: RubyConf AU 2016
  date: "2016-02-10"
  published_at: "TODO"
  description: "RubyConf AU 2016: Some of us have practiced code review as part of our software development process. But it is more than just a peer review of code written by another. I will attempt to summarise some of the good practices that worked for us to review code effectively and some of the common mistakes not to make when setting out a code review programme for your team."
  video_provider: youtube
  video_id: akf0Mx72wgI
- title: Functional programming for rubyists
  raw_title: "RubyConf AU 2016: Functional programming for rubyists by Bianca Gibson"
  speakers:
    - Bianca Gibson
  event_name: RubyConf AU 2016
  date: "2016-02-10"
  published_at: "TODO"
  description: "RubyConf AU 2016: Rampant side effects. The shifting sands of mutable state beneath your feet. Mocks as far as the eye can see. Enter Functional Programming. Functional Programming helps you write clear, maintainable and testable code. This talk will cover the core principles of functional programming, how to apply them in ruby, the benefits they can offer, and how to introduce them to other developers."
  video_provider: youtube
  video_id: wOgeMk8PCfE
- title: Refinements - the Worst Feature You Ever Loved
  raw_title: "RubyConf AU 2016: Refinements - the Worst Feature You Ever Loved by Paolo Perrotta"
  speakers:
    - Paolo "Nusco" Perrotta
  event_name: RubyConf AU 2016
  date: "2016-02-10"
  published_at: "TODO"
  description: |-
    RubyConf AU 2016: Refinements are cool. They are the biggest new language feature in Ruby 2. They help you avoid some of Ruby's most dangerous pitfalls. They make your code cleaner and safer.

    Oh, and some people really hate them.

    Are Refinements the best idea since blocks and modules, or a terrible mistake? Decide for yourself. I'll tell you the good, the bad and the ugly about refinements. At the end of this speech, you'll understand the trade-offs of this controversial feature, and know what all the fuss is about.
  video_provider: youtube
  video_id: XvlGOokgSi4
- title: Learning Code Good
  raw_title: "RubyConf AU 2016: Learning Code Good by Saron Yitbarek"
  speakers:
    - Saron Yitbarek
  event_name: RubyConf AU 2016
  date: "2016-02-10"
  published_at: "TODO"
  description: "RubyConf AU 2016:"
  video_provider: youtube
  video_id: q4mPIctwZ-Q
- title: Debugging Diversity
  raw_title: "RubyConf AU 2016: Debugging Diversity by Dan Draper & Catherine Jones"
  speakers:
    - Dan Draper
    - Catherine Jones
  event_name: RubyConf AU 2016
  date: "2016-02-10"
  published_at: "TODO"
  description: |-
    RubyConf AU 2016: Most of us who work in the tech space know that it is painfully lacking in diversity. But why is it the case? After all, the early pioneers of computer science were largely women and yet now only 6% of tech leaders are female. In Australia, the number of Aboriginal developers barely blips past 0%.

    Debugging Diversity performs a root cause analysis on diversity in tech and explains how it can be fixed. How each and everyone of us plays a role. Come and hear how over 2 years of research has culminated in a provocative, yet inspiring presentation.
  video_provider: youtube
  video_id: ZAC2mU24bH8
- title: In-spec-tion
  raw_title: "RubyConf AU 2016: In-spec-tion by Jon Rowe"
  speakers:
    - Jon Rowe
  event_name: RubyConf AU 2016
  date: "2016-02-10"
  published_at: "TODO"
  description: |-
    RubyConf AU 2016: Ever wondered what goes on inside RSpec? How the constituent parts of core mocks and expectations fit together? Or maybe you want to extend it to add a cool new feature.

    Follow me on a whirlwind tour of the insides of RSpec, It’s syntax can often look magical on the outside but underneath it all it’s just Ruby.

    We’ll cover how the constituent parts fit together, how RSpec uses itself to extend itself and how some of the core protocols work.
  video_provider: youtube
  video_id: "-93B0tAVVbM"
- title: Diversity in Tech - It's About More than Just the Hiring Process
  raw_title: "RubyConf AU 2016: Diversity in Tech - It's About More than Just the Hiring Process by Jess Rudder"
  speakers:
    - Jess Rudder
  event_name: RubyConf AU 2016
  date: "2016-02-10"
  published_at: "TODO"
  description: "RubyConf AU 2016: Increasing diversity in tech seems as simple as hiring diverse programmers. However, statistics show that women and minorities leave tech at higher rates than the standard programmer. Learn what you can do to not only make your dev team an attractive option for diverse technical talent, but what you can do to make it a place that talent will stay for years to come."
  video_provider: youtube
  video_id: CgDLI0Ounhg
- title: Explicit Tests Tell a Better Tale
  raw_title: "RubyConf AU 2016: Explicit Tests Tell a Better Tale by Tom Ridge"
  speakers:
    - Tom Ridge
  event_name: RubyConf AU 2016
  date: "2016-02-10"
  published_at: "TODO"
  description: |-
    RubyConf AU 2016: Red, Green, Refactor is a persistent mantra that is drilled into us from day one. As a developer new to Ruby, how do we know how to write the right kind of test? When should we refactor? What tricks and techniques can we use to improve our tests and recognise the feedback they give us to build well designed applications?

    We’re going to take a look at how our tests give us feedback on our application. We’ll identify some testing smells, and how to determine when to make that refactoring and when not to.
  video_provider: youtube
  video_id: z5EctI4jATY
- title: Humane Development - Empathy
  raw_title: "RubyConf AU 2016: Humane Development - Empathy by Ernie Miller"
  speakers:
    - Ernie Miller
  event_name: RubyConf AU 2016
  date: "2016-02-10"
  published_at: "TODO"
  description: "RubyConf AU 2016:"
  video_provider: youtube
  video_id: yeBpknHjyGo
- title: Winning in Production
  raw_title: "RubyConf AU 2016: Winning in Production by Dr. Nic Williams"
  speakers:
    - Dr. Nic Williams
  event_name: RubyConf AU 2016
  date: "2016-02-10"
  published_at: "TODO"
  description: "RubyConf AU 2016:"
  video_provider: youtube
  video_id: 1S4NV6F3d3Q
- title: Feedback Matters
  raw_title: "RubyConf AU 2016: Feedback Matters by Elle Meredith"
  speakers:
    - Elle Meredith
  event_name: RubyConf AU 2016
  date: "2016-02-10"
  published_at: "TODO"
  description: |-
    RubyConf AU 2016: Feedback matters, whether positive or corrective. It's essential to creating a productive work environment. It shows attentiveness and signals appreciation for a job well done. It redirects undesirable behaviour to other productive alternatives.

    So why are many of us so stingy with feedback? Do we try to avoid difficult conversations? Do we know how to give feedback effectively? Whatever the reasons are, we can learn when and how to comfortably offer feedback to others.

    This talk will cover why feedback matters, what makes feedback effective, when and to give feedback, and much more.
  video_provider: youtube
  video_id: vpSv1wS49yA
- title: What If Shakespeare Wrote Ruby?
  raw_title: "RubyConf AU 2016: What If Shakespeare Wrote Ruby? by Adam Cuppy"
  speakers:
    - Adam Cuppy
  event_name: RubyConf AU 2016
  date: "2016-02-10"
  published_at: "TODO"
  description: |-
    RubyConf AU 2016: Did you know that Shakespeare wrote almost no direction into his plays? No fight direction. No staging. No notes to the songs. Of the 1700 words he created, there was no official dictionary. That’s right the author of some of the greatest literary works in history, which were filled with situational complexity, fight sequences and music, include NO documentation! How did he do it?

    In this talk, we're going "thee and thou." I'm going to give you a crash course in how: Shakespeare writes software.
  video_provider: youtube
  video_id: nEHLhiOLB0A
- title: Out of sight, out of mind? Helping teams thrive
  raw_title: "RubyConf AU 2016: Out of sight, out of mind? Helping teams thrive by Allison McMillan"
  speakers:
    - Allison McMillan
  event_name: RubyConf AU 2016
  date: "2016-02-10"
  published_at: "TODO"
  description: |-
    RubyConf AU 2016: Out of sight, out of mind? Helping teams thrive when they’re permanently Out-Of-Office

    “Besides not being as productive, what are the challenges of working remotely?” This and other questions are asked to distributed teams all the time. Presented by a remote manager and an employee with varying remote experiences in different companies, both successful and not, we’ll focus on real failures and teams that achieved success. Some remote teams don’t quite have it down, others wish their company understood them better. Even more folks want to work remotely but don’t know how to do it effectively. We’ll dive into each of these areas demonstrating failures and strategies that work.
  video_provider: youtube
  video_id: bGGj7JFzPns
- title: Rails Performance Tips
  raw_title: "RubyConf AU 2016: Rails Performance Tips by Richard Huang"
  speakers:
    - Richard Huang
  event_name: RubyConf AU 2016
  date: "2016-02-10"
  published_at: "TODO"
  description: "RubyConf AU 2016: Many developers are complaining that rails is slow, but most teams are not tuning performance at all or not properly, in this talk, you will learn how to monitor performance, how to find out performance issue and how to fix, I will also show you some tips that can dramatically improve your rails apps' performance."
  video_provider: youtube
  video_id: 2xu8MDNj0Dk
- title: Site Availability is for Everybody
  raw_title: "RubyConf AU 2016: Site Availability is for Everybody by Stella Cotton"
  speakers:
    - Stella Cotton
  event_name: RubyConf AU 2016
  date: "2016-02-10"
  published_at: "TODO"
  description: |-
    RubyConf AU 2016: Your phone rings in the middle of the night and the site is down- do you know what to do? Don’t let a crisis catch you off guard! Practice your skills with load testing.

    This talk will cover common pitfalls when simulating load on your application, and key metrics you should look for when your availability is compromised. We’ll also look at how tools like ruby-prof and bullet can help unearth problem code in Ruby apps.
  video_provider: youtube
  video_id: TPD3qiWsEV8
- title: Event Sourcing, or Why ActiveRecord Must Die
  raw_title: "RubyConf AU 2016: Event Sourcing, or Why ActiveRecord Must Die by Sebastian von Conrad"
  speakers:
    - Sebastian von Conrad
  event_name: RubyConf AU 2016
  date: "2016-02-10"
  published_at: "TODO"
  description: |-
    RubyConf AU 2016: Much has been said about the dangers with ActiveRecord, but the advice is usually limited to avoiding callbacks or not building God models. We still use it because there hasn't been a viable alternative. It is not actually a trait unique to ActiveRecord that makes it dangerous, however--it's because it's an ORM, and all ORMs must die.

    With Event Sourcing, we can build Ruby applications that are simple, scalable, extensible, and elegant without ActiveRecord or any other ORM anywhere in sight. We get a free time machine, and find out that Event Sourcing is a lot older than we might think.
  video_provider: youtube
  video_id: hiFqu1BTgsA
