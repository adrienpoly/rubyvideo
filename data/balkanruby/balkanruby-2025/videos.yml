---

# Website: https://balkanruby.com
# Schedule: https://balkanruby.com

## Day 1 - 2025-04-25

# Registration

# Introduction

- title: 'Privacy-first architecture'
  raw_title: Andrey Sitnik - Privacy-first architecture
  speakers:
    - Andrey Sitnik
  event_name: Balkan Ruby 2025
  date: "2025-04-25"
  published_at: '2025-05-01'
  description: |-
    Why and how modern developers could increase the privacy of modern Web.

    The popularity of clouds, the rise of huge monopolies across the internet, and the growth of shady data brokers recently have made the world a much more dangerous place for ordinary people—here is how we fix it.

    In this talk, Andrey Sitnik, the creator of PostCSS and the privacy-first open-source RSS reader, will explain how we can stop this dangerous trend and make the web a private place again. — Beginners will find simple steps, which can be applied to any website — Advanced developers will get practical insights into new local-first architecture — Privacy experts could find useful unique privacy tricks from a global world perspective and beyond just U.S. privacy risks

    https://evilmartians.com/events/privacy-first-architecture-balkanruby
  video_provider: youtube
  video_id: dPvX3u8BI2U

# Break

- title: 'The Long Game: Building for Forever in Ruby Core'
  raw_title: 'Jasveen Sandral - The Long Game: Building for Forever in Ruby Core'
  speakers:
    - Jasveen Sandral
  event_name: Balkan Ruby 2025
  date: "2025-04-25"
  published_at: '2025-05-02'
  description: |-
    When you contribute to Ruby Core, you're not just writing code for today - you're crafting an API that could be used for decades. Through the journey of implementing CSV::TSV in Ruby's standard library, I'll share critical insights about long-term thinking in core development.

    Key aspects we'll explore: - Why seemingly simple features (like TSV support) can take months to get right - How decisions made today impact thousands of developers for years to come - Real examples of API design choices that aged well (and some that didn't) - Balancing backward compatibility with modern expectations - Cross-cultural collaboration in long-term open-source maintenance

    You'll learn: - Practical strategies for designing APIs that stand the test of time - How to make breaking changes without breaking the community's trust.
  video_provider: youtube
  video_id: 4QCnyAYMKjE

# Break

- title: 'Adapting and Thriving: Insights from a 16-Year Project Journey'
  raw_title: 'Denitsa Belogusheva - Adapting and Thriving: Insights from a 16-Year
    Project Journey'
  speakers:
    - Denitsa Belogusheva
  event_name: Balkan Ruby 2025
  date: "2025-04-25"
  published_at: '2025-05-02'
  description: |-
    In this talk, I’ll share insights from my 16-year journey with a long-term project and discuss sustained work's technical and personal challenges.

    From evolving technologies and legacy code to managing team dynamics, burnout, and the shifting needs of stakeholders. We’ll dive into how long-term projects build resilience, creativity, and humility and how the project and its stakeholders evolve.
  video_provider: youtube
  video_id: efAb_r7DRQs

# Lunch Break

- title: 'Shit Happens: Handling Mistakes 101'
  raw_title: 'Michał Łęcicki - Shit Happens: Handling Mistakes 101'
  speakers:
    - 'Michał Łęcicki'
  event_name: Balkan Ruby 2025
  date: "2025-04-25"
  published_at: '2025-05-02'
  description: 'Let’s face it: programmers make mistakes. Some are minor, some are
    hilarious, and some can lead to disaster. But how we handle those mistakes can
    make all the difference - not just in the moment, but for the long-term success
    of our teams.'
  video_provider: youtube
  video_id: 0CuW5mvhZpY

# Break

- title: 'CodeTracer, A new way to debug'
  raw_title: Franz Fischbach and Stanislav Vasilev - CodeTracer, A new way to debug
    Ruby
  speakers:
    - Franz Fischbach
    - Stanislav Vasilev
  event_name: Balkan Ruby 2025
  date: "2025-04-25"
  published_at: '2025-05-02'
  description: |-
    CodeTracer is a powerful, open-source, time-traveling debugger designed to revolutionize debugging for Ruby and other programming languages. Unlike traditional debuggers, CodeTracer records the execution of a program into a self-contained trace file, allowing developers to replay, analyze, and debug issues effortlessly.

    https://github.com/metacraft-labs/codetracer
  video_provider: youtube
  video_id: PkvZxHv9u3g

# Break

- title: 'Sometimes you need to change to stay the same'
  raw_title: Martin Verzilli - Sometimes you need to change to stay the same
  speakers:
    - Martin Verzilli
  event_name: Balkan Ruby 2025
  date: "2025-04-25"
  published_at: '2025-05-02'
  description: Next September, the Crystal programming language will turn 13 years
    old. I was there when it was born as a fun experiment, and I'm still there 13
    years later, as it continues to develop into a proud descendant of our beloved
    Ruby. I'm going to share a handful of stories of key decisions we had to made
    along these years to guarantee its continued existence. I want us all to smile
    at the sweet irony that, often times, embracing change is our best chance at building
    somewhat permanent things in a fundamentally impermanent world.
  video_provider: youtube
  video_id: D4i-tsQ8E68


## Day 2 - 2025-04-26

# Breakfast

# Introduction


- title: 'Staying competitive'
  raw_title: Yaroslav Shmarov - Staying competitive
  speakers:
    - Yaroslav Shmarov
  event_name: Balkan Ruby 2025
  date: "2025-04-26"
  published_at: '2025-05-05'
  description: |-
    As a developer

    Embrace AI coding tools. Buy a Cursor subscription. Your most productive peers use it. Business cares about delivering results, not your artisanship.

    As a job applicant

    Remote work = much more competition for a job. Last month I posted on Linkedin that I am looking for a Ruby dev. I had over 500 applications. How can I choose?! Stand out. Write a "Today I learned", "notes to self" blog. Create a few youtube videos. Hundreds of Ruby devs have created videos. Are you a Web developer? Do you have at least one web app running on your own? (Not client work?) You must have a portfolio. Visit conferences. Make connections. I found all my best jobs over the last 4 years via connections.

    As a content creator

    Most of my old videos can be answered by ChatGPT. But do you know what question you want to ask? Inform about the general concepts, and the learner can use AI to dive into details. Focus on value, not technical details. Before: "How to use gem Friendly ID"? After: "Use friendly urls for better SEO".

    Cohorts have unique value over self-paced learning.

    Create videos about multi-tool integrations, that require to click through multiple screens (example: apple oauth setup)
  video_provider: youtube
  video_id: VfrjNufF_Fg

# Break

- title: 'In Limbo: Managing Transitional States'
  raw_title: 'Jeremy Smith - In Limbo: Managing Transitional States'
  speakers:
    - 'Jeremy Smith'
  event_name: Balkan Ruby 2025
  date: "2025-04-26"
  published_at: '2025-05-05'
  description: |-
    "We're switching to a new CSS framework." "Billing needs to be decoupled from the user model." "The team has decided to change authorization libraries." "We have to refactor that critical data process with low test coverage."

    Over a web application's lifespan, many changes to code and data cannot (or should not) be made in one deployment. These complex, incremental transitions often need to be interleaved with feature development and other work.

    How do developers manage these limbo states? How do teams ensure they arrive at their destination safely? In this talk, we'll investigate different transitions within Rails applications, including changes to dependencies, modeling/architecture, and data processing. We'll uncover some underlying principles and practices to help us succeed when managing transitions in our software systems.
  video_provider: youtube
  video_id: weIbPgDdlQo

# Break

- title: 'The Joy and Agony of GraphQL'
  raw_title: Stefan Kanev - The Joy and Agony of GraphQL
  speakers:
    - Stefan Kanev
  event_name: Balkan Ruby 2025
  date: "2025-04-26"
  published_at: '2025-05-05'
  description: Stefan Kanev is a CTO at Dext and a host of https://tilde-slash.fm.
  video_provider: youtube
  video_id: tTCeLE2GpeQ

# Lunch Break

- title: 'Beyond the Hype: Practical lessons in Long-Term Rails'
  raw_title: 'Julia Lopez - Beyond the Hype: Practical lessons in Long-Term Rails
    maintenance'
  speakers:
    - Julia López
  event_name: Balkan Ruby 2025
  date: "2025-04-26"
  published_at: '2025-05-05'
  description: |-
    Beyond the Hype: Practical lessons in Long-Term Rails maintenance

    New Rails features like Hotwire, Kamal, and Solid AllTheThings are super cool, but not everyone uses them daily. Many of us work on Rails apps that have grown large and complex. To keep these apps thriving, we need to stay up to date, deal with technical debt, and add new features that are important for our business needs while ensuring nothing breaks for our customers.

    In this talk, I’ll give you a real-life look at how a small team of engineers keeps an almost 20-year-old monolithic Rails application at Harvest running strong and ready for the future. I’ll share how our workflows have changed (like how we write PR descriptions or how we advocate for refactoring through exploration), how we stay up to date with Rails updates (including why we chose to utilize new out-of-the-box technologies and why we decided to keep older libraries in other situations), and the practical lessons and strategies we use to keep things running smoothly, like observability, feature flags, and other utils and gems like scientist.
  video_provider: youtube
  video_id: uublj1pAkOg

# Break

- title: 'Creativity: The only skill you need in the long'
  raw_title: 'Pavel Strzalkowski - Creativity: The only skill you need in the long
    term'
  speakers:
    - Paweł Strzałkowski
  event_name: Balkan Ruby 2025
  date: "2025-04-26"
  published_at: '2025-05-05'
  description: 'How does a developer fit into IT after turning 40 or 50? Would they
    still have the stamina to learn and keep up? With over two decades of experience
    in web development, I can confidently say that one skill remains in constant demand:
    creativity. You may write in Ruby, JavaScript, Swift, or Python. An engineering
    mindset combined with creativity can solve any problem and position you as a leader
    in any field. This presentation addresses this topic and offers an entertaining,
    live demonstration of creative possibilities for the upcoming years—leveraging
    a combination of Ruby, Rails, and large language models (e.g., GPT-4). It shows
    that it is easy to implement features such as voice control and image recognition
    in Ruby. Showcases how the Ruby ecosystem gives a creative advantage in the long
    term.'
  video_provider: youtube
  video_id: wSTopJCS3Iw

# Break

- title: 'Ruby Got it Right: Lessons in Innovation for Everyone'
  raw_title: 'Bozhidar Batsov - Ruby Got it Right: Lessons in Innovation for Everyone'
  speakers:
    - 'Bozhidar Batsov'
  event_name: Balkan Ruby 2025
  date: "2025-04-26"
  published_at: '2025-05-05'
  description: Bozhidar is the author of RuboCop and the editor of the community Ruby
    style guide. He's involved in a myriad of open-source projects, mostly related
    to Ruby, Clojure and Emacs. Many people would probably describe him as an Emacs
    zealot (and they would be right)
  video_provider: youtube
  video_id: riiGCpRmxH4
