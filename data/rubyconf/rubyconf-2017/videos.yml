---
# TODO: talk dates
# TODO: talks running order
# TODO: conference schedule website

- title: Lightning Talks
  raw_title: "RubyConf 2017:  Lightning Talks"
  speakers:
    - Michael Hartl
    - Jonathan Slate
    - Kyle Heironimus
    - Yechiel Kalmenson
    - Heather Herrington
    - Jen Pengelly
    - Brian Underwood
    - Cameron Dutro
    - Aaron Rosenberg
    - Starr Chen
    - Margo Urey
    - Ryan Laughlin
    - Adam Cuppy
    - Julia Cuppy
    - Jim Remsik
    - Amir Rajan
    - Dave Aronson
    - Sam Livingston-Grey
    - Noah Gibbs
    - Heidi Waterhouse
    - Akira Matsuda
  event_name: RubyConf 2017
  published_at: "2017-11-28"
  description: |-
    Lightning Talks

    0:00:40:03 - Michael Hartl
    0:01:25:27 - Jonathan Slate
    0:02:47:07 - Kyle Heironimus
    0:04:45:25 - Yechiel Kalmenson
    0:07:05:05 - Heather Herrington
    0:12:10:23 - Jen Pengelly
    0:16:09:12 - Brian Underwood
    0:21:15:29 - Cameron Dutro
    0:26:14:15 - Aaron Rosenberg
    0:31:23:11 - Starr Chen
    0:37:28:26 - Margo Urey
    0:43:25:21 - Ryan Laughlin
    0:49:19:16 - Adam & Julia Cuppy
    0:54:24:16 - Jim Remsik
    1:00:56:09 - @amirrajan
    1:07:06:17 - Dave Aronson
    1:12:24:12 - Sam Livingston-Grey
    1:17:10:13 - Noah Gibbs
    1:22:30:29 - Heidi Waterhouse
    1:27:56:12 - Akira Matsuda
  video_id: YMoa5JpjEtM

- title: Keynote - The Impermanence of Software by Andy Croll
  raw_title: "RubyConf 2017: Keynote - The Impermanence of Software by Andy Croll"
  speakers:
    - Andy Croll
  event_name: RubyConf 2017
  published_at: "2017-11-28"
  description: The Impermanence of Software by Andy Croll
  video_id: l2WgVr1rv3c

- title: Lending Privilege
  raw_title: "RubyConf 2017: Lending Privilege by Anjuan Simmons"
  speakers:
    - Anjuan Simmons
  event_name: RubyConf 2017
  published_at: "2017-11-28"
  description: |-
    Lending Privilege by Anjuan Simmons

    Diversity and inclusion have become hot topics in technology, but you may not know how you can make a difference. However, this talk will help you understand that, no matter your background, you have privilege and can lend it to marginalized groups in tech.
  video_id: zd4PsSk_0iQ

- title: Writing Inclusively about Technology Topics
  raw_title: "RubyConf 2017: Writing Inclusively about Technology Topics by Thursday Bram"
  speakers:
    - Thursday Bram
  event_name: RubyConf 2017
  published_at: "2017-11-28"
  description: |-
    Writing Inclusively about Technology Topics by Thursday Bram

    Whether you're writing documentation, a talk for a technical conference, or a blog post on your work, identity can impact how your audience perceives and uses both written material and code repositories. If you want your work to be accessible to a wide audience, you need to write about it in an inclusive way. This talk will give you hands-on examples and resources to do just that!
  video_id: j1aLtqcTnk0

- title: "Opening Keynote: Good Change, Bad Change"
  raw_title: "RubyConf 2017: Opening Keynote - Good Change, Bad Change by Yukihiro Matsumoto"
  speakers:
    - Yukihiro "Matz" Matsumoto
  event_name: RubyConf 2017
  published_at: "2017-11-28"
  description: Opening Keynote - Good Change, Bad Change by Yukihiro Matsumoto
  video_id: 1-A9eRzCBL0

- title: "What If... ?: Ruby 3"
  raw_title: "RubyConf 2017: What If... ?: Ruby 3 by Eric Weinstein"
  speakers:
    - Eric Weinstein
  event_name: RubyConf 2017
  published_at: "2017-11-28"
  description: |-
    What If... ?: Ruby 3 by Eric Weinstein

    What if Professor X and Magneto formed the X-Men together? What if Jessica Jones had joined the Avengers? What if Tony Stark wrote Ruby? (Okay, I made that last one up, but we'd probably all read it.) This talk, in the mode of Marvel's What if... ? comics, explores what Ruby 3 might look like if key decisions in its history had been (or might be) made differently. We'll look at three "what if"s in particular: "what if Ruby had a static type system?", "what if Ruby ran in the browser?", and "what if Ruby didn't have a global interpreter lock?"
  video_id: 0i2NgDhXH9Q

- title: 4 Programming Paradigms in 45 Minutes
  raw_title: "RubyConf 2017: 4 Programming Paradigms in 45 Minutes by Aja Hammerly"
  speakers:
    - Aja Hammerly
  event_name: RubyConf 2017
  published_at: "2017-11-28"
  slides_url: https://thagomizer.com/files/ParadigmsRubyConf2017.pdf
  description: |-
    4 Programming Paradigms in 45 Minutes by Aja Hammerly

    One of the most important lessons I've learned is that programming languages are tools and not all tools are good for all jobs. Some tasks are easier to solve functionally. Some are clearly suited for OO. Others get simpler when you use constraint solving or pattern matching.

    Let's go on a whirlwind tour of 4 different programming languages emphasizing different programming techniques: OO, functional, logical, and procedural. You'll leave this talk with a better understanding of which languages are best suited to which types of jobs and a list of resources for learning more.
  video_id: 3TBq__oKUzk

- title: Compiling Ruby
  raw_title: "RubyConf 2017: Compiling Ruby by Kevin Newton"
  speakers:
    - Kevin Newton
  event_name: RubyConf 2017
  published_at: "2017-11-28"
  description: |-
    Compiling Ruby by Kevin Newton

    Since Ruby 2.3 and the introduction of RubyVM::InstructionSequence::load_iseq, we've been able to programmatically load ruby bytecode. By divorcing the process of running YARV byte code from the process of compiling ruby code, we can take advantage of the strengths of the ruby virtual machine while simultaneously reaping the benefits of a compiler such as macros, type checking, and instruction sequence optimizations. This can make our ruby faster and more readable! This talk demonstrates how to integrate this into your own workflows and the exciting possibilities this enables.
  video_id: iWDOXi7Kj2o

- title: How to Build a World-Class Rock Paper Scissors Bot
  raw_title: "RubyConf 2017: How to Build a World-Class Rock Paper Scissors Bot by Dorothy Jane Wingrove"
  speakers:
    - Dorothy Jane Wingrove
  event_name: RubyConf 2017
  published_at: "2017-11-28"
  description: |-
    How to Build a World-Class Rock Paper Scissors Bot by Dorothy Jane Wingrove

    This talk will teach you how to play rock-paper-scissors (no really, it’s more complicated than you might think) plus a little bit about AI history. It will also make you laugh — at least a little. You'll also learn some game theory, some mind games, and finally, how to build a world champion bot in the universe of Rock Paper Scissors.

    This talk is aimed at all levels of Ruby programmers - beginner or advanced. All the examples in the talk and are explained step by step, and many of them relatively basic.
  video_id: Vo3qdIBOiko

- title: Git Driven Refactoring
  raw_title: "RubyConf 2017: Git Driven Refactoring by Ashley Ellis Pierce"
  speakers:
    - Ashley Ellis Pierce
  event_name: RubyConf 2017
  published_at: "2017-11-28"
  description: |-
    Git Driven Refactoring by Ashley Ellis Pierce

    Often we know that our code needs refactoring, but we have no idea where to start. Maybe we studied some common code smells and learned about the things that we should be avoiding, but memorizing the rules doesn’t automatically lead to fixing all problems. In this talk, we explore how you can use Git to recognize and address violations to each of the SOLID principles. Using diffs, commit history and pull requests you can learn to recognize patterns in code that point to problems. These same tools can help you correct those issues and write more maintainable code.
  video_id: 3OgbQOsW61Y

- title: Packing your Ruby application into a single executable
  raw_title: "RubyConf 2017: Packing your Ruby application into a single executable by  Minqi Pan"
  speakers:
    - Minqi Pan
  event_name: RubyConf 2017
  published_at: "2017-11-28"
  description: |-
    Packing your Ruby application into a single executable by  Minqi Pan

    Recent languages like Go compiles a project into a nice executable, why can't good ol' Ruby? We have built an packer for Ruby to do just that. It is 100% open-source, and can produce executables for Windows, macOS and Linux individually. By packing, distributing Ruby apps are made extremely easy, additionally with intellectual property protection. Auto-updating is also made easy, in that the executable only needs to download and replace itself. So, how we did it? How to use it? What goes under the hood? What future will this bring to Ruby? That's what will be unraveled in this talk!
  video_id: 1mme7HiLqzA

- title: Just A Ruby Minute
  raw_title: "RubyConf 2017: Just A Ruby Minute by Andrew Faraday"
  speakers:
    - Andrew Faraday
  event_name: RubyConf 2017
  published_at: "2017-11-28"
  description: |-
    Just A Ruby Minute by Andrew Faraday

    Renowned game show Just a Minute has delighted audiences across the world for almost half a century, becoming part of the British national consciousness. Speakers are challenged to speak on an unseen (Rubyesque!) topic for one minute without hesitation, repetition, or deviation. It’s fast-paced, funny, insightful, and much harder than it sounds… and you might even learn something!
  video_id: DYc5X-in_oM

- title: "The Good Bad Bug: Fail Your Way to Better Code"
  raw_title: "RubyConf 2017: The Good Bad Bug: Fail Your Way to Better Code by Jessica Rudder"
  speakers:
    - Jessica Rudder
  event_name: RubyConf 2017
  published_at: "2017-11-28"
  description: |-
    The Good Bad Bug: Fail Your Way to Better Code by Jessica Rudder

    Programming history is filled with bugs that turned out to be features and limitations that pushed developers to make even more interesting products. We’ll journey through code that was so ‘bad’ it was actually good. Along the way we'll look at the important role failure plays in learning. Then we’ll tame our inner perfectionists and tackle an approach to writing code that will help us fail spectacularly on our way to coding success.
  video_id: PW3Pj5o70JA

- title: "Getting Unstuck: Using the Scientific Method for Debugging"
  raw_title: "RubyConf 2017:  Getting Unstuck: Using the Scientific Method for Debugging by Caroline Taymor"
  speakers:
    - Caroline Taymor
  event_name: RubyConf 2017
  published_at: "2017-11-28"
  description: |-
    Getting Unstuck: Using the Scientific Method for Debugging by Caroline Taymor

    Have you ever gotten really stuck while trying to understand the cause of a bug? Thinking of your debugging session as a science experiment, and using the scientific method can help you make progress again. Come and learn how to adapt the scientific method (the process used for scientific research) to get past that stuck place and find the cause of bugs or production incidents. You’ll walk away with a great new tool to keep you calm and focused in the face of inevitable bugs.
  video_id: spwAyEn2VXs

- title: Deterministic Solutions to Intermittent Failures
  raw_title: "RubyConf 2017: Deterministic Solutions to Intermittent Failures by Tim Mertens"
  speakers:
    - Tim Mertens
  event_name: RubyConf 2017
  published_at: "2017-11-28"
  description: |-
    Deterministic Solutions to Intermittent Failures by Tim Mertens

    Monday mornings are bad when the coffee runs out, but they’re even worse when all of your impossible to reproduce, “flaky” tests decide to detonate at the same time.

    Join us to learn a systematic, proven workflow for expertly debugging any test failure including consistent, order-related, and non-deterministic failures. We’ll discuss the importance of fixing intermittent failures before they reach critical mass and why you should eradicate the term “flaky tests” from your vocabulary.

    Don’t wait for an emergency to prioritize fixing the ticking time bomb of intermittent test failure.
  video_id: JH9vugpPNyw

- title: "Leadership starts with Listening: Amplify your Impact"
  raw_title: "RubyConf 2017: Leadership starts with Listening: Amplify your Impact by Heidi Helfand"
  speakers:
    - Heidi Helfand
  event_name: RubyConf 2017
  published_at: "2017-11-28"
  description: |-
    Leadership starts with Listening: Amplify your Impact by Heidi Helfand

    Listening is power. By “tuning in” and applying self management and directed curiosity you can help others thrive and solve their own problems. Doing this not only leads to greater ownership, but also more leaders in your organization instead of “order takers”. In this interactive talk I’ll teach you practical communication skills so you can become a more available and empowering coworker, friend and leader.
  video_id: VJxQZixy4b8

- title: High Cost Tests and High Value Tests
  raw_title: "RubyConf 2017: High Cost Tests and High Value Tests by Noel Rappin"
  speakers:
    - Noel Rappin
  event_name: RubyConf 2017
  published_at: "2017-11-28"
  description: |-
    High Cost Tests and High Value Tests by Noel Rappin

    There is a value in writing tests and there is also a cost. The currency is time. The trade-offs are difficult to evaluate because the cost and value are often seen by different people. The writer of the test bears much of the short term cost while long term benefits and cost are borne by the rest of the team. By planning around both the the cost and value of your tests, you’ll improve your tests and your code. How much do slow tests cost? When is it worth it to test an edge case? How can you tell if testing is helping? Here are some strategies to improve your tests and code.
  video_id: IS_9cRP9OZM

- title: Finding Responsibility
  raw_title: "RubyConf 2017: Finding Responsibility by Caleb Thompson"
  speakers:
    - Caleb Thompson
  event_name: RubyConf 2017
  published_at: "2017-11-28"
  description: |-
    Finding Responsibility by Caleb Thompson

    In 2011, with a team of interns at a Department of Defense contractor, I created a Wi-Fi geolocation app to locate hotspots. It could find the location in 3D space of every hotspot near you in seconds. We made formulas to model signal strength and probable distances. We used machine learning to optimize completion time and accuracy.

    I was so caught up in the details that it took me months to see it would be used to kill people. What do we do when we discover that we're building something immoral or unethical? How can we think through the uses of our software to avoid this problem entirely?
  video_id: UBdBoWAtLNI

- title: There's Nothing . new under the sun
  raw_title: "RubyConf 2017: There's Nothing . new under the sun by Justin Searls and Josh Greenwood"
  speakers:
    - Justin Searls
    - Josh Greenwood
  event_name: RubyConf 2017
  published_at: "2017-11-28"
  description: |-
    There's Nothing.new under the sun by Justin Searls and Josh Greenwood

    Quick: say something about Ruby that hasn't already been said.

    Not easy, right? This community is prolific. In thousands of talks, Ruby's story has been told and retold. We heralded programmer happiness, path of least surprise, and confident code. We unleashed metaprogramming (until we tamed our DSLs). We built apps, tested them to death, and then legacy-rescued them.

    What's left to say? We could tell the same stories again, but that wouldn't be very DRY. What we need to hear was often said years ago, so this talk will help us rediscover timeless lessons from our community's greatest hits.
  video_id: tbzPeLaqp10

- title: Saving Ruby from the Apocalypse
  raw_title: "RubyConf 2017: Saving Ruby from the Apocalypse by Jason Charnes"
  speakers:
    - Jason Charnes
  event_name: RubyConf 2017
  published_at: "2017-11-28"
  description: |-
    Saving Ruby from the Apocalypse by Jason Charnes

    You've just woken from a coma to find out that Ruby has fallen victim to the programming apocalypse. Walkers have taken over the programming world looking to infect any developers they can find. Posing even more of a threat are the other survivor camps such as Java and PHP all fighting to survive by any means necessary.

    After reuniting with the Ruby Community, it's time to fight for survival. Ruby developers who remained safe in the post-apocalyptic Ruby community need a leader to keep the community together and keep the language thriving. Are you willing to step up to keep Ruby alive?
  video_id: PiT2XEWae1c

- title: The Unbearable Vulnerability of Open Source
  raw_title: "RubyConf 2017: The Unbearable Vulnerability of Open Source by Eileen M Uchitelle"
  speakers:
    - Eileen M Uchitelle
  event_name: RubyConf 2017
  published_at: "2017-11-28"
  description: |-
    The Unbearable Vulnerability of Open Source by Eileen M Uchitelle

    If contributing to open source was only about writing code, it would be easy. In reality open source exposes our insecurities and makes us feel vulnerable. Vulnerability can inspire change, but can also paralyze us for fear of not being good enough. In this talk we'll look at how vulnerability affects open source contributors and explore how maintainers can foster a welcoming community. Contributors will learn how to identify projects with empathetic leaders who value GitHub’s community standards. Cultivating a better environment for contributing makes open source more sustainable for all.
  video_id: zOB4e-1cvsU

- title: Augmenting Human Decision Making with Data Science
  raw_title: "RubyConf 2017: Augmenting Human Decision Making with Data Science by Kelsey Pedersen"
  speakers:
    - Kelsey Pedersen
  event_name: RubyConf 2017
  published_at: "2017-11-28"
  description: |-
    Augmenting Human Decision Making with Data Science by Kelsey Pedersen

    Humans and data science are flawed on their own. Humans lack the ability to process large volumes of information. Machines lack intuition, empathy and nuance. You’ll learn how to guide users of expert-use systems by applying data science to their user experience. Layering data science within our systems allows us to take advantage of the human-touch while leveraging our large data sets. In this talk, you’ll learn the process for sprinkling data science into your applications, the challenges we have faced along the way, and how to measure the business impact.
  video_id: mUcamCBDNcg

- title: "Prototyping with Paper: How Board Games Become Reality"
  raw_title: "RubyConf 2017: Prototyping with Paper: How Board Games Become Reality by Mark Simoneau"
  speakers:
    - Mark Simoneau
  event_name: RubyConf 2017
  published_at: "2017-11-29"
  description: |-
    Prototyping with Paper: How Board Games Become Reality by Mark Simoneau

    Much like developing any feature in your app, the best developers start with an idea and then refine it through rapid testing, much of which requires very few technical skills--but does take focus, observation and patience. In this talk we'll discuss the process of developing and playtesting a board game and what we as software developers can learn from it to improve the features and apps we create. If you like board games or just want to create better experiences for your users, then this talk is for you!
  video_id: u68bi1kDwZ8

- title: How I Learned to Stop Worrying and Love Unit Testing
  raw_title: "RubyConf 2017: How I Learned to Stop Worrying and Love Unit Testing by Valerie Woolard Srinivasan"
  speakers:
    - Valerie Woolard
  event_name: RubyConf 2017
  published_at: "2017-11-29"
  description: |-
    How I Learned to Stop Worrying and Love Unit Testing by Valerie Woolard Srinivasan

    We all know that testing is important. But it's also hard to get right. We'll talk about how to write effective tests that not only protect against defects in our code, but encourage us to write better quality code to begin with. You'll leave this talk with ideas on the philosophies that should inform your tests, and a good idea of what makes a good test suite.
  video_id: cWneFu2EnOY

- title: Live Coding Music with Sonic Pi
  raw_title: "RubyConf 2017: Live Coding Music with Sonic Pi by Sam Aaron"
  speakers:
    - Sam Aaron
  event_name: RubyConf 2017
  published_at: "2017-11-29"
  description: |-
    Live Coding Music with Sonic Pi by Sam Aaron

    Sonic Pi is a Ruby DSL & IDE for live coding music with a specific focus on education. In this demo-heavy talk, we’ll cover its history - why it was created, how it evolved and what it can do today. We’ll also take a quick technical nosedive into some of the more interesting linguistic innovations that were necessary to perform live with code. For example, we’ll see how we can rhythmically sync multiple threads, use lexical blocks to close over time, accurately sleep without drifting and deterministically manipulate global state concurrently. Expect noise!
  video_id: v9fKE0huqAE

- title: Voice Controlled Home Automation in Ruby
  raw_title: "RubyConf 2017: Voice Controlled Home Automation in Ruby by Jeff Sacks"
  speakers:
    - Jeff Sacks
  event_name: RubyConf 2017
  published_at: "2017-11-29"
  description: |-
    Voice Controlled Home Automation in Ruby by Jeff Sacks

    Have you ever wanted to change the channel on your TV but the remote was missing? Wouldn't it be great to tell your TV to change the channel by speaking to it? In this talk, you will learn how to control your TV with nothing but your voice. Using Ruby you can connect your TV and cable box with the Amazon Echo, AWS Lambda, and a Raspberry Pi. Once you learn how easy this is to setup, you'll never look for that missing remote again.
  video_id: UaoL8x-brO8

- title: Rubyik's Cube
  raw_title: "RubyConf 2017: Rubyik's Cube by Stafford Brunk"
  speakers:
    - Stafford Brunk
  event_name: RubyConf 2017
  published_at: "2017-11-29"
  description: |-
    Rubyik's Cube by Stafford Brunk

    The Rubik's Cube is one of the world's most recognizable puzzles. Knowing how to solve a scrambled cube can almost be called a badge of honor. While there are a multitude of books, articles, and apps on how to solve a cube as a human, what does it take to have a computer solve the problem? This talk will dive into exactly that question. We'll start with an overview of Rubik's Cube algorithms, move onto the logistics of implementing these algorithms, and finish up with some real examples of using Ruby to solve a Rubik's Cube!
  video_id: NTiGuvHkPOw

- title: How to load 1m lines of Ruby in 5s
  raw_title: "RubyConf 2017: How to load 1m lines of Ruby in 5s by Andrew Metcalf"
  speakers:
    - Andrew Metcalf
  event_name: RubyConf 2017
  published_at: "2017-11-29"
  description:
    "How to load 1m lines of Ruby in 5s by Andrew Metcalf \n\nApplications
    written in Ruby, Python and several other popular dynamic languages become very
    slow to boot as they grow to millions of lines of code. Waiting to reload code
    in development becomes a major frustration and drain on productivity. This talk
    will discuss how we reduced the time to boot a service at Stripe from 35s to 5s
    and the static analysis tools we built along the way."
  video_id: vVFEROmdCkQ

- title: LLVM-based JIT compiler for MRI
  raw_title: "RubyConf 2017: LLVM-based JIT compiler for MRI by Takashi Kokubun"
  speakers:
    - Takashi Kokubun
  event_name: RubyConf 2017
  published_at: "2017-11-29"
  description: |-
    LLVM-based JIT compiler for MRI by Takashi Kokubun

    JIT compiler is considered a promising approach to achieve Ruby 3x3 goal these days. But the direction of its implementation is not fixed yet. What will be the ideal approach to achieve that goal?

    In this talk, seeing my experiment to implement LLVM-based JIT compiler, you'll know how native code can be compiled from YARV ISeq, what makes it fast in LLVM, what are the difficulties underlying in it and how to solve them. I hope a discussion in this talk will help Ruby 3 to be great.
  video_id: Ti4a7SXGWig

- title: Reimagining 2D graphics and game development with Ruby
  raw_title: "RubyConf 2017: Reimagining 2D graphics and game development with Ruby by Tom Black"
  speakers:
    - Tom Black
  event_name: RubyConf 2017
  published_at: "2017-11-29"
  description:
    "Reimagining 2D graphics and game development with Ruby by Tom Black
    \n\nPlaying games and interacting with graphics, media, and devices is fun, but
    programming them rarely is. Even the simplest things can seem overwhelmingly complex
    and unnecessarily difficult, but it doesn't have to be that way! Let's explore
    how Ruby can help us design a more natural and expressive experience by leveraging
    MRI, mruby, and Opal, opening up possibilities natively and on the web. We'll
    poke under the hood of a cross-platform 2D engine designed to be scripted with
    Ruby. Many opportunities lie ahead in game development, education, and creative
    coding, so let's seize them — join us!"
  video_id: "-PPVypAS_Pc"

- title: Mozart Could’ve Been an Engineer - Music + Code
  raw_title: "RubyConf 2017: Mozart Could’ve Been an Engineer - Music + Code by Catherine Meyers"
  speakers:
    - Catherine Meyers
  event_name: RubyConf 2017
  published_at: "2017-11-29"
  description: |-
    Mozart Could’ve Been an Engineer - Music + Code by Catherine Meyers

    Would you hire a musician to build a web app? After this talk, you might not think it’s such a crazy idea. Transitioning from opera singer to software engineer, I was blown away by the parallels between music and code. During this talk, we’ll study these similarities: how we break down elements to learn, use patterns to build, problem solve with creativity, and succeed through persistence and flexibility. We’ll compare “Mary Had a Little Lamb” to a Ruby method and see how Puccini might have coded a Todo app. Warning: parts of this talk may be sung. Yes, you may bring your own instruments.
  video_id: n1U1rcThnzw

- title: Yes, and...
  raw_title: "RubyConf 2017: Yes, and... by Adam Cuppy & Julia Cuppy"
  speakers:
    - Adam Cuppy
    - Julia Cuppy
  event_name: RubyConf 2017
  published_at: "2017-11-29"
  description: |-
    Yes, and... by Adam Cuppy & Julia Cuppy

    What happens when we drop "No, but..." from our daily interactions or life choices in favor of the #1 rule of improv: Yes, and..?

    This talk is not a technical deep dive into the Ruby VM or a walk through of a new gem. I won't touch on testing strategies or war stories as a developer. Instead, I'm going to teach you improv.

    We'll call it a social strategy for an awesome life! This talk is for introverts and extroverts alike. You won't be brought onstage (unless you want to be).
  video_id: Tk8FTTfurmE

- title: "Keynote: Growing Old"
  raw_title: "RubyConf 2017: Keynote: Growing Old by Chad Fowler"
  speakers:
    - Chad Fowler
  event_name: RubyConf 2017
  published_at: "2017-11-29"
  description: "Keynote: Growing Old by Chad Fowler"
  video_id: qH_y45he4-o

- title: "Ignites"
  raw_title: "RubyConf 2017: Ignites"
  speakers:
    - Evan Phoenix
    - Rich Kilmer
    - Nadia Odunayo
    - Michael Hartl
    - Jim Remsik
    - Allison McMillan
  event_name: RubyConf 2017
  published_at: "2017-11-29"
  description: |-
    Ignites by

    01:57:28 - Rich Kilmer
    07:10:21 - Nadia Odunayo
    12:45:23 - Michael Hartl
    18:16:08 - Jim Remsik
    23:49:08 - Allison McMillan
  video_id: 9VSo5u4ODWQ

- title: "Keynote: You're Insufficiently Persuasive"
  raw_title: "RubyConf 2017: Keynote - You're Insufficiently Persuasive by Sandi Metz"
  speakers:
    - Sandi Metz
  event_name: RubyConf 2017
  published_at: "2017-11-29"
  slides_url: https://speakerdeck.com/skmetz/you-are-insufficiently-persuasive-rubyconf
  description: Keynote - You're Insufficiently Persuasive by Sandi Metz
  video_id: VzWLGMtXflg

- title: Building a Compacting GC for MRI
  raw_title: "RubyConf 2017: Building a Compacting GC for MRI by Aaron Patterson"
  speakers:
    - Aaron Patterson
  event_name: RubyConf 2017
  published_at: "2017-11-29"
  description: |-
    Building a Compacting GC for MRI by Aaron Patterson

    We will talk about implementing a compacting GC for MRI. This talk will cover compaction algorithms, along with implementation details, and challenges specific to MRI. Well cover low level and high level memory measurement tools, how to use them, and what they're telling us. We'll cover copy-on-write optimizations and how our GC impacts them. After this talk you should have a better understanding of how Ruby's memory management interacts with the system memory, how you can measure it, and how to adjust your application to work in concert with the system's memory.
  video_id: 8Q7M513vewk

- title: "RubyCard: HyperCard, in Ruby"
  raw_title: "RubyConf 2017: RubyCard: HyperCard, in Ruby by Zachary Schroeder"
  speakers:
    - Zachary Schroeder
  event_name: RubyConf 2017
  published_at: "2017-11-30"
  description: |-
    RubyCard: HyperCard, in Ruby by Zachary Schroeder

    HyperCard was a visionary application that gave users the ability to create, share, and browse text content years before the Internet became commonplace. We will discuss its key features and explore recreating them in our own Ruby desktop app: RubyCard.
  video_id: WtUc4G2QDeQ

- title: Orbital Rocket Guidance with Ruby
  raw_title: "RubyConf 2017: Orbital Rocket Guidance with Ruby by Nate Berkopec"
  speakers:
    - Nate Berkopec
  event_name: RubyConf 2017
  published_at: "2017-11-30"
  description: |-
    Orbital Rocket Guidance with Ruby by Nate Berkopec

    Using the popular space simulator Kerbal Space Program and some remote procedure calls, we're going to use Ruby to launch (simulated) rockets into space! We'll discuss the history of computing in the space program, real-life algorithms for getting rockets into orbit like the Space Shuttle's Powered Explicit Guidance Ascent System, and the software architecture of historic space computers like the Apollo Guidance Computer. Finally, we'll build our own orbital rocket, controlled by a Ruby program that emulates space computers of the past.
  video_id: VMxct9B5S1A

- title: "Fireside Chat: Q&A with Matz"
  raw_title: "RubyConf 2017: FIRESIDE CHAT - Q&A WITH MATZ by Evan Phoenix & Matz Evan"
  speakers:
    - Evan Phoenix
    - Yukihiro "Matz" Matsumoto
  event_name: RubyConf 2017
  published_at: "2017-11-30"
  description: FIRESIDE CHAT - Q&A WITH MATZ by Evan Phoenix & Matz Evan
  video_id: XhSpxGPa56Y

- title: Esoteric, Obfuscated, Artistic Programming in Ruby
  raw_title: "RubyConf 2017: Esoteric, Obfuscated, Artistic Programming in Ruby by Yusuke Endoh"
  speakers:
    - Yusuke Endoh
  event_name: RubyConf 2017
  published_at: "2017-11-30"
  description: |-
    Esoteric, Obfuscated, Artistic Programming in Ruby by Yusuke Endoh

    Ruby has a rich and flexible syntax. It allows us to write not only an easy-to-read program, but also an "hard-to-read" one. This talk will show its unlimited power. We present and demonstrate some esoteric, obfuscated, and even artistic programs that we have ever created, including a program that contains a spinning globe, a robust program that can have any single character removed and still works, a program that consists only of alphabetical letters, and so on. We will also review the implementation techniques.
  video_id: 6K7EmeptEHo

- title: There are no rules in Ruby
  raw_title: "RubyConf 2017: There are no rules in Ruby by Max Jacobson"
  speakers:
    - Max Jacobson
  event_name: RubyConf 2017
  published_at: "2017-11-30"
  description: |-
    There are no rules in Ruby by Max Jacobson

    Programming requires developing ideas about How Things Work that we internalize and rely on in our day-to-day programming life: when I write a class, I can use it like this; all strings have that method; I'm allowed to use private methods in these contexts. We start to rely on them. But which are rules, and which are more like norms? Turns out that with as dynamic a language as Ruby, a lot of rules are made to be broken. Let's take a look at what we can assume to be true in our Ruby programs and what we can't.
  video_id: hwFaScbQdIs

- title: "Rewriting Rack: A Functional Approach"
  raw_title: "RubyConf 2017: Rewriting Rack: A Functional Approach by Alex Wheeler"
  speakers:
    - Alex Wheeler
  event_name: RubyConf 2017
  published_at: "2017-11-30"
  description: |-
    Rewriting Rack: A Functional Approach by Alex Wheeler

    What if we traded in our classes for procs, our methods for functions, and took advantage of functional programming to rewrite Ruby's Rack? I kept hearing about the benefits of functional programming (simplicity, immutability, thread safety), but it wasn't until I reimplemented familiar Ruby concepts in a functional language that I really got it. In this talk, we'll steal some powerful FP ideas from Clojure and use them to rewrite Rack. You'll come out of it understanding how to write functional Ruby code that is simpler to reason about, less likely to break, and dead simple to debug.
  video_id: fVIVY7INWWQ

- title: A New Pair of Shoes!
  raw_title: "RubyConf 2017: A New Pair of Shoes! by Jason R. Clark"
  speakers:
    - Jason R. Clark
  event_name: RubyConf 2017
  published_at: "2017-11-30"
  description: |-
    A New Pair of Shoes! by Jason R. Clark

    While web applications dominate much of the computing landscape, sometimes you just want to open a window on your desktop.

    Enter Shoes! With a long history in the Ruby community, Shoes is an easy to learn, fun to use framework for writing and packaging GUI apps. It's ideal for kids, beginners, and anyone look for a simple way to build apps that run on Windows, Mac, and Linux.

    After many years of development, a release candidate for the new version (4.0) of Shoes is ready! Come learn how to get Shoes, how it builds on the cross-platform power of JRuby, and how you can get involved in the project.
  video_id: EjN2ep1T6M8

- title: Types and Ruby Programming Language
  raw_title: "RubyConf 2017: Types and Ruby Programming Language by Soutaro Matsumoto"
  speakers:
    - Soutaro Matsumoto
  event_name: RubyConf 2017
  published_at: "2017-11-30"
  description: |-
    Types and Ruby Programming Language by Soutaro Matsumoto

    Types have been a big interest for Rubyists for more than ten years. Even before Ruby3, some researchers have tried to type check Ruby programs. All of them had failed. No one in the world has successfully implemented practical type checker for Ruby programs yet.

    Why is it difficult? How have we tried? What do we want exactly? Can we find any solution?
  video_id: Fjv9GxPXtck

- title: Human Errors
  raw_title: "RubyConf 2017: Human Errors by Olivier Lacan"
  speakers:
    - Olivier Lacan
  event_name: RubyConf 2017
  published_at: "2017-11-30"
  description: |-
    Human Errors by Olivier Lacan

    Runtime errors can sometimes turn into dark and unpleasant journeys which lead you to question the nature of reality. Thankfully, Ruby often provides friendly feedback for understanding the cause and remedy for exceptions. Yet, there are situations in which programmers don't receive clear enough context for what really caused an exception and how to address it. We'll look at Ruby's error feedback mechanisms and search for constructive ways in which they can be made more helpful to humans.
  video_id: eASsqQsaNOA

- title: "Rub[berDuck]yConf, I :mustache: you a question"
  raw_title: "RubyConf 2017: Rub[berDuck]yConf, I :mustache: you a question by Tara Scherner de la Fuente"
  speakers:
    - Tara Scherner de la Fuente
  event_name: RubyConf 2017
  published_at: "2017-11-30"
  description: |-
    Rub[berDuck]yConf, I :mustache: you a question by Tara Scherner de la Fuente

    I :mustache: you a question.

    That's what I send via Slack to folks I'm reaching out to when I'm stuck. Over these first few years of my career, the reach outs are fewer and the problems more specific and/or challenging. Now? I often get that inquiry in a DM. What I'm discovering more and more: That whole rubber duck thing is no joke—moreover, it's often the unofficial mentoring of our industry. What do our own questions teach us? What do they teach others? How can you be a great rubber duck? Beyond that moment, what can the rubber duck do for your career--the easy way?
  video_id: onaCI461Bww

- title: Finding Beauty in the Mundane
  raw_title: "RubyConf 2017: Finding Beauty in the Mundane by Max Tiu"
  speakers:
    - Max Tiu
  event_name: RubyConf 2017
  published_at: "2017-11-30"
  description: |-
    Finding Beauty in the Mundane by Max Tiu

    Amongst the exciting challenges of making software, there are some tasks we go out of our way to avoid: linting files, updating dependencies, writing documentation. But even the "boring" parts of the job are opportunities to make big changes for the better, little by little. In this talk, you'll learn how to make even the most mundane development tasks exciting in order to better your applications and become your team's hero in the process.
  video_id: ZRgiVRqPVL4

- title: "Dispelling the dark magic: Inside a Ruby debugger"
  raw_title: "RubyConf 2017: Dispelling the dark magic: Inside a Ruby debugger by Daniel Azuma"
  speakers:
    - Daniel Azuma
  event_name: RubyConf 2017
  published_at: "2017-11-30"
  description: |-
    Dispelling the dark magic: Inside a Ruby debugger by Daniel Azuma

    Debuggers can seem like dark magic—stopping a running program, tinkering with the program state, casting strange spells on VM internals. I spent much of my career diagnosing problems using “puts” because debuggers intimidated me. If you can relate, this is the talk for you! We’ll use Ruby's powerful TracePoint API to implement a simple but fully featured debugger for Ruby programs. We’ll also explore a few of the advanced techniques behind a "live" production debugger, and discuss some of the debugging features and limitations of the Ruby VM itself.
  video_id: UsrSu4x30Vo

- title: High Performance GPU Computing with Ruby
  raw_title: "RubyConf 2017: High Performance GPU Computing with Ruby by Prasun Anand"
  speakers:
    - Prasun Anand
  event_name: RubyConf 2017
  published_at: "2017-11-30"
  description: |-
    High Performance GPU Computing with Ruby by Prasun Anand

    ArrayFire gem a General Purpose GPU computing library can be used for high performance computing in Ruby be it statistical analysis of big data, image processing, linear algebra, machine learning.

    ArrayFire has an outstanding performance considering other existing Ruby libraries that run on CPU. ArrayFire gem can also be run on clusters and handle real world problems by crunching huge datasets. The ease of using ArrayFire gem makes Ruby a viable choice for high performance scientific computing.
  video_id: eA3sgX0oLxU

- title: Gemification for Ruby 2.5/3.0
  raw_title: "RubyConf 2017: Gemification for Ruby 2.5/3.0 by Shibata Hiroshi"
  speakers:
    - Shibata Hiroshi
  event_name: RubyConf 2017
  published_at: "2017-11-30"
  description: |-
    Gemification for Ruby 2.5/3.0 by Shibata Hiroshi

    Ruby have many libraries named standard library, extension and default-gems, bundled-gems. These are some differences under the bundler and rails application.

    default-gems and bundled-gems are introduced to resolve dependency problem and development ecosystem around the ruby core. We have the plan to promote default/bundled gems from standard libraries. It says “Gemification” projects.

    What Gemification changes in Ruby ecosystem? In this presentation, I will explain details of Gemification and future things of Ruby language.
  video_id: 93nGROEgyEc

- title: "Code Reviews: Honesty, Kindness, Inspiration: Pick Three"
  raw_title: "RubyConf 2017: Code Reviews: Honesty, Kindness, Inspiration: Pick Three by Jacob Stoebel"
  speakers:
    - Jacob Stoebel
  event_name: RubyConf 2017
  published_at: "2017-11-30"
  description: |-
    Honesty, Kindness, Inspiration: Pick Three by Jacob Stoebel

    The attitude among many developers seems to be that code reviews can be either honest or nice but not both. I see this as a false dichotomy; while code reviews should be both honest and kind, they should be focused on inspiring creators to go back to their work, excited to make it better.

    This talk will introduce the Liz Lerman Critical Response process, a framework for giving feedback on anything creative. You'll leave this talk with tips on how to improve your code reviews by putting the creator in the driver's seat and inspiring everyone on the team to make the product even better.
  video_id: hP_2XKYia9I

- title: "make mruby more portable: Why and How"
  raw_title: "RubyConf 2017: make mruby more portable: Why and How by Yurie Yamane & Masayoshi Takahashi"
  speakers:
    - Yurie Yamane
    - Masayoshi Takahashi
  event_name: RubyConf 2017
  published_at: "2017-11-30"
  description: |-
    make mruby more portable: Why and How by Yurie Yamane & Masayoshi Takahashi

    Physical computing is very fascinating and fun, but there are also difficulties that were not found in normal Ruby programming. One of the issues is its low portability. Unlike PC, some computer boards that directly uses the devices use only small microcomputer whose memory is less than 1 MB. So most of the applications work only on specific boards. If we found an interesting project, we could not try it unless I had a target board. To solve it, I propose a plan of mruby platform, consisting of a group of mrbgems that absorb incompatibilities. I talk about the project and current progress.
  video_id: 6JABFMn-bdI

- title: 'Set Design: Putting the "Art" in "Architecture"'
  raw_title: 'RubyConf 2017: Set Design: Putting the "Art" in "Architecture" by Betsy Haibel'
  speakers:
    - Betsy Haibel
  event_name: RubyConf 2017
  published_at: "2017-11-30"
  description: |-
    Set Design: Putting the "Art" in "Architecture" by Betsy Haibel

    I thought of software architects as petty waterfall dictators. Then I became one. My theater background saved me. In this talk, we’ll look at set design — an ongoing, collaborative process — as a model for a more agile kind of “architecture” than building metaphors allow us. You’ll learn about the most important part of any architecture (hint: people), about using architecture to foster team creativity, and about the agile-architecture superpowers that Ruby gives us. No matter your title, you too can architect!
  video_id: JWDPRWPtOeg

- title: What does GIL really guarantee you?
  raw_title: "RubyConf 2017: What does GIL really guarantee you? by Daniel Vartanov"
  speakers:
    - Daniel Vartanov
  event_name: RubyConf 2017
  published_at: "2017-11-30"
  description: |-
    What does GIL really guarantee you? by Daniel Vartanov

    You probably heard that Global Interpreter Lock (GIL) in Ruby "allows only one thread to run at a time", while technically it is correct it does not mean what you probably think it means. After this talk you will know why your code can be not thread safe even if GIL is enabled and how even a subtle change in your code can make GIL fail to protect you from race conditions. This talk is junior-friendly, but even experienced Ruby devs most probably will learn something new and important about GIL in Ruby.
  video_id: 1nNfTWHF2YY

- title: "Y2K and Other Disappointing Disasters: How To Create Fizzle"
  raw_title: "RubyConf 2017: Y2K and Other Disappointing Disasters: How To Create Fizzle by Heidi Waterhouse"
  speakers:
    - Heidi Waterhouse
  event_name: RubyConf 2017
  published_at: "2017-11-30"
  description: |-
    Y2K and Other Disappointing Disasters: How To Create Fizzle by Heidi Waterhouse

    Risk Reduction is trying to make sure bad things happen as rarely as possible. It's anti-lock brakes and vaccinations and irons that turn off by themselves and all sorts of things that we think of as safety modifications in our life.

    Harm Mitigation is what we do so that when bad things do happen, they are less catastrophic. Building fire sprinklers and seatbelts and needle exchanges are all about making the consequences of something bad less terrible.

    This talk is focused on understanding where we can prevent problems and where we can just make them less bad.
  video_id: ddrFcg731tg

- title: Improving TruffleRuby’s Startup Time with the SubstrateVM
  raw_title: "RubyConf 2017: Improving TruffleRuby’s Startup Time with the SubstrateVM by Kevin Menard"
  speakers:
    - Kevin Menard
  event_name: RubyConf 2017
  published_at: "2017-11-30"
  description: |-
    Improving TruffleRuby’s Startup Time with the SubstrateVM by Kevin Menard

    Ruby applications can be broadly split into two categories: those that run for a short period and those that stick around for a while. Optimizing performance for one often comes at the expense of the other. Over the years, alternative Ruby implementations have demonstrated remarkable performance gains for long-lived applications -- so-called peak performance -- but often lose out to MRI for short-lived applications.

    In this talk, I'll introduce the SubstrateVM and show how we use it to massively improve TruffleRuby's startup time with minimal impact on peak performance.
  video_id: hIMldcAzd5o

- title: "Great Expectations: Power-Charging Apprenticeship Programs"
  raw_title: "RubyConf 2017: Great Expectations: Power-Charging Apprenticeship Programs by Louisa Barrett"
  speakers:
    - Louisa Barrett
  event_name: RubyConf 2017
  published_at: "2017-12-01"
  description: |-
    RubyConf 2017: Great Expectations: Power-Charging Apprenticeship Programs by Louisa Barrett

    Apprenticeships are a great way to ramp up a newbie, but these programs are much tougher to successfully implement than many organizations expect. It is a surprisingly large investment to guide someone through the ups and downs of their first gig as a developer, and if you aren't prepared it can be a bad experience for everyone involved.

    Let's dig into what makes a robust and empowering apprenticeship, from full team buy-in to setting clear learning goals to providing a clear path to the optimum final outcome: a new full time junior developer and a team dedicated to investing in education.
  video_id: o-J_OhgcvWU

- title: "JRuby: What Why How ... Do it Now!"
  raw_title: "RubyConf 2017: JRuby: What Why How ... Do it Now! by Thomas Enebo & Charles Nutter"
  speakers:
    - Thomas E Enebo
    - Charles Nutter
  event_name: RubyConf 2017
  published_at: "2017-12-01"
  description: |-
    RubyConf 2017: JRuby: What Why How ... Do it Now! by Thomas Enebo & Charles Nutter

    Do you know JRuby? Built on the JVM platform, JRuby has been actively developed for over 17 years. But why would you choose JRuby? What benefits does it offer?

    In this talk, we will introduce you to the wonderful world of JRuby. After basic setup, we'll show how JRuby's concurrency model and GC can help boost performance. We'll walk through deploying and scaling apps and services on JRuby. We'll demonstrate JRuby's powerful integration with other JVM languages. And we'll talk about how to start migrating to or building new apps on JRuby. Join us and learn what JRuby can do for you!
  video_id: Lja3HDcHNJA

- title: Get Off the Tightrope
  raw_title: "RubyConf 2017: Get Off the Tightrope by Tom Stuart"
  speakers:
    - Tom Stuart
  event_name: RubyConf 2017
  published_at: "2017-12-01"
  description: |-
    RubyConf 2017: Get Off the Tightrope by Tom Stuart

    Do you feel stressed when you’re trying to hold a big problem in your head? Do you get frustrated when someone interrupts you and you have to start all over again? Those emotions are inevitable if you’re in the common habit of treating each programming task as a long, precarious, all-or-nothing tightrope walk. But it doesn’t have to be that way! In this talk I’ll explain why the tightrope walk is so harmful and show you some practical techniques for avoiding it.
  video_id: TdBELZG0UMY

- title: That time I used Ruby to crack my Reddit password
  raw_title: "RubyConf 2017: That time I used Ruby to crack my Reddit password by Haseeb Qureshi"
  speakers:
    - Haseeb Qureshi
  event_name: RubyConf 2017
  published_at: "2017-12-01"
  description: |-
    RubyConf 2017: That time I used Ruby to crack my Reddit password by Haseeb Qureshi

    I lost my password. So I used Ruby to crack it, kinda. I will re-enact the story live in front of a group of strangers.

    I'm going to be honest, this is a weird and fairly embarrassing story. You probably shouldn't come see it.

    You know what, forget I even said anything.
  video_id: ywiwq9IpDEU

- title: "A History of Bundles: 2010 to 2017"
  raw_title: "RubyConf 2017: A History of Bundles: 2010 to 2017 by André Arko"
  speakers:
    - André Arko
  event_name: RubyConf 2017
  published_at: "2017-12-01"
  description: |-
    RubyConf 2017: A History of Bundles: 2010 to 2017 by André Arko

    When Bundler 1.0 came out in 2010, it did something really great: installed all of your gems and let you use them in your app. Today, Bundler does something really great: it installs all your gems and lets you use them. So, given that, why has Bundler needed thousands upon thousands of hours of development work? What exactly has changed since then? Prepare to find out. We’ll cover performance improvements, server response optimizations, adapting to new versions of Ruby, and adding features to support new usecases. Learn the tricks of Bundler power users, and find out how to optimize your gem workfl
  video_id: BXFYjO8qDxk

- title: Just when you thought you couldn’t refactor any more…
  raw_title: "RubyConf 2017: Just when you thought you couldn’t refactor any more… by Claudio B."
  speakers:
    - Claudio B.
  event_name: RubyConf 2017
  published_at: "2017-12-01"
  description: |-
    RubyConf 2017: Just when you thought you couldn’t refactor any more… by Claudio B.

    In this talk, we will travel together on a refactoring journey. We will start from code that is easy to write but hard to read, and gradually advance to a level where the 4 C's of good code are satisfied: Correctness, Completeness, Clearness, and Compactness.

    On the way, we will learn new Ruby 2.4 methods (String#match?, MatchData#named_captures) and review old methods (Enumerable#find, Regexp#===) that are more powerful than they seem at a first glance.
  video_id: nOa6FhMKsZ0

- title: '"RSpec no longer works with ActiveRecord"'
  raw_title: 'RubyConf 2017: "RSpec no longer works with ActiveRecord" by Sam Phippen'
  speakers:
    - Sam Phippen
  event_name: RubyConf 2017
  published_at: "2017-12-01"
  description: |-
    RubyConf 2017: "RSpec no longer works with ActiveRecord" by Sam Phippen

    Sometimes an email appears in front of you in your inbox that immediately grabs your attention. For me, this was the case with a particularly scarily titled RSpec Mocks bug.

    In this talk, you'll hear a story of investigation and fixing of what could have been a day ruining bug for all RSpec users. You'll come away with some deeper knowledge about RSpec's mocking library. You'll learn some protips on good practise when making an open source bug report. If you've ever used with RSpec's mocking library and would like to learn more about deep Ruby metaprogramming this talk is for you.
  video_id: VMcMqrpjAjU

- title: The Overnight Failure
  raw_title: "RubyConf 2017: The overnight failure by Sebastian Sogamoso"
  speakers:
    - Sebastian Sogamoso
  event_name: RubyConf 2017
  published_at: "2017-12-01"
  description: |-
    RubyConf 2017: The overnight failure by Sebastian Sogamoso

    Close your eyes and imagine what is the worst thing that could happen to you at work. For me, that was charging users thousands of times the amount they should have been charged. In this talk we will find out what caused this particular bug and what we learnt from dealing with the whole situation.

    Did someone get fired? Did the company survive the bug? Come to the talk and you will learn the answers, but more importantly a thing or two about how to go through tough times at work.
  video_id: 3c_9WG_aImQ

- title: "Hello Gmom!: Addressing loneliness in end-of-life care"
  raw_title: "RubyConf 2017: Hello Gmom!: Addressing loneliness in end-of-life care by Jeremy Flores"
  speakers:
    - Jeremy Flores
  event_name: RubyConf 2017
  published_at: "2017-12-01"
  description: |-
    RubyConf 2017: Hello Gmom!: Addressing loneliness in end-of-life care by Jeremy Flores

    After suffering a debilitating stroke, Barbara, my significant other's grandmother, was left disabled, bed-bound, and mostly non-verbal. We visited often, and were with her when she passed earlier this year. For Christmas, I built her a web application to be a window into the life of her granddaughter.

    Now that she’s passed, I’m hoping that the project can be a foundation or inspiration for others to build tools that bring them closer to the people they love. This small project--a $5 computer and some “off-the-shelf” technology--increased the quality of life for all of us.
  video_id: YLrRCmpVGw8

- title: Ten Unicode Characters You Should Know About as a Programmer
  raw_title: "RubyConf 2017: Ten Unicode Characters You Should Know About as a Programmer by Jan Lelis"
  speakers:
    - Jan Lelis
  event_name: RubyConf 2017
  published_at: "2017-12-01"
  description: |-
    RubyConf 2017: Ten Unicode Characters You Should Know About as a Programmer by Jan Lelis

    There are a lot of things that can go wrong when working with Unicode data. Some examples of unmeant behavior:

    You try to downcase "I" to "i", but your Turkish friends want it to be a dotless "ı"
    Your UI is broken, because people use empty usernames, despite the String#blank? check
    You think "C" is the same letter as "С", but your system does not think so and crashes
    Using ten characters as representatives, I will highlight some Unicode characteristics which require a programmer's attention and demonstrate how Ruby's solid Unicode support can be of useful assistance!
  video_id: hlryzsdGtZo

- title: Buuuuugs iiiiin Spaaaaace!
  raw_title: "RubyConf 2017: Buuuuugs iiiiin Spaaaaace! by Colin Fulton"
  speakers:
    - Colin Fulton
  event_name: RubyConf 2017
  published_at: "2017-12-01"
  description: |-
    RubyConf 2017: Buuuuugs iiiiin Spaaaaace! by Colin Fulton

    Space is really cool. From precision electronics, to giant rockets, spacecraft can represent the best of engineering. But sometimes things go wrong. Terribly wrong.

    What do exploding Soviet rockets have to do with Agile development?
    How did LISP and Forth hacking save part of the Galileo probe?
    What about that time astronauts added life-saving monkey patches... while orbiting the moon!
    Exactly how much damage can a little dead code do? (Hint: a lot!)
    This talk is for anyone whose love of a good space story is rivaled only by their passion for incredibly resilient software.
  video_id: _ZdF82h_GrM

- title: "Steal This Talk: The Best Features Ruby Doesn't Have (Yet)"
  raw_title: "RubyConf 2017: Steal This Talk: The Best Features Ruby Doesn't Have (Yet) by John Feminella"
  speakers:
    - John Feminella
  event_name: RubyConf 2017
  published_at: "2017-12-08"
  description: |-
    Steal This Talk: The Best Features Ruby Doesn't Have (Yet) by John Feminella

    One of Ruby's greatest strengths is its burning desire to make writing software enjoyable for humans. Newer languages, perhaps taking some inspiration from Ruby, have recognized the practical value of doing this. What can Rubyists learn from these new ideas, and what can be adapted from them to improve Ruby?

    In this talk, we'll discuss a few of the most interesting Ruby-like features that aren't really in Ruby yet. We'll also show how you can get these features (or an approximation to them) with Ruby today. By the end of the talk, you should feel empowered to try them out yourself!
  video_id: XrCU5r_NF2Q
