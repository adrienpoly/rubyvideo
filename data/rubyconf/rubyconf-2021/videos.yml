---
- title: "Whimsy: Pry Irresponsibly"
  raw_title: "RubyConf 2021 - Whimsy: Pry Irresponsibly by Riaz Virani"
  speakers:
    - Riaz Virani
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: ""
  video_id: yj0dYow4B7E

- title: Some Assembly Required
  raw_title: RubyConf 2021 - Some Assembly Required by Aaron Patterson
  speakers:
    - Aaron Patterson
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  slides_url: https://speakerdeck.com/tenderlove/some-assembly-required
  description: |-
    Some Assembly Required by Aaron Patterson

    Let's write a JIT for Ruby, in Ruby! We're going to learn how a JIT works from the ground up by building TenderJIT, a pure Ruby JIT compiler. First, we'll learn how Ruby's virtual machine works, then we'll learn how to plug a JIT in to the virtual machine. Finally, we'll generate machine code from our Ruby programs. By the end of the presentation we'll have a working JIT that converts Ruby code in to machine code all written in pure Ruby! But don't forget: some assembly is required!
  video_id: 4vDfegrjUtQ

- title: "Keynote: Finding Purpose and Cultivating Spirituality by Andrea Guendelman"
  raw_title: "RubyConf 2021 - Keynote: Finding Purpose and Cultivating Spirituality by Andrea Guendelman"
  speakers:
    - Andrea Guendelman
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: "Keynote: Finding Purpose and Cultivating Spirituality by Andrea Guendelman"
  video_id: G5ZdlqqhYEM

- title: Your Team, as Saga
  raw_title: RubyConf 2021 - Your Team, as Saga by Betsy Haibel
  speakers:
    - Betsy Haibel
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    Your Team, as Saga by Betsy Haibel

    Software systems are made of code, and the people who work on them. But most of all, they're made of the stories those people tell. Heroic legends of shipping to deadline, spooky ghost stories of refactors gone bad... and a lot of sci-fi, projecting out into a utopian (or dystopian) future. How can you edit this story to make it go right? In this talk, we'll apply fiction-writing tricks to the art of engineering roadmapping. We'll learn how to build narratives, develop our characters, and world-build our way to healthier teams and healthier code.
  video_id: pdxWY5Ebm2k

- title: Delightfully Fashionable Lemurs in Decorating Ruby
  raw_title: RubyConf 2021 - Delightfully Fashionable Lemurs in Decorating Ruby by Brandon Weaver
  speakers:
    - Brandon Weaver
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    Delightfully Fashionable Lemurs in Decorating Ruby by Brandon Weaver

    What to wear what to wear! The lemurs have a love for new robes and clothes, but these clothes are magical, and do some very interesting things. As it turns out decorating in Ruby can do rather unusual things to methods, classes, and even the lemurs.

    Join the lemurs on a fashion-filled journey through decoration patterns in Ruby including tricks with method, define_method, method_added, and Module#prepend.
  video_id: vLQEsG5MM8E

- title: Parsing Ruby
  raw_title: RubyConf 2021 - Parsing Ruby by Kevin Newton
  speakers:
    - Kevin Newton
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    Since Ruby's inception, there have been many different projects that parse Ruby code. This includes everything from development tools to Ruby implementations themselves. This talk dives into the technical details and tradeoffs of how each of these tools parses and subsequently understands your applications. After, we'll discuss how you can do the same with your own projects using the Ripper standard library. You'll see just how far we can take this library toward building useful development tools.

  video_id: EXKsRKmkrns

- title: Taking the 737 to the Max
  raw_title: RubyConf 2021 - Taking the 737 to the Max by Nickolas Means
  speakers:
    - Nickolas Means
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    Ten years ago, Boeing faced a difficult choice. The Airbus A320neo was racking up orders faster than any plane in history because of its fuel efficiency improvements, and Boeing needed to compete. Should they design a new plane from scratch or just update the tried-and-true 737 with new engines?

    The 737 MAX entered service seven years later as the result of that and hundreds of other choices along the way. Let’s look at some of those choices in context to understand how the 737 MAX went so very wrong. We’ll learn a thing or two along the way about making better decisions ourselves and as teams.

  video_id: MfU8CrenyMo

- title: On Being an Early Career Dev in Your 30s
  raw_title: RubyConf 2021 - On Being an Early Career Dev in Your 30s by Ben Greenberg
  speakers:
    - Ben Greenberg
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    Being early in your career always presents unique challenges, while being early in your second career later in life has its own particular issues to grapple with. The typical pipeline for the software industry does not fit the paradigm of an older career changer, and their presence can often throw the system for a loop.

    In this talk, we will cover practical steps for navigating specific challenges related to hiring and being hired as a second-career dev. If approached with intention and thoughtfulness, the benefits can be immense for all involved.

  video_id: BFopVe4xyyw

- title: Q&A with Matz
  raw_title: RubyConf 2021 - Q&A with Matz by Evan Phoenix & Yukihiro Matsumoto (Matz)
  speakers:
    - Evan Phoenix
    - Yukihiro "Matz" Matsumoto
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: ""
  video_id: tAdb766lzX8

- title: "Keynote: On the Care and Feeding of Feedback Cycles by Elisabeth Hendrickson"
  raw_title: "RubyConf 2021 - Keynote: On the Care and Feeding of Feedback Cycles by Elisabeth Hendrickson"
  speakers:
    - Elisabeth Hendrickson
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: ""
  video_id: qHPguCNzVbU

- title: "Fake Your Test Away: How To Abuse Your Test Doubles"
  raw_title: "RubyConf 2021 - Fake Your Test Away: How To Abuse Your Test Doubles by Jenny Shih"
  speakers:
    - Jenny Shih
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    You probably already know: In a unit test, use test doubles to sub real dependencies. You probably also know: In reality, things are not so easy. What do you do if the dependencies span multiple layers? What if the dependencies are implicit? If we can't find the best level of isolation, test doubles can be unwieldy very quickly and they will make the test, as well as the future you, miserable. In this talk, we will look at symptoms that produce unreliable and unmaintainable tests, and develop a strategy that will make your test suite more resilient and actually enjoyable.

  video_id: 4oJX-AN0J5k

- title: The Mindset of Debugging
  raw_title: RubyConf 2021 - The Mindset of Debugging by Kyle d'Oliveira
  speakers:
    - Kyle d'Oliveira
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    We, as developers, spend a large portion of our time debugging software. Sometimes the problems are easy to understand, but many times they are not and we are thrown into unfamiliar code and are expected to quickly find the problem and craft a solution. However, honing the skill of debugging doesn’t come up as much as it should. In this talk, I’ll go through a generic approach to debugging that can be applied and built upon to help you excel as you move through your career solving problems for a living.

  video_id: LitTV2k_X34

- title: Your First Open-Source Contribution
  raw_title: RubyConf 2021 - Your First Open-Source Contribution by Rachael Wright-Munn
  speakers:
    - Rachael Wright-Munn
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    Is open-source intimidating? Are you nervous about your code being rejected by the maintainers? Or maybe you just don’t know where to start. I know those nerves well. Let’s talk about it. We'll go step-by-step through the process of finding an issue, creating a PR, and collaborating with maintainers. Let’s get you that first open-source PR!
  video_id: z3WLFQd9PXA

- title: I Read It But Don’t Get It, or How to Tackle Technical Texts
  raw_title: RubyConf 2021 - I Read It But Don’t Get It, or How to Tackle Technical Texts by Steve Lynch
  speakers:
    - Steve Lynch
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description:
    "Technical books can be a key and important source of learning for
    engineers and developers of all experience levels. However, it is not uncommon
    for some of us to pick up even a famously “approachable” text and struggle to
    hack our way through each page.\n\nHelp, however, is on the way -- there are concrete
    skills that engaged readers of all kinds of texts employ while reading. This talk
    will outline those techniques while also providing concrete questions that can
    be used during reading to help you stay \n\n"
  video_id: NdjG55NiX8o

- title: The Audacious Array
  raw_title: RubyConf 2021 - The Audacious Array by Ariel Caplan
  speakers:
    - Ariel Caplan
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    What could be simpler than the array? It's just a list of indexed values, right?

    Well, not so fast. Ruby reimagines what an array can be, turning it into a randomizer, a 2D map, a stack, a queue, and a mathematical set. It also provides built-in utilities for unparalleled analysis and search of its contents.

    Understanding arrays deeply is a powerful step forward in writing concise, beautiful, semantic Ruby.

  video_id: RKlbn3KuN5k

- title: To mock, or not to mock?
  raw_title: RubyConf 2021 - To mock, or not to mock? by Emily Giurleo
  speakers:
    - Emily Giurleo
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    Mocking: it’s one of the most controversial topics in the testing world. Using mocks, we can more easily test parts of our applications that might otherwise go untested, but mocks can also be misused, resulting in tests that are brittle or downright self-referential.

    So… how do we know when to use mocks in our tests? In this talk, we’ll identify three important questions that can help us make that decision. By the end of the talk, you will have a framework in mind to help you answer the question: to mock, or not to mock?

  video_id: mD7zm3MFPuA

- title: Blank Page Panic! Creating Confidence with TDD
  raw_title: RubyConf 2021 - Blank Page Panic! Creating Confidence with TDD by Elayne Juten
  speakers:
    - Elayne Juten
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    Have you ever stared at a blank feature spec file hoping for tests to magically appear? Well, you’re not alone! In this talk we’ll take a look at how the combination of Test-Driven Development, pseudocode and RSpec can help get you to your initial commit with confidence, one RSpec error at a time!

  video_id: OtfzxlddWDY

- title: The art of deleting code
  raw_title: RubyConf 2021 - The art of deleting code by Claudio Baccigalupo
  speakers:
    - Claudio Baccigalupo
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    As the size of your project grows, some blocks of code become irrelevant. How can you find and delete them? And how can you be sure code is actually dead?

    This talk will review a few techniques I learned from removing 50,000 lines of Ruby code at work.

    We will see how git can help, with commands like blame, log --follow, and bisect. We will talk about static analysis, and running code coverage in development. We will explain how Ruby meta-programming can conflict with the "Find in Project" approach. We will show how to be nice to reviewers when submitting Pull Requests that delete code.

  video_id: nBZn2nE3yDE

- title: Learning Ractor with Raft
  raw_title: RubyConf 2021 - Learning Ractor with Raft by Micah Gates
  speakers:
    - Micah Gates
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    Ractor is a new concurrency mechanism in Ruby that unlocks great performance improvement possibilities. Its well defined sharing and messaging system makes it easier to reason about than threaded models.

    Raft is a distributed consensus algorithm that backs distributed data stores such as Etcd, Console, and soon, Kafka; it’s designed to be straightforward and easy to understand.

    In this session we’ll build a simple Raft implementation from scratch using Ractor. Ractor is one of the most exciting new features of Ruby, and modeling a distributed system is a great way to see what it can offer.

  video_id: 13QyqsFShc4

- title: Vertical Assignment in Ruby
  raw_title: RubyConf 2021 - Vertical Assignment in Ruby by Kevin Kuchta
  speakers:
    - Kevin Kuchta
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    Ruby's long had leftward assignment (x = 3) and recently got rightward assignment (3 = or greater x). The problem here is obvious: we need a vertical assignment operator. In a complete abdication of good taste and common sense, this talk will walk through correcting this heinous oversight. We'll abuse otherwise-respectable metaprogramming tools like Ripper and TracePoint to add a fully functional vequals operator. While this talk is almost 100% bad-ideas-by-volume, you'll learn a few tricks that you can use in your day-to-day work (or at least to terrify your co-workers).

  video_id: B2nBB70uy6M

- title: Keeping Developers Happy with a Fast CI
  raw_title: RubyConf 2021 - Keeping Developers Happy with a Fast CI by Christian Bruckmayer
  speakers:
    - Christian Bruckmayer
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    When talking about performance, most developers think application speed, faster algorithms or better data structures. But what about your test suite? CI time is developer waiting time!

    At Shopify we have more than 170,000 Ruby tests and we add 30,000 more annually. The sheer amount of tests and their growth requires some aggressive methods. We will illustrate some of our techniques including monitoring, test selection, timeouts and the 80/20 rule. If you have experience in writing tests and want to learn tricks on how to speed up your test suite, this talk is for you!

  video_id: XgKfeD-20ts

- title: "Schrödinger's Error: Living In the grey area of Exceptions"
  raw_title: "RubyConf 2021 - Schrödinger's Error: Living In the grey area of Exceptions by Sweta Sanghavi"
  speakers:
    - Sweta Sanghavi
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    ArgumentErrors, TimeOuts, TypeErrors… even scanning a monitoring dashboard can be overwhelming. Any complex system is likely swimming in exceptions. Some are high value signals. Some are red herrings. Resilient applications that live in the entropy of the web require developers to be experts at responding to exceptions. But which ones and how?

    In this talk, we’ll discuss what makes exception management difficult, tools to triage and respond to exceptions, and processes for more collective and effective exception management. We'll also explore some related opinions from you, my dear colleagues.

  video_id: B1yIAhnkjDY

- title: Automating Legacy Desktop Applications with JRuby and Sikuli
  raw_title: RubyConf 2021- Automating Legacy Desktop Applications with JRuby and Sikuli by Chris Cha
  speakers:
    - Chris Cha
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    Desktop applications supporting line-of-business, enterprise functions live on as massive, complex beasts. Without an easy route into its internals and modernization falling by the wayside, it's up to you to make sure any small change doesn't break — well — everything. In this talk, we'll discuss the journey of bringing up a Windows VM to poke at an app using screenshots, image recognition, and Minitest to create our own Robotic Process Automation (RPA) framework.

  video_id: Oqh7ueTLlwo

- title: Ruby Archaeology
  raw_title: RubyConf 2021 - Ruby Archaeology by Nick Schwaderer
  speakers:
    - Nick Schwaderer
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    IN 2009 _WHY TWEETED: "PROGRAMMING IS RATHER THANKLESS. YOU SEE YOUR WORKS BECOME REPLACED BY SUPERIOR WORKS IN A YEAR. UNABLE TO RUN AT ALL IN A FEW MORE."
    I take this as a call to action to run old code. In this talk we dig, together, through historical Ruby. We will have fun excavating interesting gems from the past.

    Further, I will answer the following questions:

    What code greater than 12 years old still runs in Ruby 3.0?
    What idioms have changed?
    And for the brave: how can you set up an environment to run Ruby 1.8 code from ~2008 on a modern machine?

  video_id: 9ai2nL93mt0

- title: "Service Objects With Dry.rb: Monads and Transactions"
  raw_title: "RubyConf 2021 - Service Objects With Dry.rb: Monads and Transactions by Paul Sadauskas"
  speakers:
    - Paul Sadauskas
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    Service objects are an important tool in your toolbox, and Dry.rb's Transaction library is one of the most powerful, and one of the most magic. It's a "business transaction" DSL, and has error handling as a primary concern. We'll start by exploring Monads in Ruby (they're not scary!). Then we'll see how that simple concept unlocks another level of service objects that are far more robust and testable, and how to wire them all together with Dry::Transaction. Finally we'll touch on extending transactions with custom steps, and how to integrate them into an existing application.

  video_id: HOmCJq2LOZ4

- title: The Science and Magic of Debugging
  raw_title: RubyConf 2021 - The Science and Magic of Debugging by Vaidehi Joshi
  speakers:
    - Vaidehi Joshi
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    It was the best of times, it was the worst of times: it was debugging time. Debugging is an inevitable reality of writing software; every developer has had a piece of code behave unexpectedly at some point or another.

    But debugging can feel like magic: Where do you start looking for the bug, and how do you know where to find it?

    In this talk, we'll learn what makes debugging hard, and the cognitive process behind it. We'll also explore using the scientific method as a debugging process model in order to help us get better at finding the bugs in our own Ruby programs. Let's become better debuggers together!

  video_id: CidxJ_rJVBw

- title: How to Make a Gem of a Gem
  raw_title: RubyConf 2021 - How to Make a Gem of a Gem by Justin Searls
  speakers:
    - Justin Searls
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    Want to know how to create and publish a Ruby gem? It only takes 15 minutes to learn, and this talk will show you how.

    But when should you create a new gem? And how will the type of gem you make (e.g. an API wrapper, a testing DSL, or a CLI) impact its design, testing, and long-term maintenance?

    Answering those questions is… harder. That's why the remaining 15 minutes of this talk will compress a decade of design missteps, dependency regrets, and versioning nightmares into actionable advice to help ensure that your next gem is a great one.

  video_id: tKzu-3m0ZZY

- title: How GitHub uses linters
  raw_title: RubyConf 2021 - How GitHub uses linters by Joel Hawksley
  speakers:
    - Joel Hawksley
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    The GitHub code base is growing at over 25% every year through contributions from over 1000 engineers, clocking in at 1.7+ million lines of Ruby. In this talk, we'll share how we use linters to keep our codebase healthy by ensuring best practices are applied consistently, feedback loops are as short as possible, and code reviews bring the most value, all without creating too much friction.

  video_id: cY2-KGOvBD0

- title: Building Native Extensions. This Could Take A While...
  raw_title: RubyConf 2021 - Building Native Extensions. This Could Take A While... by Mike Dalessio
  speakers:
    - Mike Dalessio
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    "Native gems" contain pre-compiled libraries for a specific machine architecture, removing the need to compile the C extension or to install other system dependencies. This leads to a much faster and more reliable installation experience for programmers.

    This talk will provide a deep look at the techniques and toolchain used to ship native versions of Nokogiri (a commonly-used rubygem), and will discuss why human trust is an important requirement. Gem maintainers will learn how to build native versions of their own gems, and developers will learn how to use and deploy pre-compiled packages

  video_id: jtpOci5o50g

- title: "Dishonest Software: Fighting Back Against the Industry Norms"
  raw_title: "RubyConf 2021 - Dishonest Software: Fighting Back Against the Industry Norms by Jason Meller"
  speakers:
    - Jason Meller
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    From daemons that conceal themselves, to apps which lie to us, every day you're impacted by software with dishonest intentions.

    No one starts their career building dishonest tools, but over time, the norms & incentives in specific industries (ex: infosec, advertising) can compromise the ethics of even the most principled developer.

    In this talk we will...

    Define dishonest software using examples & counter-examples
    Arm you with compelling arguments to convince product leadership to build ethical software
    Explore how engineers can advocate for the data privacy rights of others

  video_id: "-svFoj2beT8"

- title: Problem Solving Through Pair Programming
  raw_title: RubyConf 2021 - Problem Solving Through Pair Programming by Emily Harber
  speakers:
    - Emily Harber
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    Pair programming is your best tool for getting new team members up to speed and writing high quality code, so your team can move faster and build for the long term.

    In this talk, I’ll give you the How and Why of pair programming with your mentee, as well as practical actionable advice to have more productive, educational, and even fun pairing sessions. You’ll come away from this talk excited for your next pairing session, where you’ll write better quality code with a longer shelf life, and give your mentee programming superpowers they couldn’t achieve on their own.

  video_id: YXsbz_9itFU

- title: Why we worry about all the wrong things
  raw_title: RubyConf 2021 - Why we worry about all the wrong things by Hilary Stohs Krause
  speakers:
    - Hilary Stohs-Krause
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    Modern humans aren’t great at risk assessment.

    We often blithely ignore that which could harm us, and are conversely intimidated by things that are quite safe. This inability to recognize threat has vast implications for many aspects of our lives, including our careers.

    In this talk, we’ll explore root causes of fear and anxiety, and discover how we can start to deliberately rewrite our “instincts”. This will allow us to redirect our worry toward what actually matters, and channel it into productive outcomes that make us safer, happier and less stressed, both at work and in our personal lives.

  video_id: qTnSZVYCxok

- title: Reframing Shame & Embracing Mistakes
  raw_title: RubyConf 2021 - Reframing Shame & Embracing Mistakes by Jameson Hampton
  speakers:
    - Jameson Hampton
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    Imposter syndrome is rampant among tech workers and there are so many ways that we put ourselves down and minimize our own accomplishments without even realizing it - and shame is a powerful and dangerous emotion. But everyone makes mistakes and in fact, making mistakes and learning from them makes us smarter! The tenets of cognitive behavioral therapy suggest that these kinds of harmful thought patterns are automatic, ingrained in us from years of practice. This talk will help you identify some of those thought patterns so you can challenge them and reframe them in healthier ways!

  video_id: 3_BFqbZVlpE

- title: "Contractualism + Software Engineering: We're All In This Together"
  raw_title: "RubyConf 2021 - Contractualism + Software Engineering: We're All In This... by Katya Dreyer Oren"
  speakers:
    - Katya Dreyer Oren
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    Contractualism + Software Engineering: We're All In This Together by Katya Dreyer Oren

    As engineers, we are constantly confronted with decisions, from the tiny – “how thick should this border box be?” – to the huge – “how will this algorithm affect the world?” How do we make those decisions? Come learn about contractualism, or how to treat your users as a part of a larger community. We’ll discuss the concept of the “user stack,” anyone who will use or be influenced by your work. Understanding the principles of contractualism and how to apply them makes it easier for you to make ethical decisions as a software engineer, and convince others at your organization to listen.

  video_id: 2jkw-YW-SMs

- title: The Algorithm Ate My Homework
  raw_title: RubyConf 2021 - The Algorithm Ate My Homework by Yechiel Kalmenson
  speakers:
    - Yechiel Kalmenson
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    Am I My Algorithm's Keeper?

    If I write an AI that then goes on to make unethical decisions, who's responsibility is it?

    In this Talmudic-styled discussion, we will delve into ancient case laws to try and find legal and ethical parallels to modern-day questions.

    We may not leave with all the answers, but hopefully, we will spark a conversation about the questions we should be asking.

  video_id: I3ggfUMgjsI

- title: Squashing Security Bugs with Rubocop
  raw_title: RubyConf 2021 - Squashing Security Bugs with Rubocop by Omar
  speakers:
    - Omar
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    You spot a subtle security bug during a code review and flag it, making sure it's fixed before it gets deployed. Taking this one step further you want to make sure others don't make same mistake. Short of reviewing every piece of code, what can you do?

    That's where Rubocop comes in. You can save time in code reviews by using it to enforce coding patterns and styles. As a security-minded engineer you might ask: could we use it to find security bugs? Turns out you can!

    This talk will cover how Betterment uses Rubocop to detect vulnerabilities and the thought process that went into this work.

  video_id: 75TtHyn5uLQ

- title: "Gradual Typing in Ruby - A Three Year Retrospective"
  raw_title: RubyConf 2021 - Gradual Typing in Ruby - A Three Year... by Ufuk Kayserilioglu, Alexandre Terrasa
  speakers:
    - Ufuk Kayserilioglu
    - Alexandre Terrasa
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    We began adopting gradual typing on Shopify's giant monolith almost 3 years ago. Today, we are running the monolith with great type coverage and even see some internal teams commit to stricter typing in their components.

    The road to get here was not easy, though. We had to work with our developers to solve the right problems at the right levels of abstraction to ensure the adoption was healthy. This talk will go over some of the challenges and some of our wins along the way. It will also help you decide if gradual typing might work for your codebase and your team, as well.

  video_id: ntXKTEaWjPM

- title: "Acidic Jobs: A Layman's Guide to Job Bliss"
  raw_title: "RubyConf 2021 - Acidic Jobs: A Layman's Guide to Job Bliss by Stephen Margheim"
  speakers:
    - Stephen Margheim
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  slides_url: https://speakerdeck.com/fractaledmind/acidic-jobs-a-laymans-guide-to-job-bliss-091517d6-eec0-419e-a80f-982b8e036392
  description: |-
    Background jobs have become an essential component of any Ruby infrastructure, and, as the Sidekiq Best Practices remind us, it is essential that jobs be "idempotent and transactional." But how do we make our jobs idempotent and transactional? In this talk, we will explore various techniques to make our jobs robust and ACIDic.

  video_id: l7hIYegfOKk

- title: "Joyful Polyglot: Beautiful insights from many languages"
  raw_title: "RubyConf 2021 - Joyful Polyglot: Beautiful insights from many languages by Nick Barone"
  speakers:
    - Nick Barone
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    Every language teaches you something beautiful, leading new and experienced programmers alike to novel and joyful ways to think about code. Would you benefit from a broader bag of programming concepts, or are you just curious about what can be learned when venturing outside your current box? From C++'s template metaprogramming to Scala's companion objects and more, this talk will explore a multitude of different programming languages and how the ideas and principles exemplified by each can be used by any other - but specifically, Ruby.

  video_id: dXCvQCOZs78

- title: "Drones Galore: controlling multiple drones using mruby/ruby"
  raw_title: "RubyConf 2021 - Drones Galore: controlling multiple drones using mruby/ruby by Shashank Daté"
  speakers:
    - Shashank Daté
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    mruby is a lightweight implementation of the Ruby language. This talk focuses on how mruby differs from ruby, how its build system works, how to optimize its configuration for controlling a certain category (Tello) of programmable drones. It will include - flight control using UDP sockets in mruby - multiple drone control using Fibers in murby - multiple drone control using using Ruby Actors The talk will end with a demo of multi-drone acrobatics.

  video_id: BxXwoBp9gT8

- title: "Mixed Reality Robotics Simulation with Ruby"
  raw_title: RubyConf 2021 - Mixed Reality Robotics Simulation with Ruby by Kota Weaver
  speakers:
    - Kota Weaver
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    Simulation for robots is useful. But how do robots translate to real life factory environments? Find out with a mixed-reality simulation featuring real robots, lots of projectors, and of course, Ruby!

    We use the excellent DragonRuby Game Toolkit to develop-mixed reality robotics simulations to: - enhance robot development - provide unique testing methods using real world robots - showcase robot behavior in digital-twins of our customer sites in our testing lab - take a break and build fun interactive experiences

    Join us in an exploration of this dynamic and interactive robot exploration lab!

  video_id: axQzs1moNUQ

- title: "Achieving Fast Method Metaprogramming: Lessons from MemoWise"
  raw_title: "RubyConf 2021 - Achieving Fast Method Metaprogramming: Lessons from.. by Jemma Issroff, Jacob Evelyn"
  speakers:
    - Jemma Issroff
    - Jacob Evelyn
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    Are dynamically generated methods always slow? In this talk, we’ll recount our journey developing MemoWise, Ruby’s most performant memoization gem. It’s a tale of benchmark-driven development, unexpected object allocations, and learning to love eval. We’ll cover common performance problems in Ruby metaprogramming and the arcane techniques we used to overcome them.

  video_id: uV3LqxFBSII

- title: "YJIT - Building a new JIT Compiler inside CRuby"
  raw_title: RubyConf 2021 - YJIT - Building a new JIT Compiler inside CRuby by Maxime Chevalier Boisvert
  speakers:
    - Maxime Chevalier-Boisvert
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    TruffleRuby together with Truffle Regex can now execute Ruby Regexps up to 40 times faster than CRuby! This is possible by just-in-time compiling Ruby Regexps to machine code by using Truffle Regex, a Truffle language for regular expressions. Truffle Regex uses finite-state machines, a much faster alternative to backtracking regexp engines. Because of the unique capability of GraalVM to inline across languages, the Ruby code and the Regexp are optimized and compiled together for ultimate performance.

  video_id: fqxkjb7wPy4

- title: "Compiling Ruby to Native Code with Sorbet & LLVM"
  raw_title: RubyConf 2021 - Compiling Ruby to Native Code with Sorbet & LLVM by Jake Zimmerman & Trevor Elliott
  speakers:
    - Jake Zimmerman
    - Trevor Elliott
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    At Stripe, “make it faster!” is one of our most requested features, but we don’t want to have to pause work on other features to get speed. Instead, we’ve built an ahead-of-time compiler for Ruby, powered by Sorbet and LLVM, focusing on improving latency in Stripe’s multi-million line Ruby code base.

    In this talk, we’ll cover why we built it, how it works, and share preliminary results from compiling Stripe’s production Ruby code. It’s not quite ready for prime time yet, but we’re interested in sharing our approach and getting early feedback on the design.

  video_id: mCVwbrsWOlE

- title: "Improving CVAR performance in Ruby 3.1"
  raw_title: RubyConf 2021 - Improving CVAR performance in Ruby 3.1 by Eileen Uchitelle
  speakers:
    - Eileen M. Uchitelle
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  slides_url: https://speakerdeck.com/eileencodes/improving-cvar-performance-in-ruby-3-dot-1
  description: |-
    Have you ever wondered how class variables (CVARs) in Ruby work? Would you be surprised to learn that their performance becomes increasingly worse as the inheritance chain grows? I’m excited to share that in Ruby 3.1 we fixed the performance of CVARs.

    In this talk we'll look at the language design of class variables, learn about how they work, and, deep dive into how we improved their performance in Ruby 3.1 by adding a cache! We'll look at the cache design and real-world benchmarks showing how much faster they are regardless of the size of the inheritance chain.

  video_id: Y3tSf8FwHUw

- title: "Optimizing Partial Backtraces in Ruby 3"
  raw_title: RubyConf 2021 - Optimizing Partial Backtraces in Ruby 3 by Jeremy Evans
  speakers:
    - Jeremy Evans
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    Backtraces are very useful tools when debugging problems in Ruby programs. Unfortunately, backtrace generation is expensive for deep callstacks. In older versions of Ruby, this is true even if you only want a partial backtrace, such as a single backtrace frame. Thankfully, Ruby 3 has been optimized so that it no longer processes unnecessary backtrace frames, which can greatly speed up the generation of partial backtraces. Join me for an interesting look a Ruby backtraces, how they are generated, how we optimized partial backtraces in Ruby 3, and how we fixed bugs in the optimization in 3.0.1.

  video_id: GSlQEtEjmHM

- title: A message from Engineyard
  raw_title: RubyConf 2021 - A message from Engineyard by Rahul Subramaniam EY
  speakers:
    - Rahul Subramaniam EY
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: ""
  video_id: F2RoYrMLJ48

- title: "Sorbet at Grailed: Typing a Large Rails Codebase to Ship with Confidence"
  raw_title: "RubyConf 2021 - Sorbet at Grailed: Typing a Large Rails Codebase to Ship with... by Jose Rosello"
  speakers:
    - Jose Rosello
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    Called “downcase” on nil? Forgot to return the right object in one of your logic branches? Called “first” on a String instead of an Array and spent half an hour trying to figure out why a single character was getting passed around everywhere?

    At Grailed, these situations were not uncommon. We are the largest marketplace for luxury men's fashion, with over 7 million users, and a growing Rails codebase that spans hundreds of thousands of lines. Before typing, changes to core interfaces often required creative grepping, modification of type checking unit tests, and updating brittle type documentation.

    Ever since we started gradually typing our codebase with Sorbet, we’ve been able to make intrusive changes faster and confidently. In this talk, we’ll walk you through our prior art, challenges, learnings, and big benefits of typing our codebase.

  video_id: jYqRV0Kt2ZI

- title: Scaling Happy Engineering Teams
  raw_title: RubyConf 2021 - Scaling Happy Engineering Teams by Zaid Zawaideh
  speakers:
    - Zaid Zawaideh
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    Scaling engineering organizations doesn't have to mean chaos, stress or losing the ability to have impact. In this talk I'll explain the principles we are applying at Wrapbook for scaling our Engineering teams to provide a healthy, happy and productive environment for people to do their best work.

  video_id: o04lx5kv_7Y

- title: "Cultivating Developer-Centric DSLs"
  raw_title: RubyConf 2021 - Cultivating Developer-Centric DSLs by Jake Anderson
  speakers:
    - Jake Anderson
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    Writing boilerplate code can be draining. Breaking things out into classes and modules doesn't always make this process more enjoyable either. At Weedmaps, we've developed a suite of Domain Specific Languages (DSLs) for the vast majority of our workflows. This includes things like query objects all the way to crawlers. Done right, these tools allow team members to accomplish more with less. Done wrong, team members would have been better off writing everything from scratch. This talk is meant for those who want to build better tooling around repetitive workflows. It's also for those that want to better understand how some of these tools work under the hood. Embrace the magic!

  video_id: 8VvgEQdp5YQ

- title: "Rswag: Automated API Documentation"
  raw_title: "RubyConf 2021 - Rswag: Automated API Documentation by Sarah Reid"
  speakers:
    - Sarah Reid
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description:
    Do you struggle to write documentation for your REST API? Do you often
    forget to update the docs after changing an endpoint? Does your API feel like
    a black box to other engineers? Do your docs say one thing, but your API does
    another? This talk is for you! We’ll explore all of these problems and discover
    how Rswag can solve them for you.
  video_id: 47PwEkVs2uc

- title: "Just-in-Time Compiling Ruby Regexps on TruffleRuby"
  raw_title: RubyConf 2021 - Just-in-Time Compiling Ruby Regexps on TruffleRuby by Benoit Daloze and Josef Haider
  speakers:
    - Benoit Daloze
    - Josef Haider
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description:
    TruffleRuby together with Truffle Regex can now execute Ruby Regexps
    up to 40 times faster than CRuby! This is possible by just-in-time compiling Ruby
    Regexps to machine code by using Truffle Regex, a Truffle language for regular
    expressions. Truffle Regex uses finite-state machines, a much faster alternative
    to backtracking regexp engines. Because of the unique capability of GraalVM to
    inline across languages, the Ruby code and the Regexp are optimized and compiled
    together for ultimate performance.
  video_id: JuVklIz1gts

- title: Dismantling Dystopian Futures with Humane Factories
  raw_title: RubyConf 2021 - Dismantling Dystopian Futures with Humane Factories by Anthony Navarre
  speakers:
    - Anthony Navarre
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    The terminal glowed a sickly pale green, reflecting in her lenses. “What do you mean, RecordInvalid?” she scoffed, and set to the task of debugging the factory. Hairs stood up on her neck as she realized the implications of her findings — she could practically smell the corrosion, but it was nobody’s fault. It was everyone’s fault. Data was long ago divorced from the human lives they were intended to improve. Dmitry bolted upright in a sweat. She was safe at home — it was all a dream, at least for now. There was still time. She started her morning routine, but breakfast was the last thing on her mind. She didn’t know all the factors, but she knew where to begin. Join me in this whimsical exploration of some not-so-whimsical tactics to put your test factories to work in some unconventional ways.

  video_id: aEEexQ7dESQ

- title: "Workshop: Fundamentals of Joint Cognitive Systems"
  raw_title: "RubyConf 2021 - Workshop: Fundamentals of Joint Cognitive Systems by Laura Maguire, John Allspaw"
  speakers:
    - Laura Maguire
    - John Allspaw
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    If we take the wayback machine to the time before there was Resilience Engineering, we find Cognitive Systems Engineering. Central to CSE is the concept of Joint Cognitive Systems - human/machine teaming based on principles of shared cognitive efforts, not simply dividing the work to be done across humans and machines. This thought-provoking and interactive workshop will give you a whole new lens to think about your work and the problems you face working on and with highly automated systems using a combination of lecture, discussion and hands on exercises.

  video_id: 4uWjAMqmxQw

- title: "Workshop: Intentional Team Building"
  raw_title: "RubyConf 2021 - Workshop: Intentional Team Building by Alex Robinson, Will Mitchell"
  speakers:
    - Alex Robinson
    - Will Mitchell
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    How do you build effective teams? What are the determining factors? In this collaborative workshop we will explore how to identify the values underpinning your team dynamics and explore techniques to cultivate effective teams built around intentional values.

  video_id: yATlt3hYvDk

- title: "Soup to Nuts: Build a video game using Ruby!"
  raw_title: "RubyConf 2021 - Soup to Nuts: Build a video game using Ruby! by Amir Rajan"
  speakers:
    - Amir Rajan
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    Have you ever dreamed of building a video game? Well here’s your chance of making that dream come true. During this workshop, we’ll build a 2D platformer like Super Mario Brothers, and A top down RPG like Legend of Zelda: A Link to the Past.

    No previous game dev experience is required.
    If you’re new to Ruby, that’s okay too. Building games is a fantastic way to learn a language.
    You’ll be given a free, unrestricted commercial license of DragonRuby Game Toolkit (this is the game engine we’ll be using during the workshop).

  video_id: jVen5yzrNeY

- title: "Workshop: Run your first game day"
  raw_title: "RubyConf 2021 - Workshop: Run your first game day by Thai Wood"
  speakers:
    - Thai Wood
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    Want to get better and incident response without waiting for actual incidents? Learn how to use table top exercises to practice your incident response framework, develop common ground, and improve communication during an incident.

    You'll learn how to run table top game days, including how to set them up, how to design scenarios and how to encourage participation, all with techniques supported by real word experience and supported by research.

  video_id: xqye3wo68uc

- title: "RubyCond 2021 - Workshop: Tackling Technical Debt: An Analytical Approach"
  raw_title: "RubyCond 2021 - Workshop: Tackling Technical Debt: An Analytical Approach by Chelsea Troy"
  speakers:
    - Chelsea Troy
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    Getting out of tech debt can feel like a Sisyphean task. After weeks of work, the success case is for the app to work the same as it used to. Organizations often declare code bankruptcy and rewrite working systems from scratch. How do we end up here? And how do we alleviate, or even better, prevent such a situation?

    In this workshop, you will learn how to measure tech debt and address the areas of highest need first. You’ll learn to identify high leverage code changes and separate those from renovations. You’ll also learn about the skills tech teams can use to prevent and reduce tech debt.

  video_id: DwW7zlNulbQ

- title: "All comments must be haiku! Custom linting with RuboCop"
  raw_title: RubyConf 2021 - All comments must be haiku! Custom linting with RuboCop by Scott Moore, Kari Silva
  speakers:
    - Scott Moore
    - Kari Silva
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    RuboCop is great for keeping code quality high by enforcing community-driven Ruby standards in our codebases. But RuboCop can also be easily customized to enforce standards that are unique to our codebase, automatically checking for the things that are most important to us.

    In this workshop we'll customize RuboCop to enforce our most important style rule: all comments must be in the form of a haiku! Along the way we'll learn:

    the basics of linting and RuboCop itself
    a little about abstract syntax trees
    how to build powerful custom tooling to enforce almost any standard we can think of!

  video_id: z9SwpkYa_Gc

- title: "Clean RSpec: A Workshop on Ruby Testing Craftsmanship"
  raw_title: "RubyConf 2021 - Clean RSpec: A Workshop on Ruby Testing Craftsmanship by Jesse Spevack"
  speakers:
    - Jesse Spevack
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    Testing has been a feature of the Ruby community for a long time. Why then are our spec files often so incomprehensible? In this workshop, I will share some ground rules for writing maintainable tests that will ensure that new teammates along with future-you can understand your test suite. We will use the RSpec testing framework to introduce several testing code-smells. For each smell, I will provide a demonstration on how to refactor the test along with time to practice for workshop participants. This workshop is geared towards anyone looking to hone their Ruby testing craft.

  video_id: e4HORZgt8-U

- title: "Workshop: How to use flamegraphs to find performance problems"
  raw_title: "RubyConf 2021 - Workshop: How to use flamegraphs to find performance problems by Jade Dickinson"
  speakers:
    - Jade Dickinson
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    Slow Ruby code can be a puzzle, but it doesn’t have to be that way. In this workshop you will see how fun it can be to use flamegraphs to find performance problems. You’ll get the most out of this session if you know you have slow areas in your Ruby application, and would like to learn how to find the code responsible.

  video_id: ALkoG4xNgD0

- title: "Workshop: A Gentle Introduction to Docker for Rubyists"
  raw_title: "RubyConf 2021 - Workshop: A Gentle Introduction to Docker for Rubyists by Jason Swett"
  speakers:
    - Jason Swett
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    Have you heard about how great Docker supposedly is, but you're not sure exactly what all the fuss is about, or even what Docker is or why people use it? Or maybe you understand what Docker is but you've never worked with it before. In this workshop, you'll learn exactly what Docker is and why you'd want to use it, and you'll come away with your own fully Dockerized Ruby application.

  video_id: 9hVNjr_iHko

- title: "Surprise! Inspiring Resilience"
  raw_title: RubyConf 2021 - Surprise! Inspiring Resilience by Cory Watson
  speakers:
    - Cory Watson
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    Resilience is the ability to function in the face of damage or failure. This is a desirable trait in all of our work, but can be rather difficult to achieve. Let's look outside of our own practices to find inspiration for our own work!

    In this talk we'll bring examples from outside tech. We’re talking aircraft carriers, race cars, priceless works of art, and hard-fought wisdom from across the accomplishments of humans and even nature itself. Join me in marveling at they ways things keep working, and we’ll get some cool ideas for how to create resilience in your organization or systems.
  video_id: 0Fr8Kpe8Ro4

- title: Picoruby and PRK Firmware
  raw_title: "RubyConf 2021 - Picoruby and PRK Firmware by Hitoshi Hasumi"
  speakers:
    - Hitoshi Hasumi
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    PicoRuby is an alternative implementation of the mruby interpreter which runs on one-chip microcontrollers.

    PRK Firmware is the world's first keyboard firmware framework in Ruby. You can write not only your own "keymap" in PicoRuby but also configure additional behavior with Ruby's features such as the open class system and the Proc object.

    The ultimate goal is certainly not a small one --- let's make Ruby comparable to projects such as MicroPython, CircuitPython or Lua in terms of viability as a scripting language on Board!
  video_id: ZfIz34PK4zs

- title: "Using Monads for Elegant Error Handling"
  raw_title: RubyConf 2021 - Using Monads for Elegant Error Handling by John Gallagher
  speakers:
    - John Gallagher
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    Your app blows up in production. It's an outage and you're under pressure. You read the code. "How does this work? Why is this exception being caught here?" And so begins a long, stressful journey to understand how to fix your code.

    Rescuing exceptions is normalised in Ruby, but it's a clumsy way of reacting to error conditions and causes your code to be difficult to reason about.

    You'll refactor an existing app to use a functional style and see first hand how easy monads are to use and how they can make your code incredibly clean and expressive.
  video_id: Nkg8tKOZccU

- title: "Why Did We Rewrite Our Main Product Four Times?"
  raw_title: RubyConf 2021 - Why Did We Rewrite Our Main Product Four Times? by Leon Hu
  speakers:
    - Leon Hu
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description:
    '"Hi, this is a friendly reminder you have an appt on 12/07, Thursday
    2pm". How hard can building and scaling an Appointment Reminder system be? An
    average developer can build such proof of concept in under a day. But to scale
    it to sending to millions of patients a week, nobody in our team thought it''d
    take us to rewrite it the 4th time. From dealing performance pain and ever increasing
    complexity, we poured in countless hours to come up with the perfect design. We
    have a thing or two to share about solving a seemingly trivial problem.'
  video_id: w8q_Uymv-bM

- title: How to stop breaking other people's things
  raw_title: RubyConf 2021 - How to stop breaking other people's things by Lisa Karlin Curtis
  speakers:
    - Lisa Karlin Curtis
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    Breaking changes are sad. We’ve all been there; someone else changes their API in a way you weren’t expecting, and now you have a live-ops incident you need to fix urgently to get your software working again. Of course, many of us are on the other side too: we build APIs that other people’s software relies on.

    This talk will cover how you can: (a) Get really good at identifying what changes might break someone’s integration (b) Help your API consumers to build integrations that are resilient to these kinds of changes (c) Release potentially breaking changes as safely as possible
  video_id: rmixCWytaJ8

- title: Harness the power of functions to build composable rack applications
  raw_title: RubyConf 2021 - Harness the power of functions to build composable rack applications by Marc Busqué
  speakers:
    - Marc Busqué
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description:
    hat's a function? A function is a black box that takes an input and
    returns an output. Similarly, from the outside, HTTP requests take some request
    data to give it back as a response. Functions may compose if the output of one
    matches the input of the next one. web_pipe helps you build rack applications
    by plugging small process units that progressively create a response from a given
    request.
  video_id: Tv6_RAM4S6k

- title: Engineering at Root
  raw_title: RubyConf 2021 - Engineering at Root by Maria Moore
  speakers:
    - Maria Moore
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    Root is a car insurance company founded on the belief that good drivers should pay less for insurance since they’re less likely to get into accidents. Some drivers are paying significantly more than they should for car insurance because most carriers base rates primarily on demographics, not driving. We’re fixing that.

    Root is reinventing the broken insurance industry by using technology in smartphones to measure driving behavior. The Root app measures things like smooth braking and turning to determine who is a safe driver and who isn’t. By only insuring good drivers, we can offer more affordable rates. And the software the engineering team built from scratch powers it all.

    Maria will share more about how we built an insurance company from scratch and how our Engineering teams continue to unbreak the insurance industry every day.
  video_id: O15ifnV0UiI

- title: "Control methods like a pro: A guide to Ruby's awesomeness, a.k.a metaprogramming"
  raw_title: "RubyConf 2021 - Control methods like a pro: A guide to Ruby's awesomeness,... by Masafumi Okura"
  speakers:
    - Masafumi Okura
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    Control methods like a pro: A guide to Ruby's awesomeness, a.k.a. metaprogramming by Masafumi Okura

    Do you know that methods are objects in Ruby? We can manipulate method objects just like other object, meaning that we can store them in variables, get information from them and wrap them in other objects like Proc. In this talk, I'll show a real-world example of manipulating methods. I'll cover from the basic such as listing available methods and getting a method object to the difference between Method and UnboundMethod and redefining methods with original method object.
  video_id: fJsoWMFypxU

- title: "Minimize Your Circus Factor: Building resilient teams"
  raw_title: "RubyConf 2021 - Minimize Your Circus Factor: Building resilient teams by Mercedes Bernard"
  speakers:
    - Mercedes Bernard
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    If you or someone on your team ran away to join the circus, how stressful would it be for the rest of the team? How can we minimize that?

    After a year+ in a pandemic, many are considering taking new roles or extended PTO. It's more important than ever to invest in minimizing our "circus factor" and building resilient teams so that everyone can unplug and do what's best for them with as little stress as possible. In this talk, we'll discuss low-friction changes you can make today so that if you join the circus tomorrow your team is empowered and enabled for continued success.
  video_id: jBMSWBND0WU

- title: "Managing Out: Strategies for Leveling Up"
  raw_title: "RubyConf 2021 - Managing Out: Strategies for Leveling Up by Mina Slater"
  speakers:
    - Mina Slater
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description:
    '"Mid-level Engineers". Who are we? We have enough experience to understand
    the domain of a project and the technical know-how to provide guidance to earlier-career
    teammates. But how do we continue to grow and reach the next level of team leadership?
    Let''s explore some of the initiatives we can take as mid-level engineers to level
    up our leadership skills, while contributing to the mentorship of newer engineers.
    You''ll walk away with strategies to do so internal to the engineering team, across
    disciplines of Design and Product and externally with stakeholders and/or product
    owners.'
  video_id: fKbO0RRdx6w

- title: Hello, computer. Writing Ruby with voice recognition
  raw_title: RubyConf 2021 - Hello, computer. Writing Ruby with voice recognition by Nat Budin
  speakers:
    - Nat Budin
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    Repetitive stress injuries are scary for tech workers. If I can’t type, is my career over?

    When my finger was injured last year, I had a long recovery period, and during that time, I learned to code using voice recognition software. In this talk, I’ll tell the whole story and demo the tool I learned.
  video_id: g-xnh8mszQU

- title: Optimizing Ruby's Memory Layout
  raw_title: RubyConf 2021 - Optimizing Ruby's Memory Layout by Peter Zhu & Matt Valentine-House
  speakers:
    - Peter Zhu
    - Matt Valentine-House
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    Ruby’s current memory model assumes all objects live in fixed size slots. This means that object data is often stored outside of the Ruby heap, which has implications: an object's data can be scattered across many locations, increasing complexity and causing poor locality resulting in reduced efficiency of CPU caches.

    Join us as we explore how our Variable Width Allocation project will move system heap memory into Ruby heap memory, reducing system heap allocations and giving us finer control of the memory layout to optimize for performance.
  video_id: 3c7ijPD6Jlk

- title: Beware the Dreaded Dead End!!
  raw_title: RubyConf 2021 - Beware the Dreaded Dead End!! by Richard Schneeman
  speakers:
    - Richard Schneeman
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description:
    Nothing stops a program from executing quite as fast as a syntax error.
    After years of “unexpected end” in my dev life, I decided to “do” something about
    it. In this talk we'll cover lexing, parsing, and indentation informed syntax
    tree search that power that dead_end Ruby library.
  video_id: 7CTn2m1ME5A

- title: Dungeons and Collaboration
  raw_title: RubyConf 2021 - Dungeons and Collaboration by Rolen Le
  speakers:
    - Rolen Le
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    What can fighting goblins teach us about working together? How can going on a perilous journey guide us through our careers? What if I told you I sit in a 4-hour meeting online every Friday night for fun?

    Having played Dungeons and Dragons for almost a decade and playing remotely for half that time, I have learned lessons that have taught me how to interact as a developer on a distributed team. From general online etiquette to building great teams, I will discuss tips and tricks of roleplaying that can make someone a better coworker.
  video_id: 9-7OCakUEIw

- title: Perceptual Learning == More Ruby Experts?
  raw_title: RubyConf 2021 - Perceptual Learning == More Ruby Experts? by Stefanni Brasil
  speakers:
    - Stefanni Brasil
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    ow do you become an expert? Why some Ruby developers can't explain what they know? Why some developers don't develop expert skills? What does it mean to be a Ruby expert?

    To discuss these questions, we'll explore Perceptual Learning (PL) research. PL is a natural learning process that complements traditional Education. It accelerates expertise by speeding pattern recognition, intuition and fluency on a given subject.

    In this talk, we'll learn how to create expertise based on PL's techniques, and how you can apply them to become an expert Ruby developer.
  video_id: 5lJDjciN-us

- title: The Intro to Abstraction I Wish I'd Received
  raw_title: RubyConf 2021 - The Intro to Abstraction I Wish I'd Received by Stephanie Minn
  speakers:
    - Stephanie Minn
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    So much talk about good software revolves around finding the “right abstraction”. Even programming itself is an act of abstracting the world into some form of bits and bytes. If, like me, you missed out on a proper introduction to such a fundamental concept, this talk will teach you what abstraction is and why it’s important to software development.

    We’ll also dig into a real-world example of fighting a troublesome abstraction and learn strategies for identifying when one no longer works for you—the first step toward imagining new abstractions for your code to take shape.
  video_id: m0dC5RmxcFk

- title: Optimizing Production Performance with MRI JIT
  raw_title: RubyConf 2021 - Optimizing Production Performance with MRI JIT by Takashi Kokubun
  speakers:
    - Takashi Kokubun
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    Since we introduced a JIT compiler to Ruby in 2.6, it had been known to slow down production applications like Rails. This year, we finally figured out why it was the case and found a way to fix it. Now we can even see the JIT compiler of Ruby 3.0 optimizes one of the most popular Rails applications.

    In this talk, you'll learn some tricks to make sure it happens on your production application. Get the easy speedup of your application for free!
  video_id: MpHczwoVNSU

- title: Parallel testing with Ractors - Putting CPU's to work
  raw_title: RubyConf 2021 - Parallel testing with Ractors - Putting CPU's to work by Vinicius Stock
  speakers:
    - Vinicius Stock
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    Parallelizing tests is an opportune way of reducing the total runtime for a test suite. Rails achieves this by forking multiple separate workers that fetch tests from a queue. In Ruby 3, Ractors introduced new mechanisms for executing code in parallel. Can they be leveraged by a test framework? And how would that compare to current parallelization solutions?

    Let’s find the answers to these questions by building a test framework built on Ractors, from scratch. We’ll compare the current solutions for parallelization and what advantages or limitations Ractors bring when used in this context.
  video_id: rdwvvDMmsAQ

- title: Debugging Product Teams
  raw_title: RubyConf 2021 - Debugging Product Teams by Amy Newell
  speakers:
    - Amy Newell
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    Everyone knows that to build great software you need great teams. Experts are quick to offer principles and processes that are “the key” to greatness.

    But what if your team’s not “great”? It’s not “getting things done”. People don’t trust each other. There’s a lot of conflict. Low morale. Something is wrong.

    Now what?

    “Debugging” a team is a lot like caring for a complex distributed software system: it’s less about fixes, and more about observation, hypotheses, intervention, and more observation. Whatever your role, these are skills you can learn and apply right now, on your own teams.
  video_id: CoaYjkVRhiE

- title: This is not a talk about airplane crashes
  raw_title: RubyConf 2021 - This is not a talk about airplane crashes by Andromeda Yelton
  speakers:
    - Andromeda Yelton
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    Are you:

    an embodied, thinking, feeling human
    who works together with other humans
    in a context of technical systems
    and wants that to go well?
    If so, let's talk about aviation: a field that's become exceptionally safe by obsessively investigating accidents and sharing lessons learned. In addition to being fascinating engineering detective stories, these retrospectives yield recommendations that are useful for anyone who said "yes" to the above questions. I'll tell you stories of key accidents in aviation history and what we can learn from them.

    (CW: injury, death.)
  video_id: 9Z58SSn6ZXo

- title: Async Ruby
  raw_title: RubyConf 2021 - Async Ruby by Bruno Sutic
  speakers:
    - Bruno Sutic
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    Async Ruby is an exciting and innovating part of Ruby. It's a new approach to concurrency best described as "threads with NONE of the downsides". Async Ruby has mind-blowing capabilities, and is so good Matz invited the gem to the standard library. Despite the upsides, and strong support from the Ruby core team, Async gem has stayed relatively off of Ruby mainstream.

    This talk is suitable for both beginners and experts, and is relevant for you if you're making web requests in ruby. It will introduce you to some the most impressive async features and explain its core concepts.
  video_id: LvfQTFNgYbI

- title: A History of Compiling Ruby
  raw_title: RubyConf 2021 - A History of Compiling Ruby by Chris Seaton
  speakers:
    - Chris Seaton
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description:
    Did you know that there have been at least sixteen attempts to build
    a compiler from Ruby to machine code? Why have there been so many? What were the
    ideas and context of each of these compilers? How are they similar and how are
    they different? What can we learn about compilers and Ruby from looking at them
    all? It turns out that we can trace the major advances in compiler research from
    the last couple of decades through Ruby!
  video_id: Idy9fryWGS8

- title: Golf Scripting with Ruby - Helping Santa Schedule Christmas
  raw_title: RubyConf 2021 - Golf Scripting with Ruby - Helping Santa Schedule Christmas by Ely Alvarado
  speakers:
    - Ely Alvarado
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description:
    "Code Golf is a fun form of programming competition where the aim is
    to produce the shortest source code that implements an algorithm. In this talk
    we will show how we tackle a complex problem: helping Santa schedule the work
    of his elves Army to deliver presents on Christmas Day. We will go step by step
    on how to find an algorithm to solve it and how to use Ruby’s language features
    to make it as short as possible. You’ll learn a few secret shortcuts built into
    Ruby that you probably don’t know about."
  video_id: d4QwyojCbX0

- title: "Black Swan Events in Open Source: That time we broke the internet"
  raw_title: "RubyConf 2021 - Black Swan Events in Open Source: That time... by Julia Ferraioli and Amanda Casari"
  speakers:
    - Julia Ferraioli
    - Amanda Casari
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    A black swan event refers “to unexpected events of large magnitude and consequence which then play a dominant role in history". With open source ecosystems increasing in complexity and growth as sociotechnical systems, we must examine how often these events are happening and if they are truly unexpected.

    This talk will explore a series of events in open source history, some of which came as a surprise to users of the open source project and industry as a whole, had a wide and long-lasting impact on technology, or was inappropriately rationalized after the fact with the benefit of hindsight.
  video_id: bF4i7t7hpI4

- title: "debug.gem: Ruby's new debug functionality"
  raw_title:
    "RubyConf 2021 - debug.gem: Ruby's new debug functionality by Koichi
    Sasada"
  speakers:
    - Koichi Sasada
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: |-
    This talk introduces ruby/debug: Debugging functionality for Ruby, a completely rewritten debugger for Ruby and it will be shipped with Ruby 3.1 at next Christmas.

    The new debugger has several advantages:

    Fastest debugger: Using recent introduced TracePoint features and (almost) no penalty on normal execution.
    Remote debugger
    Native VSCode (DAP) integration
    Easy integration with applications
    Thread/Ractor support
    And more useful features!
    In this talk, I'll introduce useful features of this new debugger and tips for Ruby development.
  video_id: s74tfFk2txM

- title: Beyond Blameless
  raw_title: RubyConf 2021- Beyond Blameless by Rein Henrichs
  speakers:
    - Rein Henrichs
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description:
    In the aftermath of John Allspaw's hugely influential "Blameless Post-Mortems",
    blamelessness has become a shibboleth for modern production operations teams.
    But it seems that something has been lost in translation. Organizations that try
    to "be blameless" without understanding blame often make activities taboo that
    can lead to blame. But many of them (like attribution and event analysis) are
    not inherently harmful — and they are necessary for learning. When we throw the
    baby of learning out with the bathwater of blaming, we also lose opportunities
    to become more resilient.
  video_id: l2CdjZUAmb0

- title: The Intentional Plan for Intersectionality
  raw_title: RubyConf 2021 - The Intentional Plan for Intersectionality by Shailvi Wakhlu
  speakers:
    - Shailvi Wakhlu
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description:
    When thinking about issues faced by the underrepresented groups, we
    cannot ignore intersectionality. For eg. Women face plenty of challenges in STEM
    fields, and also face additional challenges based on their race, sexual orientation,
    nationality, disability, education, etc. This talk highlights the fierce urgency
    of now, in planning for intersectionality.
  video_id: ua0TL4zRAIU

- title: Programming with Something
  raw_title: RubyConf 2021 - Programming with Something by Tom Stuart
  speakers:
    - Tom Stuart
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description:
    Programs which manipulate other programs are extremely fun and incredibly
    powerful. To write them, we need a way to represent code as a data structure which
    we can analyse, manipulate and eventually execute. In this talk we’ll learn how
    to store executable code as data in Ruby, and explore how to write different kinds
    of programs that process it.
  video_id: KwMuTJ_3Ljg

- title: Enjoy Ruby Programming in IDE and TypeProf
  raw_title: RubyConf 2021 - Enjoy Ruby Programming in IDE and TypeProf by Yusuke Endoh
  speakers:
    - Yusuke Endoh
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description:
    The rich development experience in integrated development environments
    (IDEs), including on-the-fly error reporting, refactoring feature, completion,
    etc., has become increasingly important. To achieve this, many programing languages
    are incorporating annotations such as type hinting. However, is such IDE features
    infeasible without annotations? We are challenging ourselves to achieve modern
    development experience with non-type-annotated Ruby programs by using TypeProf,
    which is a type analysis tool bundled in Ruby 3.0. In this talk, we demonstrate
    our prototype, and present its roadmap.
  video_id: 6lfAJeGHbfY

- title: "Whimsy: Art, Beats & Code"
  raw_title: "RubyConf 2021 - Whimsy: Art, Beats & Code by Rachel Green"
  speakers:
    - Rachel Green
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: ""
  video_id: 06xEs0py8qo

- title: "Whimsy: Babies just want to have fun"
  raw_title: "RubyConf 2021 - Whimsy: Babies just want to have fun by Ali Ibrahim"
  speakers:
    - Ali Ibrahim
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: ""
  video_id: hLl-uQFh3fA

- title: "Whimsy: Put That Test Down! You don't know where it's been"
  raw_title: "RubyConf 2021 - Whimsy: Put That Test Down! You don't know where it's been by Michael Dalessio"
  speakers:
    - Michael Dalessio
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: ""
  video_id: cWzsmOw-AFw

- title: "Keynote: Beyond Ruby3.0"
  raw_title: "RubyConf 2021 - Keynote: Beyond Ruby3.0 by Yukihiro (Matz) Matsumoto"
  speakers:
    - Yukihiro "Matz" Matsumoto
  event_name: RubyConf 2021
  published_at: "2022-08-09"
  description: "Keynote: Beyond Ruby3.0 by Yukihiro (Matz) Matsumoto"
  video_id: sAu8UUnVc_Y
