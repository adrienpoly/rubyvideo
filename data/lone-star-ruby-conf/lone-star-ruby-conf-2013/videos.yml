---

# Website: https://web.archive.org/web/20130829023207/http://www.lonestarruby.org/

# Schedule: https://web.archive.org/web/20130821204939/http://www.lonestarruby.org/2013/lsrc#schedule

# TODO: talks running order
# TODO: talk date

- title: 'Closing Keynote: You Gotta Try This'
  raw_title: LoneStarRuby 2013 - Closing Keynote by Avdi Grimm
  speakers:
    - Avdi Grimm
  event_name: LoneStarRuby Conf 2013
  published_at: '2013-08-11'
  description: |-
    Help us caption & translate this video!

    http://amara.org/v/FG8H/
  video_provider: youtube
  video_id: rx3Gz1E9El8

- title: Give Cloud Foundry To Your Company
  raw_title: LoneStarRuby Conf 2013 - Give Cloud Foundry to your Company by Dr. Nic Williams
  speakers:
    - Dr. Nic Williams
  event_name: LoneStarRuby Conf 2013
  published_at: '2013-08-11'
  description: |-
    Help us caption & translate this video!

    http://amara.org/v/FG8n/
  video_provider: youtube
  video_id: OZCIqFCVsdw

- title: 'Panel: Cloud'
  raw_title: LoneStarRuby Conf 2013 - Cloud Panel
  speakers:
    - Greg Knox
    - Prashant Throughout
    - Dr. Nic Williams
    - Jay Austin Ewing
    - Jim Meyer
    # - TODO: MC
  event_name: LoneStarRuby Conf 2013
  published_at: '2013-08-11'
  description: |-
    Help us caption & translate this video!

    http://amara.org/v/FG9B/
  video_provider: youtube
  video_id: BL_yHui-80M

- title: 'Big Data and the Coming Golden Age of Humanity'
  raw_title: LoneStarRuby 2013 - Big Data and the Coming Golden Age of Humanity
  speakers:
    - Byron Reese
  event_name: LoneStarRuby Conf 2013
  published_at: '2013-08-11'
  description: |-
    By Byron Reese

    This talk explores how the widespread proliferation of cheap sensors of all kinds will create a vast collective memory for the planet which will serve as a record of every cause and effect. This data will be scoured for associations that will be turned into algorithms which optimize every decision we have to make in life. And while we may not always choose to do those things, it will effectively make every person on the planet vastly wiser than the wisest person who has ever lived. In the future, no one will ever need to make a mistake again.

    Help us caption & translate this video!

    http://amara.org/v/FG8E/
  video_provider: youtube
  video_id: WxUGrRQtG7Q

- title: 'Elixir: Power of Erlang, Joy of Ruby'
  raw_title: 'LoneStarRuby Conf 2013 - Elixir: Power of Erlang, Joy of Ruby by Dave Thomas'
  speakers:
    - Dave Thomas
  event_name: LoneStarRuby Conf 2013
  published_at: '2013-08-11'
  description: |-
    Dave Thomas
    Elixir: Power of Erlang, Joy of Ruby

    I'm a language nut. I love trying them out, and I love thinking about their design and implementation. (I know, it's sad.)

    I came across Ruby in 1998 because I was an avid reader of comp.lang.misc (ask your parents). I downloaded it, compiled it, and fell in love. As with any time you fall in love, it's difficult to explain why. It just worked the way I work, and it had enough depth to keep me interested.

    Fast forward 15 years. All that time I'd been looking for something new that gave me the same feeling.

    Then I came across Elixir, a language by Jos√© Valim, that puts a humane, Ruby-like syntax on the Erlang VM.

    Now I'm dangerous. I want other people to see just how great this is. I want to evangelize. I won't try to convert you away from Ruby. But I might just persuade you to add Elixir to your toolset.

    So come along and let me show you the things that I think make Elixir a serious alternative for writing highly reliable, scalable, and performant server code.

    And, more important, let me show you some fun stuff.

    Help us caption & translate this video!

    http://amara.org/v/FG9C/
  video_provider: youtube
  video_id: KQwEmdOH-GM

- title: Cutting Through the Fog of Cloud
  raw_title: LoneStarRuby Conf 2013 - Cutting Through the Fog of Cloud by Kyle Rames
  speakers:
    - Kyle Rames
  event_name: LoneStarRuby Conf 2013
  published_at: '2013-08-11'
  description: |-
    In this talk, I am going to briefly talk about "what cloud is" and highlight the various types of cloud (IaaS, PaaS, SaaS). The bulk of the talk will be about using the fog gem using IaaS. I will discuss fog concepts (collections, models, requests, services, providers) and supporting these with actual examples using fog.

    Help us caption & translate this video!

    http://amara.org/v/FG8Z/
  video_provider: youtube
  video_id: QbsDEUwwPVE

- title: The Mechanics of Ruby
  raw_title: LoneStarRuby Conf 2013 - The Mechanics of Ruby by Adam Keys
  speakers:
    - Adam Keys
  event_name: LoneStarRuby Conf 2013
  published_at: '2013-08-11'
  description: |-
    Ruby is a delightful language to work with. And yet, for years, we've been hearing about how MRI is too slow and inefficient for "serious" use. What does that mean? What would a "serious" Ruby runtime look like?

    To understand these questions, we need to dig into the design of MRI. How does it work, and what are the underlying principles? What does common Ruby code look like as its executed by MRI? Once we've discovered what makes MRI tick, we can compare it to modern runtimes like Hotspot and V8 to understand why MRI is slower. From there we can take a look at JRuby and Rubinius and see how they seek to close the gap between Ruby runtimes and the competition.

    In this talk, we'll dive into the internals of MRI, seeking to understand how it executes Ruby code. We'll look at ways to make our code faster, reduce garbage collection overhead, and find more concurrency in our programs. At the end, you will have a better understanding of how MRI works and how to write better code for it.

    Help us caption & translate this video!

    http://amara.org/v/FG9D/
  video_provider: youtube
  video_id: aRM06L1L_74

- title: 'Refactoring Legacy Apps with APIs and Messages'
  raw_title: LoneStarRuby Conf 2013 - Refactoring Legacy Apps with APIs and Messages
  speakers:
    - Coraline Ada Ehmke
  event_name: LoneStarRuby Conf 2013
  published_at: '2013-08-11'
  description: |-
    By Corey Ehmke

    Rails as a framework is famous for getting an application up and running quickly, but the very paradigms that make it so easy at the start can lead to maintenance nightmares down the road. Successful applications grow rapidly larger, more complex, and harder to extend and maintain. One way to approach refactoring a monolithic application is dividing it up into a series of smaller applications that organize the work of the system through internal APIs and message queues. In this presentation you will be introduced to tools to enable this architecture, gain insight on how best to use them, and explore the guiding principles behind the SOA approach to refactoring.

    Help us caption & translate this video!

    http://amara.org/v/FG83/
  video_provider: youtube
  video_id: zzv-uv39954

- title: Building a Culture of Quality
  raw_title: LoneStarRuby Conf 2013 - Building a Culture of Quality by Bryan Helmkamp
  speakers:
    - Bryan Helmkamp
  event_name: LoneStarRuby Conf 2013
  published_at: '2013-08-11'
  description: |-
    Time and time again, skilled developers with good intentions set out into the green field of their new Rails app. Alas, as days turn to weeks, weeks to months and months to years, they find themselves with an ever increasing maintenance burden. Adding new features in a well-designed way starts to feel like an exercise in futility, so they resort to liberal use of conditionals to avoid breaking existing code.

    This leads to more complexity, and on the cycle goes.

    It doesn't need to be like this. There's no silver bullet that will save your project from this fate, but by practicing a holistic approach to code quality you can stave off the maintenance monsters and keep your app's code feeling fresh and clean. This talk will look at low ceremony, common sense approaches to taking control of the quality of your codebase. You'll leave with an expanded toolbox of techniques to build a culture of quality within your organization.

    Help us caption & translate this video!

    http://amara.org/v/FG84/
  video_provider: youtube
  video_id: YCugeqQuzh4

- title: 'Ember on Rails: #REALTALK'
  raw_title: 'LoneStarRuby Conf 2013 - Ember on Rails: #REALTALK by Brandon Hays'
  speakers:
    - Brandon Hays
  event_name: LoneStarRuby Conf 2013
  published_at: '2013-08-11'
  description: |-
    If you work in Rails and have ever wondered about Ember.js, you should know that Ember and Rails go together like Nutella and pretzels. (Which is to say, quite well indeed.)

    Get an inside look of the experience of going from having never tried Ember to shipping a production application in it. What makes Ember a good match for certain types of applications? What's so different about it compared to other frameworks? What are the drawbacks?

    Using anecdotes, code, and crudely-drawn stick figures, we'll dive into using Ember and Rails, including war stories of climbing over some of the (often surprising) roadblocks encountered along the way.

    With this quick tour, you'll be equipped to jump in and start seeing the kind of crazy-ambitious applications you can build when you've got Ember.js in your toolset.

    Help us caption & translate this video!

    http://amara.org/v/FG86/
  video_provider: youtube
  video_id: PdqbG71Dr84

- title: Placing Things into Other Things
  raw_title: LoneStarRuby Conf 2013 - Placing Things into Other Things by Charles
    Lowell
  speakers:
    - Charles Lowell
  event_name: LoneStarRuby Conf 2013
  published_at: '2013-08-11'
  description: |-
    The world of Ruby is a big and beautiful one. Like Cane from Kung-Fu, you could spend a lifetime wandering it's surface and never lack for an abundance of wonder. But there is an even larger world outside its walls that is also filled with amazing things. Based on lessons learned writing C extensions, Java extensions as well embedding interpreters (v8) and applications (Jenkins) inside Ruby, This talk will take you through the best ways to dress up any citizen of the galaxy in order to make it indistiguishable from one of our beloved planet Ruby.

    Help us caption & translate this video!

    http://amara.org/v/FG87/
  video_provider: youtube
  video_id: LPCuUjs909Y

- title: 'Functional Reactive Programming with Frappuccino'
  raw_title: LoneStarRuby Conf 2013 - Functional Reactive Programming with Frappuccino
  speakers:
    - Steve Klabnik
  event_name: LoneStarRuby Conf 2013
  published_at: '2013-08-11'
  description: |-
    By Steve Klabnik

    Help us caption & translate this video!

    http://amara.org/v/FG88/
  video_provider: youtube
  video_id: rffDdYBpyYM

- title: Hacking Passion
  raw_title: LoneStarRuby Conf 2013 - Hacking Passion by Katrina Owens
  speakers:
    - Katrina Owens
  event_name: LoneStarRuby Conf 2013
  published_at: '2013-08-11'
  description: |-
    Help us caption & translate this video!

    http://amara.org/v/FG89/
  video_provider: youtube
  video_id: rHLTltK1kss

- title: Getting called up to the Majors
  raw_title: LoneStarRuby Conf 2013 - Getting called up to the Majors by Reid Gillette
  speakers:
    - Reid Gillette
  event_name: LoneStarRuby Conf 2013
  published_at: '2013-08-11'
  description: |-
    Shifting from an amateur web developer hacking away at my own projects in my living room to a professional Software Engineer at a startup in San Francisco was a huge change in the way I developed. After joining Mavenlink a year ago I went from tiny apps that were 100% my code, with fast test suites, hosted on Heroku to a giant Rails app with a complicated data model, a CI test suite that took an hour, and a legacy codebase touched by 30+ people. I've worked hard the last year to step up to the challenge and I've learned so much in the process. As the developer pool gets more and more junior there will be more people making the same journey as I did.

    In this talk I will cover:

    skills that are important (some I had, others I had to develop)
    iteration planning
    testing
    debugging/support
    polyglot skills
    contributing to a team much more skilled than you
    pair-programming with someone much more senior or junior than you
    how culture at Mavenlink has helped me succeed
    what you can do to help onboard and train up your Junior Developers
    things you should look for in a Junior Developer candidate

    Help us caption & translate this video!

    http://amara.org/v/FG8a/
  video_provider: youtube
  video_id: 9nnh7zjLxFI

- title: Diary of a Mad Rails Engineer
  raw_title: LoneStarRuby Conf 2013 - Diary of a Mad Rails Engineer by Akira Matsuda
  speakers:
    - Akira Matsuda
  event_name: LoneStarRuby Conf 2013
  published_at: '2013-08-11'
  description: |-
    Rails Engines are useful. We can make our code well structured and reusable using Engines.

    Rails Engines are fun. You can publish your Engine repo to the world, then make yourself and the world better and happier.

    Rails Engine is a sophisticated system. Even though Áåø‰∫∫ (en-jin) in Japanese means "ape-man".

    Rails Engine is zen. Everything in our Rails app is an Engine, and Engine is everything. Even the Rails app itself should also be an Engine.

    During my talk, you will get to know what exactly Rails::Engine is, and you will see some of my crazy Engine tips, ideas, and implementations around Rails::Engine.

    Help us caption & translate this video!

    http://amara.org/v/FG8m/
  video_provider: youtube
  video_id: 0CtpXaYG9og

- title: TDD in Tatters
  raw_title: LoneStarRuby Conf 2013 - TDD in Tatters by Scott Bellware
  speakers:
    - Scott Bellware
  event_name: LoneStarRuby Conf 2013
  published_at: '2013-08-11'
  description: |-
    TDD has been tattered, torn, twisted, stood on its head, and pounded into an pulp of techno-fetishism. TDD was a game-changer, but the focus in the interceding years has shifted from technique to tools, and TDD has been devolving into a lost art. By tearing TDD down to its bones, this presentation presents TDD in its essence, free of tools, and reinforcing the primary focus on design principles. It attempts to convince you to return to a simpler time when TDD was still about design, and software developers were dutifully steeped in the critical importance of design principles. To avoid being held to any particularly offensive positions, this talk liberally attacking the status quo of testing and contemporary tool-focused TDD in Ruby, while introducing yet-another testing library in Ruby. :)

    Help us caption & translate this video!

    http://amara.org/v/FG8c/
  video_provider: youtube
  video_id: veYFV4maTyQ

- title: The End of Fun
  raw_title: LoneStarRuby Conf 2013 - The End of Fun by Sarah Mei
  speakers:
    - Sarah Mei
  event_name: LoneStarRuby Conf 2013
  published_at: '2013-08-11'
  description: |-
    I hate to break it to you, guys, but Ruby is old enough to drink. What started out as a small community full of fun, silliness, and connection has been growing. Our small codebases are now large. Our small companies are now large. And the large companies have finally figured out that they want in, too.

    So maybe it's time to start tackling Real Problems and Real Solutions in the world of Real Innovation. Maybe it's time for the community to grow up, stop playing around, and get Serious‚Ñ¢.

    But...that's not who we are. Our community thrives on creativity, play, and luck. And those things aren't just a weird perk like not having to wear shoes in the office -- creativity, play, and luck, when present, actually produce better software. As we grow our projects and our teams and invade the corporate cube farm, there are some things we can lay aside, and there are others we must hold on to as if our very identity depended on them.

    Because it does.

    Help us caption & translate this video!

    http://amara.org/v/FG8b/
  video_provider: youtube
  video_id: P4RA7NYyG24

- title: 'Panel: Ruby Rogues'
  raw_title: LoneStarRuby Conf 2013 - Ruby Rogues Panel
  speakers:
    - Josh Susser
    - Avdi Grimm
    - David Brady
    - Charles Max Wood
    - Katrina Owen
    - James Edward Gray II
  event_name: LoneStarRuby Conf 2013
  published_at: '2013-08-11'
  description: |-
    Help us caption & translate this video!

    http://amara.org/v/FG8d/
  video_provider: youtube
  video_id: Eg7IaRAnASM

- title: If It Bleeds, It Leads
  raw_title: LoneStarRuby Conf 2013 - If It Bleeds, It Leads by Evan Light
  speakers:
    - Evan Light
  event_name: LoneStarRuby Conf 2013
  published_at: '2013-08-11'
  description: |-
    Many of us came to Ruby by way of Rails (including yours truly about six years ago). We came because our current solutions were clumsy and inconvenient. We came because we appreciated the relative simplicity that Rails offered. And we came because we believe that change is often a good thing.

    But not all changes are beneficial.

    Over several blog posts, books, and a couple of years, the Rails community has begun to choose complexity over simplicity. Let's talk about why. And let's talk about how we can try to recapture that simplicity that we so once adored.

    Help us caption & translate this video!

    http://amara.org/v/FG8f/
  video_provider: youtube
  video_id: 7F3M0qdmxwU

- title: 'Why You Should Love The Command-Line And Get Rid of Your Rake Tasks Once and For All'
  raw_title: LoneStarRuby Conf 2013 - Why You Should Love The Command Line -
  speakers:
    - Alan Skorkin
  event_name: LoneStarRuby Conf 2013
  published_at: '2013-08-11'
  description: |-
    By Alan Skorkin - Why You Should Love The Command-Line And Get Rid of Your Rake Tasks Once and For All

    Rake is ubiquitous in our community, it's in just about every project. But why is this so, it is awkward and inflexible (try passing some arguments to rake tasks), and the way we've come to use it almost encourages bad design. Interestingly we've had a better way, to handle the things that we use Rake for, since before Rake even existed - command-line apps. Apps that do one task and do it well, it's the unix philosophy.

    The problem is that as far as most of us know, writing a good command-line app in Ruby is not easy. Fiddling with OptionParser to produce a hacky script is no better than Rake, if anything it is worse. But what if we had the technology to build excellent command-line apps simply and easily? Well, to some extent we already do, but most of the tools available don't go far enough and so never become a viable Rake alternative.

    In this talk we'll try to figure out what features a command-line framework needs to become your go-to tool instead of Rake (and how close existing tools are to this ideal). We'll cover things like:

    What exactly is so bad about Rake
    What makes a good command-line interface
    Configuring your command-line apps
    What are your options for parsing options
    Can a command-line framework encourage good code design?
    Writing highly testable CLI apps
    Etc.
    And as an added bonus, while we talk about all this, we'll touch on good and bad code design as well as look at some of the unexpected corners of your app where 'bad' code is hiding.

    Help us caption & translate this video!

    http://amara.org/v/FG8e/
  video_provider: youtube
  video_id: M-fJIWB5WgY

- title: Neural Networks with RubyFANN
  raw_title: LoneStarRuby Conf 2013 - Neural Networks with RubyFANN by Ethan Garofolo
  speakers:
    - Ethan Garofolo
  event_name: LoneStarRuby Conf 2013
  published_at: '2013-08-11'
  description: |-
    Neural networks (NNs) not only sound really cool, but they can also solve some pretty interesting problems ranging from driving cars to spam detection to facial recognition.

    Solving problems with NNs is challenging, because actually implementing a NN from scratch is difficult, and knowing how to apply it is more difficult. Fortunately, libraries, such as RubyFANN, exist to handle the first problem. Solving the second problem comes from experience.

    This talk will show a few different approaches to applying NNs to such problems as spam detection and games, as well as discussing other areas where NNs might be a useful solution.

    Help us caption & translate this video!

    http://amara.org/v/FG8g/
  video_provider: youtube
  video_id: M9w7OMxmRv4

- title: Open Source Protips from the Trenches
  raw_title: LoneStarRuby Conf 2013 - Open Source Protips from the Trenches
  speakers:
    - Matt Rogers
  event_name: LoneStarRuby Conf 2013
  published_at: '2013-08-11'
  description: |-
    By Matt Rogers

    Open Source projects can be hard to navigate for both new and old contributors alike. In this talk, we'll walk through some tips and tricks for dealing with the various pieces of open source projects. From dealing with trolls to nurturing one shot patch submitters into long time contributors we'll walk through various tips to get the most out of your open source experience

    Help us caption & translate this video!

    http://amara.org/v/FG8i/
  video_provider: youtube
  video_id: yd9GLA1c9eg

- title: I Made a Slow Thing Fast
  raw_title: LoneStarRuby Conf 2013 - I Made a Slow Thing Fast by Ben Hamill
  speakers:
    - Ben Hamill
  event_name: LoneStarRuby Conf 2013
  published_at: '2013-08-11'
  description: |-
    The talk is a narrative retelling of how I took an application that needed to communicate with a slow external API and improved the user's experience in terms of speed. I'll talk about the situation that we started with, and then retell the story of measurement, and improvement and measurement and improvement.

    I'll talk about perftools.rb, improving the perception of speed without having to actually make your code faster, MRI's Threads (when they're a good fit, and how and why we used them), a few strategies for managing threads, and a few other related topics. None of these topics will be discussed in great depth; the format is intended to be a retelling of the project, so I'll limit my discussion to the scope of how it applied to this specific project.

    The talk will probably be of most interest to people who have little real-world experience with MRI's Threads and/or making users feel like an application is responding quickly. My hope is that showing these things in the context of a real project can help solidify understanding of topics that are often covered in contrived or theoretical examples (I know it did for me: I was totally new to a lot of this stuff when I started the project).

    Help us caption & translate this video!

    http://amara.org/v/FG8o/
  video_provider: youtube
  video_id: oKQBgNebEOI

- title: Fluent Refactoring
  raw_title: loneStarRuby Conf 2013 - Fluent Refactoring by Sam Livingston-Gray
  speakers:
    - Sam Livingston-Gray
  event_name: LoneStarRuby Conf 2013
  published_at: '2013-08-11'
  description: |-
    Fluency is "what you can say without having to think about how to say it." "Refactoring" is a language that describes ways to make your code better. I want to inspire you to learn more of that language, so you can make your code better without having to think about it.

    I'll walk you through the process of reworking a 50-line controller action that's hard to comprehend, let alone refactor. We'll tease apart fiendishly intertwined structures, embrace duplication, use dirty tricks to our advantage, and uncover responsibilities‚Äîand bugs!‚Äîthat weren't obvious at first glance.

    Help us caption & translate this video!

    http://amara.org/v/FG8j/
  video_provider: youtube
  video_id: xJZrMbS2dDk

- title: 'Asynchronous Workers to the Resque'
  raw_title: LoneStarRuby Conf 2013 - Asynchronous Workers to the Resque
  speakers:
    - Dave Kapp
  event_name: LoneStarRuby Conf 2013
  published_at: '2013-08-11'
  description: "By Dave Kapp \n\nWhile Ruby is a terrific language, it doesn't offer
    a lot of ways to deal with asynchronous tasks using the default libraries. Thankfully,
    the community has come up with several great options for bringing asynchronicity
    to your applications. Resque is one of the forerunners of this, and it offers
    a lot of functionality and flexibility with an easily approachable API. Here,
    we'll go over several techniques for utilizing asynchronous workers to benefit
    your projects.\n\nWe'll start off with a review of how asynchronous processing
    works, and then we'll delve into three different things you can use Resque for:
    speeding up your applications by processing slow operations on the side, performing
    sequential updates with pipelining, and performing periodic maintenance tasks.
    We'll go over example code for how to handle these different situations and ideas
    for how to integrate them with existing applications.\n\nWhile the examples will
    be given using Resque, the ideas and patterns discussed will be applicable to
    other worker queues, such as delayed_job and Sidekiq.\n\nHelp us caption & translate
    this video!\n\nhttp://amara.org/v/FG8l/"
  video_provider: youtube
  video_id: 1zMcGagg_M8

- title: Programming Diversity
  raw_title: LoneStarRuby Conf 2013 - Programming Diversity by Ashe Dryden
  speakers:
    - Ashe Dryden
  event_name: LoneStarRuby Conf 2013
  published_at: '2013-08-11'
  description: |-
    It's been scientifically proven that more diverse communities and workplaces create better products and the solutions to difficult problems are more complete and diverse themselves. Companies are struggling to find adequate talent. So why do we see so few women, people of color, and LGBTQ people at our events and on the about pages of our websites? Even more curiously, why do 60% of women leave the tech industry within 10 years? Why are fewer women choosing to pursue computer science and related degrees than ever before? Why have stories of active discouragement, dismissal, harassment, or worse become regular news?

    In this talk we'll examine the causes behind the lack of diversity in our communities, events, and workplaces. We'll discuss what we can do as community members, event organizers, and co-workers to not only combat this problem, but to encourage positive change by contributing to an atmosphere of inclusivity.

    Objectives:

    Educate about the lack of diversity and why it is a problem
    Examine what is contributing to both the pipeline issue as well as attrition
    Isolate what is and isn't working
    Inspire direct action by examining our own behavior and learning more about the people around us so we can empathize better

    Help us caption & translate this video!

    http://amara.org/v/FG8k/
  video_provider: youtube
  video_id: 6qrkI5hhfnw

- title: Ruby 2 Jeopardy
  raw_title: LoneStarRuby Conf 2013 - Ruby 2 Jeopardy by James Edward Gray II
  speakers:
    - James Edward Gray II
  event_name: LoneStarRuby Conf 2013
  published_at: '2013-08-11'
  description: |-
    I will host a game of Jeopardy with questions and answers based on Ruby's syntax, features, standard libraries, etc. Anything that ships with Ruby 2.0 is fair game, new or old.

    Three contestants of high Ruby skill will compete to score points with their arcane knowledge of our favorite language. There will be a prize for the winner of the game

    Help us caption & translate this video!

    http://amara.org/v/FG9A/
  video_provider: youtube
  video_id: E8YI7hUUSys
